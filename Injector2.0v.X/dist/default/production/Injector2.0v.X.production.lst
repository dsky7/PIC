

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Feb 28 23:25:58 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000E                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0015                     	;# 
    61  0016                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001B                     	;# 
    68  001C                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  008C                     	;# 
    72  008E                     	;# 
    73  0091                     	;# 
    74  0092                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0097                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  010C                     	;# 
    87  010E                     	;# 
    88  0111                     	;# 
    89  0112                     	;# 
    90  0113                     	;# 
    91  0114                     	;# 
    92  0115                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  0118                     	;# 
    96  0119                     	;# 
    97  011A                     	;# 
    98  011B                     	;# 
    99  011D                     	;# 
   100  011D                     	;# 
   101  018C                     	;# 
   102  018E                     	;# 
   103  0191                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0194                     	;# 
   110  0195                     	;# 
   111  0196                     	;# 
   112  0199                     	;# 
   113  019A                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019C                     	;# 
   119  019C                     	;# 
   120  019D                     	;# 
   121  019E                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  020E                     	;# 
   125  0211                     	;# 
   126  0211                     	;# 
   127  0212                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0213                     	;# 
   131  0214                     	;# 
   132  0214                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  0291                     	;# 
   141  0291                     	;# 
   142  0292                     	;# 
   143  0293                     	;# 
   144  0294                     	;# 
   145  0295                     	;# 
   146  0295                     	;# 
   147  0296                     	;# 
   148  0391                     	;# 
   149  0392                     	;# 
   150  0393                     	;# 
   151  039A                     	;# 
   152  039C                     	;# 
   153  039D                     	;# 
   154  039E                     	;# 
   155  039F                     	;# 
   156  0FE4                     	;# 
   157  0FE5                     	;# 
   158  0FE6                     	;# 
   159  0FE7                     	;# 
   160  0FE8                     	;# 
   161  0FE9                     	;# 
   162  0FEA                     	;# 
   163  0FEB                     	;# 
   164  0FED                     	;# 
   165  0FEE                     	;# 
   166  0FEF                     	;# 
   167  000B                     _INTCONbits	set	11
   168  0011                     _PIR1bits	set	17
   169  000C                     _PORTAbits	set	12
   170  000E                     _PORTCbits	set	14
   171  001B                     _PR2	set	27
   172  0018                     _T1CON	set	24
   173  0018                     _T1CONbits	set	24
   174  001C                     _T2CONbits	set	28
   175  0017                     _TMR1H	set	23
   176  0016                     _TMR1L	set	22
   177  009D                     _ADCON0	set	157
   178  009E                     _ADCON1	set	158
   179  009C                     _ADRESH	set	156
   180  009B                     _ADRESL	set	155
   181  0099                     _OSCCONbits	set	153
   182  0091                     _PIE1bits	set	145
   183  008C                     _TRISA	set	140
   184  008E                     _TRISC	set	142
   185  010C                     _LATA	set	268
   186  010C                     _LATAbits	set	268
   187  010E                     _LATC	set	270
   188  010E                     _LATCbits	set	270
   189  018C                     _ANSELA	set	396
   190  018E                     _ANSELC	set	398
   191  0293                     _CCP1CON	set	659
   192  0293                     _CCP1CONbits	set	659
   193  0291                     _CCPR1L	set	657
   194  0393                     _IOCAFbits	set	915
   195  0392                     _IOCANbits	set	914
   196                           
   197                           	psect	text0
   198  0000                     __ptext0:	
   199                           ; #config settings
   200                           
   201                           
   202                           ;psect for function i1_CheckStatus
   203  0000                     
   204                           	psect	cinit
   205  004E                     start_initialization:	
   206  004E                     __initialization:	
   207                           
   208                           ; Clear objects allocated to BANK0
   209  004E  3049               	movlw	low __pbssBANK0
   210  004F  0084               	movwf	4
   211  0050  3000               	movlw	high __pbssBANK0
   212  0051  0085               	movwf	5
   213  0052  3016               	movlw	22
   214  0053  26EF               	fcall	clear_ram0
   215  0054                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218  0054                     __end_of__initialization:	
   219  0054  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   220  0055  0020               	movlb	0
   221  0056  2857               	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	bssBANK0
   224  0049                     __pbssBANK0:	
   225  0049                     _AdcRes:	
   226  0049                     	ds	2
   227  004B                     _MyCNT:	
   228  004B                     	ds	2
   229  004D                     _cntChargeNon:	
   230  004D                     	ds	2
   231  004F                     _i1:	
   232  004F                     	ds	2
   233  0051                     _vBattery:	
   234  0051                     	ds	2
   235  0053                     _B:	
   236  0053                     	ds	1
   237  0054                     _BeepStatus:	
   238  0054                     	ds	1
   239  0055                     _ChargeStatus:	
   240  0055                     	ds	1
   241  0056                     _G:	
   242  0056                     	ds	1
   243  0057                     _LastChargeStatus:	
   244  0057                     	ds	1
   245  0058                     _MyBuff:	
   246  0058                     	ds	1
   247  0059                     _R:	
   248  0059                     	ds	1
   249  005A                     _Status:	
   250  005A                     	ds	1
   251  005B                     _cnt:	
   252  005B                     	ds	1
   253  005C                     _cntCharge:	
   254  005C                     	ds	1
   255  005D                     _fDsky:	
   256  005D                     	ds	1
   257  005E                     _fLED:	
   258  005E                     	ds	1
   259                           
   260                           	psect	clrtext
   261  06EF                     clear_ram0:	
   262                           ;	Called with FSR0 containing the base address, and
   263                           ;	WREG with the size to clear
   264                           
   265  06EF  0064               	clrwdt	;clear the watchdog before getting into this loop
   266  06F0                     clrloop0:	
   267  06F0  0180               	clrf	0	;clear RAM location pointed to by FSR
   268  06F1  3101               	addfsr 0,1
   269  06F2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   270  06F3  2EF0               	goto	clrloop0	;have we reached the end yet?
   271  06F4  3400               	retlw	0	;all done for this memory range, return
   272                           
   273                           	psect	cstackBANK1
   274  00A0                     __pcstackBANK1:	
   275  00A0                     main@nSwHoldingCount:	
   276                           
   277                           ; 1 bytes @ 0x0
   278  00A0                     	ds	1
   279  00A1                     main@nSwStableCount:	
   280                           
   281                           ; 1 bytes @ 0x1
   282  00A1                     	ds	1
   283  00A2                     main@nBeepRepeatCount:	
   284                           
   285                           ; 1 bytes @ 0x2
   286  00A2                     	ds	1
   287  00A3                     main@bSwFixed:	
   288                           
   289                           ; 1 bytes @ 0x3
   290  00A3                     	ds	1
   291  00A4                     main@checkv:	
   292                           
   293                           ; 1 bytes @ 0x4
   294  00A4                     	ds	1
   295  00A5                     main@bStay:	
   296                           
   297                           ; 1 bytes @ 0x5
   298  00A5                     	ds	1
   299  00A6                     main@bSwHolding:	
   300                           
   301                           ; 1 bytes @ 0x6
   302  00A6                     	ds	1
   303  00A7                     main@nBeepLengthCount:	
   304                           
   305                           ; 1 bytes @ 0x7
   306  00A7                     	ds	1
   307  00A8                     main@bBeep:	
   308                           
   309                           ; 1 bytes @ 0x8
   310  00A8                     	ds	1
   311  00A9                     main@nSwStat:	
   312                           
   313                           ; 1 bytes @ 0x9
   314  00A9                     	ds	1
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:	
   318  0070                     ?_StopBeep:	
   319  0070                     ?_StartBeepLow:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_Inject:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_StartBeepHigh:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_B_LED_ON:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?_B_LED_OFF:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_Data1:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_Data0:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_CheckStatus:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_StatusDisplay1:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_StatusDisplayADC:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_StartStatus:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_isr:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?i1_Data1:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ??i1_Data1:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?i1_Data0:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ??i1_Data0:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?i1_SendLED:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?i1_CheckStatus:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ??i1_CheckStatus:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?i1_StatusDisplayADC:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0070                     ?_CheckVoltage:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ?i1_BatteryCheckVoltage:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?i1___ftpack:	
   386                           ; 2 bytes @ 0x0
   387                           
   388  0070                     i1SendLED@num:	
   389                           ; 3 bytes @ 0x0
   390                           
   391  0070                     i1___ftpack@arg:	
   392                           ; 2 bytes @ 0x0
   393                           
   394                           
   395                           ; 3 bytes @ 0x0
   396  0070                     	ds	2
   397  0072                     ??i1_SendLED:	
   398  0072                     ??i1_BatteryCheckVoltage:	
   399                           ; 0 bytes @ 0x2
   400                           
   401                           
   402                           ; 0 bytes @ 0x2
   403  0072                     	ds	1
   404  0073                     i1___ftpack@exp:	
   405  0073                     i1SendLED@loopNum:	
   406                           ; 1 bytes @ 0x3
   407                           
   408                           
   409                           ; 2 bytes @ 0x3
   410  0073                     	ds	1
   411  0074                     i1___ftpack@sign:	
   412                           
   413                           ; 1 bytes @ 0x4
   414  0074                     	ds	1
   415  0075                     ??i1___ftpack:	
   416  0075                     i1SendLED@loop8:	
   417                           ; 0 bytes @ 0x5
   418                           
   419                           
   420                           ; 2 bytes @ 0x5
   421  0075                     	ds	2
   422  0077                     i1SendLED@comp:	
   423                           
   424                           ; 2 bytes @ 0x7
   425  0077                     	ds	1
   426  0078                     ?i1___lwtoft:	
   427  0078                     i1___lwtoft@c:	
   428                           ; 3 bytes @ 0x8
   429                           
   430                           
   431                           ; 2 bytes @ 0x8
   432  0078                     	ds	1
   433  0079                     ?i1_SerialLED:	
   434  0079                     i1SerialLED@g:	
   435                           ; 0 bytes @ 0x9
   436                           
   437                           
   438                           ; 1 bytes @ 0x9
   439  0079                     	ds	1
   440  007A                     i1SerialLED@b:	
   441                           
   442                           ; 1 bytes @ 0xA
   443  007A                     	ds	1
   444  007B                     ??i1_SerialLED:	
   445  007B                     ??i1___lwtoft:	
   446                           ; 0 bytes @ 0xB
   447                           
   448                           
   449                           ; 0 bytes @ 0xB
   450  007B                     	ds	2
   451  007D                     i1SerialLED@r:	
   452                           
   453                           ; 1 bytes @ 0xD
   454  007D                     	ds	1
   455                           
   456                           	psect	cstackBANK0
   457  0020                     __pcstackBANK0:	
   458  0020                     ?i1___ftge:	
   459  0020                     i1___ftge@ff1:	
   460                           ; 1 bit 
   461                           
   462                           
   463                           ; 3 bytes @ 0x0
   464  0020                     	ds	3
   465  0023                     i1___ftge@ff2:	
   466                           
   467                           ; 3 bytes @ 0x3
   468  0023                     	ds	3
   469  0026                     ??i1___ftge:	
   470                           
   471                           ; 0 bytes @ 0x6
   472  0026                     	ds	3
   473  0029                     ??i1_StatusDisplayADC:	
   474                           
   475                           ; 0 bytes @ 0x9
   476  0029                     	ds	1
   477  002A                     ??_isr:	
   478                           
   479                           ; 0 bytes @ 0xA
   480  002A                     	ds	2
   481  002C                     ??_CheckVoltage:	
   482  002C                     ??_B_LED_ON:	
   483                           ; 0 bytes @ 0xC
   484                           
   485  002C                     ??_B_LED_OFF:	
   486                           ; 0 bytes @ 0xC
   487                           
   488  002C                     ?_delay_ms:	
   489                           ; 0 bytes @ 0xC
   490                           
   491  002C                     ??_Data1:	
   492                           ; 0 bytes @ 0xC
   493                           
   494  002C                     ??_Data0:	
   495                           ; 0 bytes @ 0xC
   496                           
   497  002C                     ?_SendLED:	
   498                           ; 0 bytes @ 0xC
   499                           
   500  002C                     ??_CheckStatus:	
   501                           ; 0 bytes @ 0xC
   502                           
   503  002C                     ?_BatteryCheckVoltage:	
   504                           ; 0 bytes @ 0xC
   505                           
   506  002C                     ?___ftpack:	
   507                           ; 2 bytes @ 0xC
   508                           
   509  002C                     delay_ms@time:	
   510                           ; 3 bytes @ 0xC
   511                           
   512  002C                     SendLED@num:	
   513                           ; 2 bytes @ 0xC
   514                           
   515  002C                     CheckVoltage@ad2:	
   516                           ; 2 bytes @ 0xC
   517                           
   518  002C                     ___ftpack@arg:	
   519                           ; 2 bytes @ 0xC
   520                           
   521                           
   522                           ; 3 bytes @ 0xC
   523  002C                     	ds	2
   524  002E                     ??_BatteryCheckVoltage:	
   525  002E                     ??_delay_ms:	
   526                           ; 0 bytes @ 0xE
   527                           
   528  002E                     ??_SendLED:	
   529                           ; 0 bytes @ 0xE
   530                           
   531  002E                     CheckVoltage@thresh:	
   532                           ; 0 bytes @ 0xE
   533                           
   534                           
   535                           ; 2 bytes @ 0xE
   536  002E                     	ds	1
   537  002F                     ___ftpack@exp:	
   538  002F                     SendLED@loopNum:	
   539                           ; 1 bytes @ 0xF
   540                           
   541                           
   542                           ; 2 bytes @ 0xF
   543  002F                     	ds	1
   544  0030                     ___ftpack@sign:	
   545                           
   546                           ; 1 bytes @ 0x10
   547  0030                     	ds	1
   548  0031                     ??___ftpack:	
   549  0031                     SendLED@loop8:	
   550                           ; 0 bytes @ 0x11
   551                           
   552                           
   553                           ; 2 bytes @ 0x11
   554  0031                     	ds	2
   555  0033                     SendLED@comp:	
   556                           
   557                           ; 2 bytes @ 0x13
   558  0033                     	ds	1
   559  0034                     ?___lwtoft:	
   560  0034                     ___lwtoft@c:	
   561                           ; 3 bytes @ 0x14
   562                           
   563                           
   564                           ; 2 bytes @ 0x14
   565  0034                     	ds	1
   566  0035                     ?_SerialLED:	
   567  0035                     SerialLED@g:	
   568                           ; 0 bytes @ 0x15
   569                           
   570                           
   571                           ; 1 bytes @ 0x15
   572  0035                     	ds	1
   573  0036                     SerialLED@b:	
   574                           
   575                           ; 1 bytes @ 0x16
   576  0036                     	ds	1
   577  0037                     ??_SerialLED:	
   578  0037                     ??___lwtoft:	
   579                           ; 0 bytes @ 0x17
   580                           
   581                           
   582                           ; 0 bytes @ 0x17
   583  0037                     	ds	1
   584  0038                     ?___ftge:	
   585  0038                     ___ftge@ff1:	
   586                           ; 1 bit 
   587                           
   588                           
   589                           ; 3 bytes @ 0x18
   590  0038                     	ds	1
   591  0039                     SerialLED@r:	
   592                           
   593                           ; 1 bytes @ 0x19
   594  0039                     	ds	1
   595  003A                     ??_StopBeep:	
   596  003A                     ??_StartBeepLow:	
   597                           ; 0 bytes @ 0x1A
   598                           
   599  003A                     ??_StartBeepHigh:	
   600                           ; 0 bytes @ 0x1A
   601                           
   602  003A                     ??_StatusDisplay1:	
   603                           ; 0 bytes @ 0x1A
   604                           
   605                           
   606                           ; 0 bytes @ 0x1A
   607  003A                     	ds	1
   608  003B                     ___ftge@ff2:	
   609                           
   610                           ; 3 bytes @ 0x1B
   611  003B                     	ds	3
   612  003E                     ??___ftge:	
   613                           
   614                           ; 0 bytes @ 0x1E
   615  003E                     	ds	3
   616  0041                     ??_Inject:	
   617  0041                     ??_StatusDisplayADC:	
   618                           ; 0 bytes @ 0x21
   619                           
   620                           
   621                           ; 0 bytes @ 0x21
   622  0041                     	ds	1
   623  0042                     ??_StartStatus:	
   624                           
   625                           ; 0 bytes @ 0x22
   626  0042                     	ds	1
   627  0043                     ?_main:	
   628  0043                     main@argc:	
   629                           ; 2 bytes @ 0x23
   630                           
   631                           
   632                           ; 2 bytes @ 0x23
   633  0043                     	ds	2
   634  0045                     main@argv:	
   635                           
   636                           ; 2 bytes @ 0x25
   637  0045                     	ds	2
   638  0047                     ??_main:	
   639                           
   640                           ; 0 bytes @ 0x27
   641  0047                     	ds	2
   642                           
   643                           	psect	maintext
   644  0057                     __pmaintext:	
   645 ;;
   646 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   647 ;;
   648 ;; *************** function _main *****************
   649 ;; Defined at:
   650 ;;		line 204 in file "main.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  argc            2   35[BANK0 ] int 
   653 ;;  argv            2   37[BANK0 ] PTR PTR unsigned char 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  nSwStat         1    9[BANK1 ] unsigned char 
   656 ;;  bBeep           1    8[BANK1 ] unsigned char 
   657 ;;  nBeepLengthC    1    7[BANK1 ] unsigned char 
   658 ;;  bSwHolding      1    6[BANK1 ] unsigned char 
   659 ;;  bStay           1    5[BANK1 ] unsigned char 
   660 ;;  checkv          1    4[BANK1 ] unsigned char 
   661 ;;  bSwFixed        1    3[BANK1 ] unsigned char 
   662 ;;  nBeepRepeatC    1    2[BANK1 ] unsigned char 
   663 ;;  nSwStableCou    1    1[BANK1 ] unsigned char 
   664 ;;  nSwHoldingCo    1    0[BANK1 ] unsigned char 
   665 ;;  i               1    0        unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  2   35[BANK0 ] int 
   668 ;; Registers used:
   669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 17F/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1
   675 ;;      Params:         0       4       0
   676 ;;      Locals:         0       0      10
   677 ;;      Temps:          0       2       0
   678 ;;      Totals:         0       6      10
   679 ;;Total ram usage:       16 bytes
   680 ;; Hardware stack levels required when called:   10
   681 ;; This function calls:
   682 ;;		_CheckVoltage
   683 ;;		_Inject
   684 ;;		_SerialLED
   685 ;;		_StartBeepHigh
   686 ;;		_StartBeepLow
   687 ;;		_StartStatus
   688 ;;		_StatusDisplay1
   689 ;;		_StopBeep
   690 ;;		_delay_ms
   691 ;; This function is called by:
   692 ;;		Startup code after reset
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _main
   698  0057                     _main:	
   699                           
   700                           ;main.c: 206: unsigned char i, checkv;
   701                           ;main.c: 208: unsigned char nSwStat = 0, nSwStableCount = 0, bSwFixed = 0, bSwHolding = 
      +                          0;
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   705  0057  0021               	movlb	1	; select bank1
   706  0058  01A9               	clrf	main@nSwStat^(0+128)
   707  0059  01A1               	clrf	main@nSwStableCount^(0+128)
   708  005A  01A3               	clrf	main@bSwFixed^(0+128)
   709  005B  01A6               	clrf	main@bSwHolding^(0+128)
   710                           
   711                           ;main.c: 209: unsigned char nSwHoldingCount = 0, bStay = 0, bBeep = 0, nBeepRepeatCount 
      +                          = 0, nBeepLengthCount = 0;
   712  005C  01A0               	clrf	main@nSwHoldingCount^(0+128)
   713  005D  01A5               	clrf	main@bStay^(0+128)
   714  005E  01A8               	clrf	main@bBeep^(0+128)
   715  005F  01A2               	clrf	main@nBeepRepeatCount^(0+128)
   716  0060  01A7               	clrf	main@nBeepLengthCount^(0+128)
   717                           
   718                           ;main.c: 211: OSCCONbits.IRCF = 0b0100;
   719  0061  0819               	movf	25,w	;volatile
   720  0062  3987               	andlw	-121
   721  0063  3820               	iorlw	32
   722  0064  0099               	movwf	25	;volatile
   723                           
   724                           ;main.c: 216: LATA = 0b00000000;
   725  0065  0022               	movlb	2	; select bank2
   726  0066  018C               	clrf	12	;volatile
   727                           
   728                           ;main.c: 217: LATC = 0b00000000;
   729  0067  018E               	clrf	14	;volatile
   730                           
   731                           ;main.c: 218: TRISA = 0b11111100;
   732  0068  30FC               	movlw	252
   733  0069  0021               	movlb	1	; select bank1
   734  006A  008C               	movwf	12	;volatile
   735                           
   736                           ;main.c: 219: TRISC = 0b11000111;
   737  006B  30C7               	movlw	199
   738  006C  008E               	movwf	14	;volatile
   739                           
   740                           ;main.c: 220: ANSELA = 0b00000000;
   741  006D  0023               	movlb	3	; select bank3
   742  006E  018C               	clrf	12	;volatile
   743                           
   744                           ;main.c: 221: ANSELC = 0b00000110;
   745  006F  3006               	movlw	6
   746  0070  008E               	movwf	14	;volatile
   747                           
   748                           ;main.c: 223: ADCON1 = 0b11110000;
   749  0071  30F0               	movlw	240
   750  0072  0021               	movlb	1	; select bank1
   751  0073  009E               	movwf	30	;volatile
   752                           
   753                           ;main.c: 224: TMR1H = -1*32000>>8;
   754  0074  3083               	movlw	131
   755  0075  0020               	movlb	0	; select bank0
   756  0076  0097               	movwf	23	;volatile
   757                           
   758                           ;main.c: 225: TMR1L = -1*32000&0x00ff;
   759  0077  0196               	clrf	22	;volatile
   760                           
   761                           ;main.c: 227: StartStatus();
   762  0078  263D               	fcall	_StartStatus
   763                           
   764                           ;main.c: 228: delay_ms(50);
   765  0079  3032               	movlw	50
   766  007A  0020               	movlb	0	; select bank0
   767  007B  00AC               	movwf	delay_ms@time
   768  007C  3000               	movlw	0
   769  007D  00AD               	movwf	delay_ms@time+1
   770  007E  2659               	fcall	_delay_ms
   771                           
   772                           ;main.c: 229: SerialLED(0,0,0);
   773  007F  0020               	movlb	0	; select bank0
   774  0080  01B5               	clrf	SerialLED@g
   775  0081  01B6               	clrf	SerialLED@b
   776  0082  3000               	movlw	0
   777  0083  251F               	fcall	_SerialLED
   778                           
   779                           ;main.c: 230: delay_ms(50);
   780  0084  3032               	movlw	50
   781  0085  0020               	movlb	0	; select bank0
   782  0086  00AC               	movwf	delay_ms@time
   783  0087  3000               	movlw	0
   784  0088  00AD               	movwf	delay_ms@time+1
   785  0089  2659               	fcall	_delay_ms
   786                           
   787                           ;main.c: 232: StartStatus();
   788  008A  263D               	fcall	_StartStatus
   789                           
   790                           ;main.c: 233: delay_ms(50);
   791  008B  3032               	movlw	50
   792  008C  0020               	movlb	0	; select bank0
   793  008D  00AC               	movwf	delay_ms@time
   794  008E  3000               	movlw	0
   795  008F  00AD               	movwf	delay_ms@time+1
   796  0090  2659               	fcall	_delay_ms
   797                           
   798                           ;main.c: 234: SerialLED(0,0,0);
   799  0091  0020               	movlb	0	; select bank0
   800  0092  01B5               	clrf	SerialLED@g
   801  0093  01B6               	clrf	SerialLED@b
   802  0094  3000               	movlw	0
   803  0095  251F               	fcall	_SerialLED
   804                           
   805                           ;main.c: 235: delay_ms(100);
   806  0096  3064               	movlw	100
   807  0097  0020               	movlb	0	; select bank0
   808  0098  00AC               	movwf	delay_ms@time
   809  0099  3000               	movlw	0
   810  009A  00AD               	movwf	delay_ms@time+1
   811  009B  2659               	fcall	_delay_ms
   812                           
   813                           ;main.c: 238: PIE1bits.TMR1IE = 1;
   814  009C  0021               	movlb	1	; select bank1
   815  009D  1411               	bsf	17,0	;volatile
   816                           
   817                           ;main.c: 240: T1CON = 0b00110001;
   818  009E  3031               	movlw	49
   819  009F  0020               	movlb	0	; select bank0
   820  00A0  0098               	movwf	24	;volatile
   821                           
   822                           ;main.c: 243: IOCANbits.IOCAN5 = 1;
   823  00A1  0027               	movlb	7	; select bank7
   824  00A2  1692               	bsf	18,5	;volatile
   825                           
   826                           ;main.c: 245: INTCONbits.IOCIE = 1;
   827  00A3  158B               	bsf	11,3	;volatile
   828                           
   829                           ;main.c: 247: INTCONbits.PEIE = 1;
   830  00A4  170B               	bsf	11,6	;volatile
   831                           
   832                           ;main.c: 248: INTCONbits.GIE = 1;
   833  00A5  178B               	bsf	11,7	;volatile
   834  00A6                     l2610:	
   835                           ;main.c: 256: while(1)
   836                           
   837                           
   838                           ;main.c: 257: {
   839                           ;main.c: 258: if(PORTAbits.RA5 == nSwStat)
   840  00A6  0020               	movlb	0	; select bank0
   841  00A7  0E0C               	swapf	12,w	;volatile
   842  00A8  0C89               	rrf	9,f
   843  00A9  3901               	andlw	1
   844  00AA  0021               	movlb	1	; select bank1
   845  00AB  0629               	xorwf	main@nSwStat^(0+128),w
   846  00AC  1D03               	skipz
   847  00AD  28BB               	goto	l2616
   848                           
   849                           ;main.c: 259: {
   850                           ;main.c: 260: if(++nSwStableCount >= 5) bSwFixed = 1;
   851  00AE  3001               	movlw	1
   852  00AF  0020               	movlb	0	; select bank0
   853  00B0  00C7               	movwf	??_main
   854  00B1  0847               	movf	??_main,w
   855  00B2  0021               	movlb	1	; select bank1
   856  00B3  07A1               	addwf	main@nSwStableCount^(0+128),f
   857  00B4  3005               	movlw	5
   858  00B5  0221               	subwf	main@nSwStableCount^(0+128),w
   859  00B6  1C03               	skipc
   860  00B7  28C5               	goto	l2620
   861  00B8  01A3               	clrf	main@bSwFixed^(0+128)
   862  00B9  0AA3               	incf	main@bSwFixed^(0+128),f
   863                           
   864                           ;main.c: 261: }
   865  00BA  28C5               	goto	l2620
   866  00BB                     l2616:	
   867                           
   868                           ;main.c: 262: else
   869                           ;main.c: 263: {
   870                           ;main.c: 264: nSwStableCount = 0;
   871  00BB  01A1               	clrf	main@nSwStableCount^(0+128)
   872                           
   873                           ;main.c: 265: bSwFixed = 0;
   874  00BC  01A3               	clrf	main@bSwFixed^(0+128)
   875                           
   876                           ;main.c: 266: nSwStat = 1 - nSwStat;
   877  00BD  0329               	decf	main@nSwStat^(0+128),w
   878  00BE  3AFF               	xorlw	255
   879  00BF  3E01               	addlw	1
   880  00C0  0020               	movlb	0	; select bank0
   881  00C1  00C7               	movwf	??_main
   882  00C2  0847               	movf	??_main,w
   883  00C3  0021               	movlb	1	; select bank1
   884  00C4  00A9               	movwf	main@nSwStat^(0+128)
   885  00C5                     l2620:	
   886                           
   887                           ;main.c: 267: }
   888                           ;main.c: 268: if(bSwFixed)
   889  00C5  0823               	movf	main@bSwFixed^(0+128),w
   890  00C6  1903               	btfsc	3,2
   891  00C7  2924               	goto	l2678
   892                           
   893                           ;main.c: 269: {
   894                           ;main.c: 270: if(nSwStat == 1)
   895  00C8  0829               	movf	main@nSwStat^(0+128),w
   896  00C9  3A01               	xorlw	1
   897  00CA  1D03               	skipz
   898  00CB  28D6               	goto	l2636
   899                           
   900                           ;main.c: 271: {
   901                           ;main.c: 272: if(bBeep)
   902  00CC  0828               	movf	main@bBeep^(0+128),w
   903  00CD  1903               	btfsc	3,2
   904  00CE  28D2               	goto	l2630
   905                           
   906                           ;main.c: 273: {
   907                           ;main.c: 274: StopBeep();
   908  00CF  269F               	fcall	_StopBeep
   909                           
   910                           ;main.c: 275: bBeep = 0;
   911  00D0  0021               	movlb	1	; select bank1
   912  00D1  01A8               	clrf	main@bBeep^(0+128)
   913  00D2                     l2630:	
   914                           
   915                           ;main.c: 276: }
   916                           ;main.c: 277: bSwHolding = 0;
   917  00D2  01A6               	clrf	main@bSwHolding^(0+128)
   918                           
   919                           ;main.c: 278: nSwHoldingCount = 0;
   920  00D3  01A0               	clrf	main@nSwHoldingCount^(0+128)
   921                           
   922                           ;main.c: 279: bStay = 0;
   923  00D4  01A5               	clrf	main@bStay^(0+128)
   924                           
   925                           ;main.c: 280: }
   926  00D5  2924               	goto	l2678
   927  00D6                     l2636:	
   928                           
   929                           ;main.c: 281: else
   930                           ;main.c: 282: {
   931                           ;main.c: 283: if(!bSwHolding)
   932  00D6  08A6               	movf	main@bSwHolding^(0+128),f
   933  00D7  1D03               	skipz
   934  00D8  2924               	goto	l2678
   935                           
   936                           ;main.c: 284: {
   937                           ;main.c: 285: bSwHolding = 1;
   938  00D9  01A6               	clrf	main@bSwHolding^(0+128)
   939  00DA  0AA6               	incf	main@bSwHolding^(0+128),f
   940                           
   941                           ;main.c: 286: checkv = CheckVoltage();
   942  00DB  2556               	fcall	_CheckVoltage
   943  00DC  0020               	movlb	0	; select bank0
   944  00DD  00C7               	movwf	??_main
   945  00DE  0847               	movf	??_main,w
   946  00DF  0021               	movlb	1	; select bank1
   947  00E0  00A4               	movwf	main@checkv^(0+128)
   948                           
   949                           ;main.c: 287: if(checkv == 1)
   950  00E1  0824               	movf	main@checkv^(0+128),w
   951  00E2  3A01               	xorlw	1
   952  00E3  1D03               	skipz
   953  00E4  28F2               	goto	l2652
   954                           
   955                           ;main.c: 288: {
   956                           ;main.c: 289: StartBeepLow();
   957  00E5  25C0               	fcall	_StartBeepLow
   958                           
   959                           ;main.c: 290: _delay((unsigned long)((300)*(62500/4000.0)));
   960  00E6  3007               	movlw	7
   961  00E7  0020               	movlb	0	; select bank0
   962  00E8  00C8               	movwf	??_main+1
   963  00E9  3014               	movlw	20
   964  00EA  00C7               	movwf	??_main
   965  00EB                     u2677:	
   966  00EB  0BC7               	decfsz	??_main,f
   967  00EC  28EB               	goto	u2677
   968  00ED  0BC8               	decfsz	??_main+1,f
   969  00EE  28EB               	goto	u2677
   970  00EF  3200               	nop2
   971                           
   972                           ;main.c: 291: StopBeep();
   973  00F0  269F               	fcall	_StopBeep
   974  00F1  291A               	goto	l2668
   975  00F2                     l2652:	
   976                           ;main.c: 293: }
   977                           
   978                           ;main.c: 292: bStay = 1;
   979                           
   980                           
   981                           ;main.c: 294: else if(checkv == 2)
   982  00F2  0824               	movf	main@checkv^(0+128),w
   983  00F3  3A02               	xorlw	2
   984  00F4  1D03               	skipz
   985  00F5  2916               	goto	l213
   986                           
   987                           ;main.c: 295: {
   988                           ;main.c: 296: StartBeepLow();
   989  00F6  25C0               	fcall	_StartBeepLow
   990                           
   991                           ;main.c: 297: _delay((unsigned long)((300)*(62500/4000.0)));
   992  00F7  3007               	movlw	7
   993  00F8  0020               	movlb	0	; select bank0
   994  00F9  00C8               	movwf	??_main+1
   995  00FA  3014               	movlw	20
   996  00FB  00C7               	movwf	??_main
   997  00FC                     u2687:	
   998  00FC  0BC7               	decfsz	??_main,f
   999  00FD  28FC               	goto	u2687
  1000  00FE  0BC8               	decfsz	??_main+1,f
  1001  00FF  28FC               	goto	u2687
  1002  0100  3200               	nop2
  1003                           
  1004                           ;main.c: 298: StopBeep();
  1005  0101  269F               	fcall	_StopBeep
  1006                           
  1007                           ;main.c: 299: _delay((unsigned long)((100)*(62500/4000.0)));
  1008  0102  30DF               	movlw	223
  1009  0103  0020               	movlb	0	; select bank0
  1010  0104  00C7               	movwf	??_main
  1011  0105                     u2697:	
  1012  0105  3200               	nop2
  1013  0106  3200               	nop2
  1014  0107  0BC7               	decfsz	??_main,f
  1015  0108  2905               	goto	u2697
  1016                           
  1017                           ;main.c: 301: StartBeepLow();
  1018  0109  25C0               	fcall	_StartBeepLow
  1019                           
  1020                           ;main.c: 302: _delay((unsigned long)((300)*(62500/4000.0)));
  1021  010A  3007               	movlw	7
  1022  010B  0020               	movlb	0	; select bank0
  1023  010C  00C8               	movwf	??_main+1
  1024  010D  3014               	movlw	20
  1025  010E  00C7               	movwf	??_main
  1026  010F                     u2707:	
  1027  010F  0BC7               	decfsz	??_main,f
  1028  0110  290F               	goto	u2707
  1029  0111  0BC8               	decfsz	??_main+1,f
  1030  0112  290F               	goto	u2707
  1031  0113  3200               	nop2
  1032                           
  1033                           ;main.c: 303: StopBeep();
  1034  0114  269F               	fcall	_StopBeep
  1035  0115  291A               	goto	l2668
  1036  0116                     l213:	
  1037                           ;main.c: 305: }
  1038                           
  1039                           ;main.c: 304: bStay = 1;
  1040                           
  1041                           
  1042                           ;main.c: 306: else
  1043                           ;main.c: 307: {
  1044                           ;main.c: 308: if(PORTAbits.RA4)
  1045  0116  0020               	movlb	0	; select bank0
  1046  0117  1E0C               	btfss	12,4	;volatile
  1047  0118  291E               	goto	l2670
  1048                           
  1049                           ;main.c: 309: {
  1050                           ;main.c: 310: Inject();
  1051  0119  2374               	fcall	_Inject
  1052  011A                     l2668:	
  1053                           
  1054                           ;main.c: 311: bStay = 1;
  1055  011A  0021               	movlb	1	; select bank1
  1056  011B  01A5               	clrf	main@bStay^(0+128)
  1057  011C  0AA5               	incf	main@bStay^(0+128),f
  1058                           
  1059                           ;main.c: 312: }
  1060  011D  2924               	goto	l2678
  1061  011E                     l2670:	
  1062                           
  1063                           ;main.c: 313: else
  1064                           ;main.c: 314: {
  1065                           ;main.c: 315: StartBeepHigh();
  1066  011E  2620               	fcall	_StartBeepHigh
  1067                           
  1068                           ;main.c: 316: bBeep = 1;
  1069  011F  0021               	movlb	1	; select bank1
  1070  0120  01A8               	clrf	main@bBeep^(0+128)
  1071  0121  0AA8               	incf	main@bBeep^(0+128),f
  1072                           
  1073                           ;main.c: 317: nBeepRepeatCount = 0;
  1074  0122  01A2               	clrf	main@nBeepRepeatCount^(0+128)
  1075                           
  1076                           ;main.c: 318: nBeepLengthCount = 0;
  1077  0123  01A7               	clrf	main@nBeepLengthCount^(0+128)
  1078  0124                     l2678:	
  1079                           
  1080                           ;main.c: 319: }
  1081                           ;main.c: 320: }
  1082                           ;main.c: 321: }
  1083                           ;main.c: 322: }
  1084                           ;main.c: 323: }
  1085                           ;main.c: 325: if(bSwHolding && !bStay)
  1086  0124  0826               	movf	main@bSwHolding^(0+128),w
  1087  0125  1903               	btfsc	3,2
  1088  0126  2959               	goto	l2706
  1089  0127  08A5               	movf	main@bStay^(0+128),f
  1090  0128  1D03               	skipz
  1091  0129  2959               	goto	l2706
  1092                           
  1093                           ;main.c: 326: {
  1094                           ;main.c: 327: if(bBeep)
  1095  012A  0828               	movf	main@bBeep^(0+128),w
  1096  012B  1903               	btfsc	3,2
  1097  012C  293B               	goto	l2692
  1098                           
  1099                           ;main.c: 328: {
  1100                           ;main.c: 329: if(++nBeepLengthCount >= 5)
  1101  012D  3001               	movlw	1
  1102  012E  0020               	movlb	0	; select bank0
  1103  012F  00C7               	movwf	??_main
  1104  0130  0847               	movf	??_main,w
  1105  0131  0021               	movlb	1	; select bank1
  1106  0132  07A7               	addwf	main@nBeepLengthCount^(0+128),f
  1107  0133  3005               	movlw	5
  1108  0134  0227               	subwf	main@nBeepLengthCount^(0+128),w
  1109  0135  1C03               	skipc
  1110  0136  2959               	goto	l2706
  1111                           
  1112                           ;main.c: 330: {
  1113                           ;main.c: 331: StopBeep();
  1114  0137  269F               	fcall	_StopBeep
  1115                           
  1116                           ;main.c: 332: bBeep = 0;
  1117  0138  0021               	movlb	1	; select bank1
  1118  0139  01A8               	clrf	main@bBeep^(0+128)
  1119  013A  2958               	goto	l2704
  1120  013B                     l2692:	
  1121                           ;main.c: 334: }
  1122                           ;main.c: 335: }
  1123                           
  1124                           ;main.c: 333: nBeepLengthCount = 0;
  1125                           
  1126                           
  1127                           ;main.c: 336: else
  1128                           ;main.c: 337: {
  1129                           ;main.c: 338: if(++nBeepLengthCount >= 40)
  1130  013B  3001               	movlw	1
  1131  013C  0020               	movlb	0	; select bank0
  1132  013D  00C7               	movwf	??_main
  1133  013E  0847               	movf	??_main,w
  1134  013F  0021               	movlb	1	; select bank1
  1135  0140  07A7               	addwf	main@nBeepLengthCount^(0+128),f
  1136  0141  3028               	movlw	40
  1137  0142  0227               	subwf	main@nBeepLengthCount^(0+128),w
  1138  0143  1C03               	skipc
  1139  0144  2959               	goto	l2706
  1140                           
  1141                           ;main.c: 339: {
  1142                           ;main.c: 340: if(++nBeepRepeatCount >= 3)
  1143  0145  3001               	movlw	1
  1144  0146  0020               	movlb	0	; select bank0
  1145  0147  00C7               	movwf	??_main
  1146  0148  0847               	movf	??_main,w
  1147  0149  0021               	movlb	1	; select bank1
  1148  014A  07A2               	addwf	main@nBeepRepeatCount^(0+128),f
  1149  014B  3003               	movlw	3
  1150  014C  0222               	subwf	main@nBeepRepeatCount^(0+128),w
  1151  014D  1C03               	skipc
  1152  014E  2954               	goto	l2700
  1153                           
  1154                           ;main.c: 341: {
  1155                           ;main.c: 342: Inject();
  1156  014F  2374               	fcall	_Inject
  1157                           
  1158                           ;main.c: 343: bStay = 1;
  1159  0150  0021               	movlb	1	; select bank1
  1160  0151  01A5               	clrf	main@bStay^(0+128)
  1161  0152  0AA5               	incf	main@bStay^(0+128),f
  1162                           
  1163                           ;main.c: 344: }
  1164  0153  2959               	goto	l2706
  1165  0154                     l2700:	
  1166                           
  1167                           ;main.c: 345: else
  1168                           ;main.c: 346: {
  1169                           ;main.c: 347: StartBeepHigh();
  1170  0154  2620               	fcall	_StartBeepHigh
  1171                           
  1172                           ;main.c: 348: bBeep = 1;
  1173  0155  0021               	movlb	1	; select bank1
  1174  0156  01A8               	clrf	main@bBeep^(0+128)
  1175  0157  0AA8               	incf	main@bBeep^(0+128),f
  1176  0158                     l2704:	
  1177                           
  1178                           ;main.c: 349: nBeepLengthCount = 0;
  1179  0158  01A7               	clrf	main@nBeepLengthCount^(0+128)
  1180  0159                     l2706:	
  1181                           
  1182                           ;main.c: 350: }
  1183                           ;main.c: 351: }
  1184                           ;main.c: 352: }
  1185                           ;main.c: 353: }
  1186                           ;main.c: 354: _delay((unsigned long)((10)*(62500/4000.0)));
  1187  0159  3033               	movlw	51
  1188  015A  0020               	movlb	0	; select bank0
  1189  015B  00C7               	movwf	??_main
  1190  015C                     u2717:	
  1191  015C  0BC7               	decfsz	??_main,f
  1192  015D  295C               	goto	u2717
  1193  015E  3200               	nop2	;nop
  1194                           
  1195                           ;main.c: 355: StatusDisplay1();
  1196  015F  2465               	fcall	_StatusDisplay1
  1197  0160  28A6               	goto	l2610
  1198  0161                     __end_of_main:	
  1199                           ;main.c: 356: }
  1200                           ;main.c: 357: return (0);
  1201                           ;	Return value of _main is never used
  1202                           
  1203                           
  1204                           	psect	text1
  1205  0465                     __ptext1:	
  1206 ;; *************** function _StatusDisplay1 *****************
  1207 ;; Defined at:
  1208 ;;		line 153 in file "main.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;		None               void
  1215 ;; Registers used:
  1216 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1
  1222 ;;      Params:         0       0       0
  1223 ;;      Locals:         0       0       0
  1224 ;;      Temps:          0       2       0
  1225 ;;      Totals:         0       2       0
  1226 ;;Total ram usage:        2 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    8
  1229 ;; This function calls:
  1230 ;;		_CheckStatus
  1231 ;;		_SerialLED
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _StatusDisplay1
  1239  0465                     _StatusDisplay1:	
  1240                           
  1241                           ;main.c: 154: CheckStatus();
  1242                           
  1243                           ;incstack = 0
  1244                           ; Regs used in _StatusDisplay1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1245  0465  25E4               	fcall	_CheckStatus
  1246                           
  1247                           ;main.c: 155: if(ChargeStatus!=LastChargeStatus){
  1248  0466  0020               	movlb	0	; select bank0
  1249  0467  0855               	movf	_ChargeStatus,w
  1250  0468  0657               	xorwf	_LastChargeStatus,w
  1251  0469  1903               	skipnz
  1252  046A  0008               	return
  1253                           
  1254                           ;main.c: 156: LastChargeStatus = ChargeStatus;
  1255  046B  0855               	movf	_ChargeStatus,w
  1256  046C  00BA               	movwf	??_StatusDisplay1
  1257  046D  083A               	movf	??_StatusDisplay1,w
  1258  046E  00D7               	movwf	_LastChargeStatus
  1259                           
  1260                           ;main.c: 158: if(ChargeStatus == 2){
  1261  046F  0855               	movf	_ChargeStatus,w
  1262  0470  3A02               	xorlw	2
  1263  0471  1D03               	skipz
  1264  0472  2C87               	goto	l2476
  1265                           
  1266                           ;main.c: 159: _delay((unsigned long)((300)*(62500/4000.0)));
  1267  0473  3007               	movlw	7
  1268  0474  00BB               	movwf	??_StatusDisplay1+1
  1269  0475  3014               	movlw	20
  1270  0476  00BA               	movwf	??_StatusDisplay1
  1271  0477                     u2727:	
  1272  0477  0BBA               	decfsz	??_StatusDisplay1,f
  1273  0478  2C77               	goto	u2727
  1274  0479  0BBB               	decfsz	??_StatusDisplay1+1,f
  1275  047A  2C77               	goto	u2727
  1276  047B  3200               	nop2
  1277                           
  1278                           ;main.c: 160: CheckStatus();if(ChargeStatus==2){SerialLED(20,0,0);}
  1279  047C  25E4               	fcall	_CheckStatus
  1280  047D  0020               	movlb	0	; select bank0
  1281  047E  0855               	movf	_ChargeStatus,w
  1282  047F  3A02               	xorlw	2
  1283  0480  1D03               	skipz
  1284  0481  0008               	return
  1285  0482  01B5               	clrf	SerialLED@g
  1286  0483  01B6               	clrf	SerialLED@b
  1287  0484  3014               	movlw	20
  1288  0485  251F               	fcall	_SerialLED
  1289                           
  1290                           ;main.c: 163: }else if(ChargeStatus == 3){
  1291  0486  0008               	return
  1292  0487                     l2476:	
  1293  0487  0020               	movlb	0	; select bank0
  1294  0488  0855               	movf	_ChargeStatus,w
  1295  0489  3A03               	xorlw	3
  1296  048A  1D03               	skipz
  1297  048B  2C94               	goto	l2480
  1298                           
  1299                           ;main.c: 164: SerialLED(0,0,25);
  1300  048C  01B5               	clrf	SerialLED@g
  1301  048D  3019               	movlw	25
  1302  048E  00BA               	movwf	??_StatusDisplay1
  1303  048F  083A               	movf	??_StatusDisplay1,w
  1304  0490  00B6               	movwf	SerialLED@b
  1305  0491  3000               	movlw	0
  1306  0492  251F               	fcall	_SerialLED
  1307                           
  1308                           ;main.c: 165: }else if(ChargeStatus == 1){
  1309  0493  0008               	return
  1310  0494                     l2480:	
  1311  0494  0020               	movlb	0	; select bank0
  1312  0495  0855               	movf	_ChargeStatus,w
  1313  0496  3A01               	xorlw	1
  1314  0497  1D03               	skipz
  1315  0498  0008               	return
  1316                           
  1317                           ;main.c: 166: if(BeepStatus!=1){
  1318  0499  0854               	movf	_BeepStatus,w
  1319  049A  3A01               	xorlw	1
  1320  049B  1903               	skipnz
  1321  049C  0008               	return
  1322                           
  1323                           ;main.c: 167: SerialLED(0,0,0);
  1324  049D  01B5               	clrf	SerialLED@g
  1325  049E  01B6               	clrf	SerialLED@b
  1326  049F  3000               	movlw	0
  1327  04A0  251F               	fcall	_SerialLED
  1328                           
  1329                           ;main.c: 168: TMR1H = (-1*8000/4 >> 8);
  1330  04A1  30F8               	movlw	248
  1331  04A2  0020               	movlb	0	; select bank0
  1332  04A3  0097               	movwf	23	;volatile
  1333                           
  1334                           ;main.c: 169: TMR1L = (-1*8000/4 & 0x00ff);
  1335  04A4  3030               	movlw	48
  1336  04A5  0096               	movwf	22	;volatile
  1337  04A6  0008               	return
  1338  04A7                     __end_of_StatusDisplay1:	
  1339                           
  1340                           	psect	text2
  1341  063D                     __ptext2:	
  1342 ;; *************** function _StartStatus *****************
  1343 ;; Defined at:
  1344 ;;		line 187 in file "main.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;		None               void
  1351 ;; Registers used:
  1352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1
  1358 ;;      Params:         0       0       0
  1359 ;;      Locals:         0       0       0
  1360 ;;      Temps:          0       0       0
  1361 ;;      Totals:         0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    9
  1365 ;; This function calls:
  1366 ;;		_CheckStatus
  1367 ;;		_SerialLED
  1368 ;;		_StatusDisplayADC
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           
  1375                           ;psect for function _StartStatus
  1376  063D                     _StartStatus:	
  1377                           
  1378                           ;main.c: 188: CheckStatus();
  1379                           
  1380                           ;incstack = 0
  1381                           ; Regs used in _StartStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1382  063D  25E4               	fcall	_CheckStatus
  1383                           
  1384                           ;main.c: 191: if(ChargeStatus == 2){
  1385  063E  0020               	movlb	0	; select bank0
  1386  063F  0855               	movf	_ChargeStatus,w
  1387  0640  3A02               	xorlw	2
  1388  0641  1D03               	skipz
  1389  0642  2E48               	goto	l2496
  1390                           
  1391                           ;main.c: 192: SerialLED(20,0,0);
  1392  0643  01B5               	clrf	SerialLED@g
  1393  0644  01B6               	clrf	SerialLED@b
  1394  0645  3014               	movlw	20
  1395  0646  251F               	fcall	_SerialLED
  1396                           
  1397                           ;main.c: 194: }else if(ChargeStatus == 3){
  1398  0647  0008               	return
  1399  0648                     l2496:	
  1400  0648  0020               	movlb	0	; select bank0
  1401  0649  0855               	movf	_ChargeStatus,w
  1402  064A  3A03               	xorlw	3
  1403  064B  1D03               	skipz
  1404  064C  2E52               	goto	l2500
  1405                           
  1406                           ;main.c: 195: SerialLED(20,0,0);
  1407  064D  01B5               	clrf	SerialLED@g
  1408  064E  01B6               	clrf	SerialLED@b
  1409  064F  3014               	movlw	20
  1410  0650  251F               	fcall	_SerialLED
  1411                           
  1412                           ;main.c: 197: }else if(ChargeStatus == 1){
  1413  0651  0008               	return
  1414  0652                     l2500:	
  1415  0652  0020               	movlb	0	; select bank0
  1416  0653  0855               	movf	_ChargeStatus,w
  1417  0654  3A01               	xorlw	1
  1418  0655  1D03               	skipz
  1419  0656  0008               	return
  1420                           
  1421                           ;main.c: 198: StatusDisplayADC();
  1422  0657  23C8               	fcall	_StatusDisplayADC
  1423  0658  0008               	return
  1424  0659                     __end_of_StartStatus:	
  1425                           
  1426                           	psect	text3
  1427  03C8                     __ptext3:	
  1428 ;; *************** function _StatusDisplayADC *****************
  1429 ;; Defined at:
  1430 ;;		line 174 in file "main.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;		None               void
  1437 ;; Registers used:
  1438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1
  1444 ;;      Params:         0       0       0
  1445 ;;      Locals:         0       0       0
  1446 ;;      Temps:          0       1       0
  1447 ;;      Totals:         0       1       0
  1448 ;;Total ram usage:        1 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    8
  1451 ;; This function calls:
  1452 ;;		_BatteryCheckVoltage
  1453 ;;		_SerialLED
  1454 ;;		___ftge
  1455 ;;		___lwtoft
  1456 ;; This function is called by:
  1457 ;;		_StartStatus
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _StatusDisplayADC
  1463  03C8                     _StatusDisplayADC:	
  1464                           
  1465                           ;main.c: 175: vBattery = BatteryCheckVoltage();
  1466                           
  1467                           ;incstack = 0
  1468                           ; Regs used in _StatusDisplayADC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1469  03C8  2671               	fcall	_BatteryCheckVoltage
  1470  03C9  0020               	movlb	0	; select bank0
  1471  03CA  082D               	movf	?_BatteryCheckVoltage+1,w
  1472  03CB  01D2               	clrf	_vBattery+1
  1473  03CC  07D2               	addwf	_vBattery+1,f
  1474  03CD  082C               	movf	?_BatteryCheckVoltage,w
  1475  03CE  01D1               	clrf	_vBattery
  1476  03CF  07D1               	addwf	_vBattery,f
  1477                           
  1478                           ;main.c: 177: if(vBattery > 0x03ff*0.37){
  1479  03D0  3041               	movlw	65
  1480  03D1  00B8               	movwf	___ftge@ff1
  1481  03D2  30BD               	movlw	189
  1482  03D3  00B9               	movwf	___ftge@ff1+1
  1483  03D4  3043               	movlw	67
  1484  03D5  00BA               	movwf	___ftge@ff1+2
  1485  03D6  0852               	movf	_vBattery+1,w
  1486  03D7  01B5               	clrf	___lwtoft@c+1
  1487  03D8  07B5               	addwf	___lwtoft@c+1,f
  1488  03D9  0851               	movf	_vBattery,w
  1489  03DA  01B4               	clrf	___lwtoft@c
  1490  03DB  07B4               	addwf	___lwtoft@c,f
  1491  03DC  26B5               	fcall	___lwtoft
  1492  03DD  0020               	movlb	0	; select bank0
  1493  03DE  0834               	movf	?___lwtoft,w
  1494  03DF  00BB               	movwf	___ftge@ff2
  1495  03E0  0835               	movf	?___lwtoft+1,w
  1496  03E1  00BC               	movwf	___ftge@ff2+1
  1497  03E2  0836               	movf	?___lwtoft+2,w
  1498  03E3  00BD               	movwf	___ftge@ff2+2
  1499  03E4  24A7               	fcall	___ftge
  1500  03E5  1803               	btfsc	3,0
  1501  03E6  2BF0               	goto	l2396
  1502                           
  1503                           ;main.c: 178: SerialLED(0,0,20);
  1504  03E7  0020               	movlb	0	; select bank0
  1505  03E8  01B5               	clrf	SerialLED@g
  1506  03E9  3014               	movlw	20
  1507  03EA  00C1               	movwf	??_StatusDisplayADC
  1508  03EB  0841               	movf	??_StatusDisplayADC,w
  1509  03EC  00B6               	movwf	SerialLED@b
  1510  03ED  3000               	movlw	0
  1511  03EE  251F               	fcall	_SerialLED
  1512                           
  1513                           ;main.c: 179: }else{
  1514  03EF  0008               	return
  1515  03F0                     l2396:	
  1516                           
  1517                           ;main.c: 180: if(vBattery > 0x03ff*0.31){
  1518  03F0  3091               	movlw	145
  1519  03F1  0020               	movlb	0	; select bank0
  1520  03F2  00B8               	movwf	___ftge@ff1
  1521  03F3  309E               	movlw	158
  1522  03F4  00B9               	movwf	___ftge@ff1+1
  1523  03F5  3043               	movlw	67
  1524  03F6  00BA               	movwf	___ftge@ff1+2
  1525  03F7  0852               	movf	_vBattery+1,w
  1526  03F8  01B5               	clrf	___lwtoft@c+1
  1527  03F9  07B5               	addwf	___lwtoft@c+1,f
  1528  03FA  0851               	movf	_vBattery,w
  1529  03FB  01B4               	clrf	___lwtoft@c
  1530  03FC  07B4               	addwf	___lwtoft@c,f
  1531  03FD  26B5               	fcall	___lwtoft
  1532  03FE  0020               	movlb	0	; select bank0
  1533  03FF  0834               	movf	?___lwtoft,w
  1534  0400  00BB               	movwf	___ftge@ff2
  1535  0401  0835               	movf	?___lwtoft+1,w
  1536  0402  00BC               	movwf	___ftge@ff2+1
  1537  0403  0836               	movf	?___lwtoft+2,w
  1538  0404  00BD               	movwf	___ftge@ff2+2
  1539  0405  24A7               	fcall	___ftge
  1540  0406  1803               	btfsc	3,0
  1541  0407  2C11               	goto	l2400
  1542                           
  1543                           ;main.c: 181: SerialLED(24,13,0);
  1544  0408  300D               	movlw	13
  1545  0409  0020               	movlb	0	; select bank0
  1546  040A  00C1               	movwf	??_StatusDisplayADC
  1547  040B  0841               	movf	??_StatusDisplayADC,w
  1548  040C  00B5               	movwf	SerialLED@g
  1549  040D  01B6               	clrf	SerialLED@b
  1550  040E  3018               	movlw	24
  1551  040F  251F               	fcall	_SerialLED
  1552                           
  1553                           ;main.c: 182: }else{
  1554  0410  0008               	return
  1555  0411                     l2400:	
  1556                           
  1557                           ;main.c: 183: SerialLED(40,0,0);
  1558  0411  0020               	movlb	0	; select bank0
  1559  0412  01B5               	clrf	SerialLED@g
  1560  0413  01B6               	clrf	SerialLED@b
  1561  0414  3028               	movlw	40
  1562  0415  251F               	fcall	_SerialLED
  1563  0416  0008               	return
  1564  0417                     __end_of_StatusDisplayADC:	
  1565                           
  1566                           	psect	text4
  1567  05E4                     __ptext4:	
  1568 ;; *************** function _CheckStatus *****************
  1569 ;; Defined at:
  1570 ;;		line 136 in file "main.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;		None               void
  1577 ;; Registers used:
  1578 ;;		wreg
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1
  1584 ;;      Params:         0       0       0
  1585 ;;      Locals:         0       0       0
  1586 ;;      Temps:          0       1       0
  1587 ;;      Totals:         0       1       0
  1588 ;;Total ram usage:        1 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    5
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_StatusDisplay1
  1595 ;;		_StartStatus
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function _CheckStatus
  1601  05E4                     _CheckStatus:	
  1602                           
  1603                           ;main.c: 137: if(PORTCbits.RC0==1){
  1604                           
  1605                           ;incstack = 0
  1606                           ; Regs used in _CheckStatus: [wreg]
  1607  05E4  0020               	movlb	0	; select bank0
  1608  05E5  1C0E               	btfss	14,0	;volatile
  1609  05E6  2DFB               	goto	l2388
  1610                           
  1611                           ;main.c: 138: if(PORTAbits.RA2==1){
  1612  05E7  1D0C               	btfss	12,2	;volatile
  1613  05E8  2DF2               	goto	l2384
  1614                           
  1615                           ;main.c: 139: if(ChargeStatus!=3){
  1616  05E9  0855               	movf	_ChargeStatus,w
  1617  05EA  3A03               	xorlw	3
  1618  05EB  1903               	skipnz
  1619  05EC  0008               	return
  1620                           
  1621                           ;main.c: 140: ChargeStatus=3;
  1622  05ED  3003               	movlw	3
  1623  05EE  00AC               	movwf	??_CheckStatus
  1624  05EF  082C               	movf	??_CheckStatus,w
  1625  05F0  00D5               	movwf	_ChargeStatus
  1626                           
  1627                           ;main.c: 141: }
  1628                           ;main.c: 142: }else{
  1629  05F1  0008               	return
  1630  05F2                     l2384:	
  1631                           
  1632                           ;main.c: 143: if(ChargeStatus!=2){
  1633  05F2  0855               	movf	_ChargeStatus,w
  1634  05F3  3A02               	xorlw	2
  1635  05F4  1903               	skipnz
  1636  05F5  0008               	return
  1637                           
  1638                           ;main.c: 144: ChargeStatus=2;
  1639  05F6  3002               	movlw	2
  1640  05F7  00AC               	movwf	??_CheckStatus
  1641  05F8  082C               	movf	??_CheckStatus,w
  1642  05F9  00D5               	movwf	_ChargeStatus
  1643                           
  1644                           ;main.c: 145: }
  1645                           ;main.c: 146: }
  1646                           ;main.c: 147: }else{
  1647  05FA  0008               	return
  1648  05FB                     l2388:	
  1649                           
  1650                           ;main.c: 148: if(ChargeStatus!=1){
  1651  05FB  0855               	movf	_ChargeStatus,w
  1652  05FC  3A01               	xorlw	1
  1653  05FD  1903               	skipnz
  1654  05FE  0008               	return
  1655                           
  1656                           ;main.c: 149: ChargeStatus=1;
  1657  05FF  01D5               	clrf	_ChargeStatus
  1658  0600  0AD5               	incf	_ChargeStatus,f
  1659  0601  0008               	return
  1660  0602                     __end_of_CheckStatus:	
  1661                           
  1662                           	psect	text5
  1663  0374                     __ptext5:	
  1664 ;; *************** function _Inject *****************
  1665 ;; Defined at:
  1666 ;;		line 417 in file "main.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;		None               void
  1673 ;; Registers used:
  1674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1
  1680 ;;      Params:         0       0       0
  1681 ;;      Locals:         0       0       0
  1682 ;;      Temps:          0       2       0
  1683 ;;      Totals:         0       2       0
  1684 ;;Total ram usage:        2 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    9
  1687 ;; This function calls:
  1688 ;;		_B_LED_OFF
  1689 ;;		_B_LED_ON
  1690 ;;		_BatteryCheckVoltage
  1691 ;;		_StartBeepHigh
  1692 ;;		_StartBeepLow
  1693 ;;		_StopBeep
  1694 ;;		___ftge
  1695 ;;		___lwtoft
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function _Inject
  1703  0374                     _Inject:	
  1704                           
  1705                           ;main.c: 419: vBattery = BatteryCheckVoltage();
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _Inject: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1709  0374  2671               	fcall	_BatteryCheckVoltage
  1710  0375  0020               	movlb	0	; select bank0
  1711  0376  082D               	movf	?_BatteryCheckVoltage+1,w
  1712  0377  01D2               	clrf	_vBattery+1
  1713  0378  07D2               	addwf	_vBattery+1,f
  1714  0379  082C               	movf	?_BatteryCheckVoltage,w
  1715  037A  01D1               	clrf	_vBattery
  1716  037B  07D1               	addwf	_vBattery,f
  1717                           
  1718                           ;main.c: 421: if(vBattery > 0x03ff*0.31){
  1719  037C  3091               	movlw	145
  1720  037D  00B8               	movwf	___ftge@ff1
  1721  037E  309E               	movlw	158
  1722  037F  00B9               	movwf	___ftge@ff1+1
  1723  0380  3043               	movlw	67
  1724  0381  00BA               	movwf	___ftge@ff1+2
  1725  0382  0852               	movf	_vBattery+1,w
  1726  0383  01B5               	clrf	___lwtoft@c+1
  1727  0384  07B5               	addwf	___lwtoft@c+1,f
  1728  0385  0851               	movf	_vBattery,w
  1729  0386  01B4               	clrf	___lwtoft@c
  1730  0387  07B4               	addwf	___lwtoft@c,f
  1731  0388  26B5               	fcall	___lwtoft
  1732  0389  0020               	movlb	0	; select bank0
  1733  038A  0834               	movf	?___lwtoft,w
  1734  038B  00BB               	movwf	___ftge@ff2
  1735  038C  0835               	movf	?___lwtoft+1,w
  1736  038D  00BC               	movwf	___ftge@ff2+1
  1737  038E  0836               	movf	?___lwtoft+2,w
  1738  038F  00BD               	movwf	___ftge@ff2+2
  1739  0390  24A7               	fcall	___ftge
  1740  0391  1803               	btfsc	3,0
  1741  0392  2BAC               	goto	l2550
  1742                           
  1743                           ;main.c: 422: StartBeepHigh();
  1744  0393  2620               	fcall	_StartBeepHigh
  1745                           
  1746                           ;main.c: 423: B_LED_ON();
  1747  0394  2701               	fcall	_B_LED_ON
  1748                           
  1749                           ;main.c: 424: LATCbits.LATC4 = 1;
  1750  0395  0022               	movlb	2	; select bank2
  1751  0396  160E               	bsf	14,4	;volatile
  1752                           
  1753                           ;main.c: 425: _delay((unsigned long)((2)*(62500/4000.0)));
  1754  0397  300A               	movlw	10
  1755  0398  0020               	movlb	0	; select bank0
  1756  0399  00C1               	movwf	??_Inject
  1757  039A                     u2737:	
  1758  039A  0BC1               	decfsz	??_Inject,f
  1759  039B  2B9A               	goto	u2737
  1760                           
  1761                           ;main.c: 426: _delay((unsigned long)((300)*(62500/4000000.0)));
  1762  039C  3200               	nop2	;2 cycle nop
  1763  039D  3200               	nop2	;2 cycle nop
  1764                           
  1765                           ;main.c: 427: LATCbits.LATC4 = 0;
  1766  039E  0022               	movlb	2	; select bank2
  1767  039F  120E               	bcf	14,4	;volatile
  1768                           
  1769                           ;main.c: 428: _delay((unsigned long)((1000)*(62500/4000.0)));
  1770  03A0  3015               	movlw	21
  1771  03A1  0020               	movlb	0	; select bank0
  1772  03A2  00C2               	movwf	??_Inject+1
  1773  03A3  3049               	movlw	73
  1774  03A4  00C1               	movwf	??_Inject
  1775  03A5                     u2747:	
  1776  03A5  0BC1               	decfsz	??_Inject,f
  1777  03A6  2BA5               	goto	u2747
  1778  03A7  0BC2               	decfsz	??_Inject+1,f
  1779  03A8  2BA5               	goto	u2747
  1780  03A9  0000               	nop
  1781                           
  1782                           ;main.c: 429: B_LED_OFF();
  1783  03AA  2704               	fcall	_B_LED_OFF
  1784                           
  1785                           ;main.c: 430: }else{
  1786  03AB  2BC6               	goto	l239
  1787  03AC                     l2550:	
  1788                           
  1789                           ;main.c: 431: StartBeepLow();
  1790  03AC  25C0               	fcall	_StartBeepLow
  1791                           
  1792                           ;main.c: 432: _delay((unsigned long)((70)*(62500/4000.0)));
  1793  03AD  30DA               	movlw	218
  1794  03AE  0020               	movlb	0	; select bank0
  1795  03AF  00C1               	movwf	??_Inject
  1796  03B0                     u2757:	
  1797  03B0  3200               	nop2
  1798  03B1  0BC1               	decfsz	??_Inject,f
  1799  03B2  2BB0               	goto	u2757
  1800  03B3  3200               	nop2	;nop
  1801                           
  1802                           ;main.c: 433: StopBeep();
  1803  03B4  269F               	fcall	_StopBeep
  1804                           
  1805                           ;main.c: 434: _delay((unsigned long)((5)*(62500/4000.0)));
  1806  03B5  3019               	movlw	25
  1807  03B6  0020               	movlb	0	; select bank0
  1808  03B7  00C1               	movwf	??_Inject
  1809  03B8                     u2767:	
  1810  03B8  0BC1               	decfsz	??_Inject,f
  1811  03B9  2BB8               	goto	u2767
  1812  03BA  3200               	nop2	;nop
  1813                           
  1814                           ;main.c: 435: StartBeepLow();
  1815  03BB  25C0               	fcall	_StartBeepLow
  1816                           
  1817                           ;main.c: 436: _delay((unsigned long)((400)*(62500/4000.0)));
  1818  03BC  3009               	movlw	9
  1819  03BD  0020               	movlb	0	; select bank0
  1820  03BE  00C2               	movwf	??_Inject+1
  1821  03BF  301C               	movlw	28
  1822  03C0  00C1               	movwf	??_Inject
  1823  03C1                     u2777:	
  1824  03C1  0BC1               	decfsz	??_Inject,f
  1825  03C2  2BC1               	goto	u2777
  1826  03C3  0BC2               	decfsz	??_Inject+1,f
  1827  03C4  2BC1               	goto	u2777
  1828  03C5  0000               	nop
  1829  03C6                     l239:	
  1830                           
  1831                           ;main.c: 437: }
  1832                           ;main.c: 438: StopBeep();
  1833  03C6  269F               	fcall	_StopBeep
  1834  03C7  0008               	return
  1835  03C8                     __end_of_Inject:	
  1836                           
  1837                           	psect	text6
  1838  06B5                     __ptext6:	
  1839 ;; *************** function ___lwtoft *****************
  1840 ;; Defined at:
  1841 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\lwtoft.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  c               2   20[BANK0 ] unsigned int 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  3   20[BANK0 ] float 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0, pclath, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1
  1855 ;;      Params:         0       3       0
  1856 ;;      Locals:         0       0       0
  1857 ;;      Temps:          0       1       0
  1858 ;;      Totals:         0       4       0
  1859 ;;Total ram usage:        4 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    6
  1862 ;; This function calls:
  1863 ;;		___ftpack
  1864 ;; This function is called by:
  1865 ;;		_StatusDisplayADC
  1866 ;;		_Inject
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function ___lwtoft
  1872  06B5                     ___lwtoft:	
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1876  06B5  0020               	movlb	0	; select bank0
  1877  06B6  0834               	movf	___lwtoft@c,w
  1878  06B7  00AC               	movwf	___ftpack@arg
  1879  06B8  0835               	movf	___lwtoft@c+1,w
  1880  06B9  00AD               	movwf	___ftpack@arg+1
  1881  06BA  01AE               	clrf	___ftpack@arg+2
  1882  06BB  308E               	movlw	142
  1883  06BC  00B7               	movwf	??___lwtoft
  1884  06BD  0837               	movf	??___lwtoft,w
  1885  06BE  00AF               	movwf	___ftpack@exp
  1886  06BF  01B0               	clrf	___ftpack@sign
  1887  06C0  22B3               	fcall	___ftpack
  1888  06C1  0020               	movlb	0	; select bank0
  1889  06C2  082C               	movf	?___ftpack,w
  1890  06C3  00B4               	movwf	?___lwtoft
  1891  06C4  082D               	movf	?___ftpack+1,w
  1892  06C5  00B5               	movwf	?___lwtoft+1
  1893  06C6  082E               	movf	?___ftpack+2,w
  1894  06C7  00B6               	movwf	?___lwtoft+2
  1895  06C8  0008               	return
  1896  06C9                     __end_of___lwtoft:	
  1897                           
  1898                           	psect	text7
  1899  02B3                     __ptext7:	
  1900 ;; *************** function ___ftpack *****************
  1901 ;; Defined at:
  1902 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\float.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  arg             3   12[BANK0 ] unsigned um
  1905 ;;  exp             1   15[BANK0 ] unsigned char 
  1906 ;;  sign            1   16[BANK0 ] unsigned char 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  3   12[BANK0 ] float 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1
  1918 ;;      Params:         0       5       0
  1919 ;;      Locals:         0       0       0
  1920 ;;      Temps:          0       3       0
  1921 ;;      Totals:         0       8       0
  1922 ;;Total ram usage:        8 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    5
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		___lwtoft
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function ___ftpack
  1934  02B3                     ___ftpack:	
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1938  02B3  0020               	movlb	0	; select bank0
  1939  02B4  082F               	movf	___ftpack@exp,w
  1940  02B5  1903               	btfsc	3,2
  1941  02B6  2ABC               	goto	l2288
  1942  02B7  082E               	movf	___ftpack@arg+2,w
  1943  02B8  042D               	iorwf	___ftpack@arg+1,w
  1944  02B9  042C               	iorwf	___ftpack@arg,w
  1945  02BA  1D03               	skipz
  1946  02BB  2ACD               	goto	l2294
  1947  02BC                     l2288:	
  1948  02BC  3000               	movlw	0
  1949  02BD  00AC               	movwf	?___ftpack
  1950  02BE  3000               	movlw	0
  1951  02BF  00AD               	movwf	?___ftpack+1
  1952  02C0  3000               	movlw	0
  1953  02C1  00AE               	movwf	?___ftpack+2
  1954  02C2  0008               	return
  1955  02C3                     l2292:	
  1956  02C3  3001               	movlw	1
  1957  02C4  00B1               	movwf	??___ftpack
  1958  02C5  0831               	movf	??___ftpack,w
  1959  02C6  07AF               	addwf	___ftpack@exp,f
  1960  02C7  3001               	movlw	1
  1961  02C8                     u2175:	
  1962  02C8  36AE               	lsrf	___ftpack@arg+2,f
  1963  02C9  0CAD               	rrf	___ftpack@arg+1,f
  1964  02CA  0CAC               	rrf	___ftpack@arg,f
  1965  02CB  0B89               	decfsz	9,f
  1966  02CC  2AC8               	goto	u2175
  1967  02CD                     l2294:	
  1968  02CD  30FE               	movlw	254
  1969  02CE  052E               	andwf	___ftpack@arg+2,w
  1970  02CF  1903               	btfsc	3,2
  1971  02D0  2AE6               	goto	l512
  1972  02D1  2AC3               	goto	l2292
  1973  02D2                     l2296:	
  1974  02D2  3001               	movlw	1
  1975  02D3  00B1               	movwf	??___ftpack
  1976  02D4  0831               	movf	??___ftpack,w
  1977  02D5  07AF               	addwf	___ftpack@exp,f
  1978  02D6  3001               	movlw	1
  1979  02D7  07AC               	addwf	___ftpack@arg,f
  1980  02D8  3000               	movlw	0
  1981  02D9  1803               	skipnc
  1982  02DA  3001               	movlw	1
  1983  02DB  07AD               	addwf	___ftpack@arg+1,f
  1984  02DC  3000               	movlw	0
  1985  02DD  1803               	skipnc
  1986  02DE  3001               	movlw	1
  1987  02DF  07AE               	addwf	___ftpack@arg+2,f
  1988  02E0  3001               	movlw	1
  1989  02E1                     u2195:	
  1990  02E1  36AE               	lsrf	___ftpack@arg+2,f
  1991  02E2  0CAD               	rrf	___ftpack@arg+1,f
  1992  02E3  0CAC               	rrf	___ftpack@arg,f
  1993  02E4  0B89               	decfsz	9,f
  1994  02E5  2AE1               	goto	u2195
  1995  02E6                     l512:	
  1996  02E6  30FF               	movlw	255
  1997  02E7  052E               	andwf	___ftpack@arg+2,w
  1998  02E8  1903               	btfsc	3,2
  1999  02E9  2AF3               	goto	l2304
  2000  02EA  2AD2               	goto	l2296
  2001  02EB                     l2302:	
  2002  02EB  3001               	movlw	1
  2003  02EC  02AF               	subwf	___ftpack@exp,f
  2004  02ED  3001               	movlw	1
  2005  02EE                     u2215:	
  2006  02EE  35AC               	lslf	___ftpack@arg,f
  2007  02EF  0DAD               	rlf	___ftpack@arg+1,f
  2008  02F0  0DAE               	rlf	___ftpack@arg+2,f
  2009  02F1  0B89               	decfsz	9,f
  2010  02F2  2AEE               	goto	u2215
  2011  02F3                     l2304:	
  2012  02F3  1FAD               	btfss	___ftpack@arg+1,7
  2013  02F4  2AEB               	goto	l2302
  2014  02F5  182F               	btfsc	___ftpack@exp,0
  2015  02F6  2AFD               	goto	l518
  2016  02F7  30FF               	movlw	255
  2017  02F8  05AC               	andwf	___ftpack@arg,f
  2018  02F9  307F               	movlw	127
  2019  02FA  05AD               	andwf	___ftpack@arg+1,f
  2020  02FB  30FF               	movlw	255
  2021  02FC  05AE               	andwf	___ftpack@arg+2,f
  2022  02FD                     l518:	
  2023  02FD  1003               	clrc
  2024  02FE  0CAF               	rrf	___ftpack@exp,f
  2025  02FF  082F               	movf	___ftpack@exp,w
  2026  0300  00B1               	movwf	??___ftpack
  2027  0301  01B2               	clrf	??___ftpack+1
  2028  0302  01B3               	clrf	??___ftpack+2
  2029  0303  3010               	movlw	16
  2030  0304                     u2245:	
  2031  0304  35B1               	lslf	??___ftpack,f
  2032  0305  0DB2               	rlf	??___ftpack+1,f
  2033  0306  0DB3               	rlf	??___ftpack+2,f
  2034  0307  0B89               	decfsz	9,f
  2035  0308  2B04               	goto	u2245
  2036  0309  0831               	movf	??___ftpack,w
  2037  030A  04AC               	iorwf	___ftpack@arg,f
  2038  030B  0832               	movf	??___ftpack+1,w
  2039  030C  04AD               	iorwf	___ftpack@arg+1,f
  2040  030D  0833               	movf	??___ftpack+2,w
  2041  030E  04AE               	iorwf	___ftpack@arg+2,f
  2042  030F  0830               	movf	___ftpack@sign,w
  2043  0310  1903               	btfsc	3,2
  2044  0311  0008               	return
  2045  0312  17AE               	bsf	___ftpack@arg+2,7
  2046  0313  0008               	return
  2047  0314                     __end_of___ftpack:	
  2048                           
  2049                           	psect	text8
  2050  04A7                     __ptext8:	
  2051 ;; *************** function ___ftge *****************
  2052 ;; Defined at:
  2053 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftge.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  ff1             3   24[BANK0 ] float 
  2056 ;;  ff2             3   27[BANK0 ] float 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;		None               void
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1
  2068 ;;      Params:         0       6       0
  2069 ;;      Locals:         0       0       0
  2070 ;;      Temps:          0       3       0
  2071 ;;      Totals:         0       9       0
  2072 ;;Total ram usage:        9 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    5
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_StatusDisplayADC
  2079 ;;		_Inject
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           
  2084                           ;psect for function ___ftge
  2085  04A7                     ___ftge:	
  2086                           
  2087                           ;incstack = 0
  2088                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2089  04A7  0020               	movlb	0	; select bank0
  2090  04A8  1FBA               	btfss	___ftge@ff1+2,7
  2091  04A9  2CBE               	goto	l2352
  2092  04AA  0938               	comf	___ftge@ff1,w
  2093  04AB  00BE               	movwf	??___ftge
  2094  04AC  0939               	comf	___ftge@ff1+1,w
  2095  04AD  00BF               	movwf	??___ftge+1
  2096  04AE  093A               	comf	___ftge@ff1+2,w
  2097  04AF  00C0               	movwf	??___ftge+2
  2098  04B0  0ABE               	incf	??___ftge,f
  2099  04B1  1903               	skipnz
  2100  04B2  0ABF               	incf	??___ftge+1,f
  2101  04B3  1903               	skipnz
  2102  04B4  0AC0               	incf	??___ftge+2,f
  2103  04B5  3000               	movlw	0
  2104  04B6  073E               	addwf	??___ftge,w
  2105  04B7  00B8               	movwf	___ftge@ff1
  2106  04B8  3000               	movlw	0
  2107  04B9  3D3F               	addwfc	??___ftge+1,w
  2108  04BA  00B9               	movwf	___ftge@ff1+1
  2109  04BB  3080               	movlw	128
  2110  04BC  3D40               	addwfc	??___ftge+2,w
  2111  04BD  00BA               	movwf	___ftge@ff1+2
  2112  04BE                     l2352:	
  2113  04BE  1FBD               	btfss	___ftge@ff2+2,7
  2114  04BF  2CD4               	goto	l2356
  2115  04C0  093B               	comf	___ftge@ff2,w
  2116  04C1  00BE               	movwf	??___ftge
  2117  04C2  093C               	comf	___ftge@ff2+1,w
  2118  04C3  00BF               	movwf	??___ftge+1
  2119  04C4  093D               	comf	___ftge@ff2+2,w
  2120  04C5  00C0               	movwf	??___ftge+2
  2121  04C6  0ABE               	incf	??___ftge,f
  2122  04C7  1903               	skipnz
  2123  04C8  0ABF               	incf	??___ftge+1,f
  2124  04C9  1903               	skipnz
  2125  04CA  0AC0               	incf	??___ftge+2,f
  2126  04CB  3000               	movlw	0
  2127  04CC  073E               	addwf	??___ftge,w
  2128  04CD  00BB               	movwf	___ftge@ff2
  2129  04CE  3000               	movlw	0
  2130  04CF  3D3F               	addwfc	??___ftge+1,w
  2131  04D0  00BC               	movwf	___ftge@ff2+1
  2132  04D1  3080               	movlw	128
  2133  04D2  3D40               	addwfc	??___ftge+2,w
  2134  04D3  00BD               	movwf	___ftge@ff2+2
  2135  04D4                     l2356:	
  2136  04D4  3080               	movlw	128
  2137  04D5  06BA               	xorwf	___ftge@ff1+2,f
  2138  04D6  3080               	movlw	128
  2139  04D7  06BD               	xorwf	___ftge@ff2+2,f
  2140  04D8  083D               	movf	___ftge@ff2+2,w
  2141  04D9  023A               	subwf	___ftge@ff1+2,w
  2142  04DA  1D03               	skipz
  2143  04DB  0008               	return
  2144  04DC  083C               	movf	___ftge@ff2+1,w
  2145  04DD  0239               	subwf	___ftge@ff1+1,w
  2146  04DE  1D03               	skipz
  2147  04DF  0008               	return
  2148  04E0  083B               	movf	___ftge@ff2,w
  2149  04E1  0238               	subwf	___ftge@ff1,w
  2150  04E2  0008               	return
  2151  04E3                     __end_of___ftge:	
  2152                           
  2153                           	psect	text9
  2154  069F                     __ptext9:	
  2155 ;; *************** function _StopBeep *****************
  2156 ;; Defined at:
  2157 ;;		line 401 in file "main.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;		None               void
  2164 ;; Registers used:
  2165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1
  2171 ;;      Params:         0       0       0
  2172 ;;      Locals:         0       0       0
  2173 ;;      Temps:          0       0       0
  2174 ;;      Totals:         0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    8
  2178 ;; This function calls:
  2179 ;;		_SerialLED
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;;		_Inject
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _StopBeep
  2188  069F                     _StopBeep:	
  2189                           
  2190                           ;main.c: 403: T2CONbits.TMR2ON = 0;
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in _StopBeep: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2194  069F  0020               	movlb	0	; select bank0
  2195  06A0  111C               	bcf	28,2	;volatile
  2196                           
  2197                           ;main.c: 404: CCP1CON = 0x00;
  2198  06A1  0025               	movlb	5	; select bank5
  2199  06A2  0193               	clrf	19	;volatile
  2200                           
  2201                           ;main.c: 405: LATCbits.LATC5 = 0;
  2202  06A3  0022               	movlb	2	; select bank2
  2203  06A4  128E               	bcf	14,5	;volatile
  2204                           
  2205                           ;main.c: 406: SerialLED(0,0,0);
  2206  06A5  0020               	movlb	0	; select bank0
  2207  06A6  01B5               	clrf	SerialLED@g
  2208  06A7  01B6               	clrf	SerialLED@b
  2209  06A8  3000               	movlw	0
  2210  06A9  251F               	fcall	_SerialLED
  2211                           
  2212                           ;main.c: 408: TMR1H = (-3);
  2213  06AA  30FD               	movlw	253
  2214  06AB  0020               	movlb	0	; select bank0
  2215  06AC  0097               	movwf	23	;volatile
  2216                           
  2217                           ;main.c: 410: INTCONbits.GIE = 1;
  2218  06AD  178B               	bsf	11,7	;volatile
  2219                           
  2220                           ;main.c: 411: T1CONbits.TMR1ON = 1;
  2221  06AE  1418               	bsf	24,0	;volatile
  2222                           
  2223                           ;main.c: 412: BeepStatus = 0;
  2224  06AF  01D4               	clrf	_BeepStatus
  2225                           
  2226                           ;main.c: 414: TMR1H = (-1*8000 >> 8);
  2227  06B0  30E0               	movlw	224
  2228  06B1  0097               	movwf	23	;volatile
  2229                           
  2230                           ;main.c: 415: TMR1L = (-1*8000 & 0x00ff);
  2231  06B2  30C0               	movlw	192
  2232  06B3  0096               	movwf	22	;volatile
  2233  06B4  0008               	return
  2234  06B5                     __end_of_StopBeep:	
  2235                           
  2236                           	psect	text10
  2237  05C0                     __ptext10:	
  2238 ;; *************** function _StartBeepLow *****************
  2239 ;; Defined at:
  2240 ;;		line 379 in file "main.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;		None               void
  2247 ;; Registers used:
  2248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1
  2254 ;;      Params:         0       0       0
  2255 ;;      Locals:         0       0       0
  2256 ;;      Temps:          0       0       0
  2257 ;;      Totals:         0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    8
  2261 ;; This function calls:
  2262 ;;		_SerialLED
  2263 ;;		_delay_ms
  2264 ;; This function is called by:
  2265 ;;		_main
  2266 ;;		_Inject
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function _StartBeepLow
  2272  05C0                     _StartBeepLow:	
  2273                           
  2274                           ;main.c: 381: T1CONbits.TMR1ON = 0;
  2275                           
  2276                           ;incstack = 0
  2277                           ; Regs used in _StartBeepLow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2278  05C0  0020               	movlb	0	; select bank0
  2279  05C1  1018               	bcf	24,0	;volatile
  2280                           
  2281                           ;main.c: 385: INTCONbits.GIE = 0;
  2282  05C2  138B               	bcf	11,7	;volatile
  2283                           
  2284                           ;main.c: 387: delay_ms(5);
  2285  05C3  3005               	movlw	5
  2286  05C4  00AC               	movwf	delay_ms@time
  2287  05C5  3000               	movlw	0
  2288  05C6  00AD               	movwf	delay_ms@time+1
  2289  05C7  2659               	fcall	_delay_ms
  2290                           
  2291                           ;main.c: 388: SerialLED(20,0,0);
  2292  05C8  0020               	movlb	0	; select bank0
  2293  05C9  01B5               	clrf	SerialLED@g
  2294  05CA  01B6               	clrf	SerialLED@b
  2295  05CB  3014               	movlw	20
  2296  05CC  251F               	fcall	_SerialLED
  2297                           
  2298                           ;main.c: 389: delay_ms(50);
  2299  05CD  3032               	movlw	50
  2300  05CE  0020               	movlb	0	; select bank0
  2301  05CF  00AC               	movwf	delay_ms@time
  2302  05D0  3000               	movlw	0
  2303  05D1  00AD               	movwf	delay_ms@time+1
  2304  05D2  2659               	fcall	_delay_ms
  2305                           
  2306                           ;main.c: 390: PR2 = 0xff;
  2307  05D3  30FF               	movlw	255
  2308  05D4  0020               	movlb	0	; select bank0
  2309  05D5  009B               	movwf	27	;volatile
  2310                           
  2311                           ;main.c: 391: CCP1CON = 0b00001100;
  2312  05D6  300C               	movlw	12
  2313  05D7  0025               	movlb	5	; select bank5
  2314  05D8  0093               	movwf	19	;volatile
  2315                           
  2316                           ;main.c: 392: CCP1CONbits.DC1B = (int)(0.5 * 4 * (0xff + 1)) & 0x03;
  2317  05D9  30CF               	movlw	-49
  2318  05DA  0593               	andwf	19,f	;volatile
  2319                           
  2320                           ;main.c: 393: CCPR1L = (int)(0.5 * 4 * (0xff + 1)) >> 2;
  2321  05DB  3080               	movlw	128
  2322  05DC  0091               	movwf	17	;volatile
  2323                           
  2324                           ;main.c: 394: T2CONbits.T2CKPS = 0;
  2325  05DD  30FC               	movlw	-4
  2326  05DE  0020               	movlb	0	; select bank0
  2327  05DF  059C               	andwf	28,f	;volatile
  2328                           
  2329                           ;main.c: 395: T2CONbits.TMR2ON = 1;
  2330  05E0  151C               	bsf	28,2	;volatile
  2331                           
  2332                           ;main.c: 397: BeepStatus = 1;
  2333  05E1  01D4               	clrf	_BeepStatus
  2334  05E2  0AD4               	incf	_BeepStatus,f
  2335  05E3  0008               	return
  2336  05E4                     __end_of_StartBeepLow:	
  2337                           
  2338                           	psect	text11
  2339  0659                     __ptext11:	
  2340 ;; *************** function _delay_ms *****************
  2341 ;; Defined at:
  2342 ;;		line 72 in file "main.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  time            2   12[BANK0 ] int 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;		None               void
  2349 ;; Registers used:
  2350 ;;		wreg
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1
  2356 ;;      Params:         0       2       0
  2357 ;;      Locals:         0       0       0
  2358 ;;      Temps:          0       1       0
  2359 ;;      Totals:         0       3       0
  2360 ;;Total ram usage:        3 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    5
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;;		_StartBeepLow
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _delay_ms
  2373  0659                     _delay_ms:	
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _delay_ms: [wreg]
  2377  0659  0020               	movlb	0	; select bank0
  2378  065A                     L2:	
  2379  065A  082D               	movf	delay_ms@time+1,w
  2380  065B  3A80               	xorlw	128
  2381  065C  00AE               	movwf	??_delay_ms
  2382  065D  3080               	movlw	128
  2383  065E  022E               	subwf	??_delay_ms,w
  2384  065F  1D03               	skipz
  2385  0660  2E63               	goto	u2265
  2386  0661  3001               	movlw	1
  2387  0662  022C               	subwf	delay_ms@time,w
  2388  0663                     u2265:	
  2389  0663  1C03               	btfss	3,0
  2390  0664  0008               	return
  2391                           
  2392                           ;main.c: 74: _delay((unsigned long)((1)*(62500/4000.0)));
  2393  0665  3004               	movlw	4
  2394  0666  0020               	movlb	0	; select bank0
  2395  0667  00AE               	movwf	??_delay_ms
  2396  0668                     u2787:	
  2397  0668  0BAE               	decfsz	??_delay_ms,f
  2398  0669  2E68               	goto	u2787
  2399  066A  3200               	nop2	;nop
  2400  066B  30FF               	movlw	255
  2401  066C  0020               	movlb	0	; select bank0
  2402  066D  07AC               	addwf	delay_ms@time,f
  2403  066E  30FF               	movlw	255
  2404  066F  3DAD               	addwfc	delay_ms@time+1,f
  2405  0670  2E5A               	goto	L2
  2406  0671                     __end_of_delay_ms:	
  2407                           
  2408                           	psect	text12
  2409  0620                     __ptext12:	
  2410 ;; *************** function _StartBeepHigh *****************
  2411 ;; Defined at:
  2412 ;;		line 359 in file "main.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1
  2426 ;;      Params:         0       0       0
  2427 ;;      Locals:         0       0       0
  2428 ;;      Temps:          0       1       0
  2429 ;;      Totals:         0       1       0
  2430 ;;Total ram usage:        1 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    8
  2433 ;; This function calls:
  2434 ;;		_SerialLED
  2435 ;; This function is called by:
  2436 ;;		_main
  2437 ;;		_Inject
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           
  2442                           ;psect for function _StartBeepHigh
  2443  0620                     _StartBeepHigh:	
  2444                           
  2445                           ;main.c: 361: T1CONbits.TMR1ON = 0;
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _StartBeepHigh: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2449  0620  0020               	movlb	0	; select bank0
  2450  0621  1018               	bcf	24,0	;volatile
  2451                           
  2452                           ;main.c: 365: INTCONbits.GIE = 0;
  2453  0622  138B               	bcf	11,7	;volatile
  2454                           
  2455                           ;main.c: 366: SerialLED(0,18,0);
  2456  0623  3012               	movlw	18
  2457  0624  00BA               	movwf	??_StartBeepHigh
  2458  0625  083A               	movf	??_StartBeepHigh,w
  2459  0626  00B5               	movwf	SerialLED@g
  2460  0627  01B6               	clrf	SerialLED@b
  2461  0628  3000               	movlw	0
  2462  0629  251F               	fcall	_SerialLED
  2463                           
  2464                           ;main.c: 367: PR2 = 0x0c;
  2465  062A  300C               	movlw	12
  2466  062B  0020               	movlb	0	; select bank0
  2467  062C  009B               	movwf	27	;volatile
  2468                           
  2469                           ;main.c: 368: CCP1CON = 0b00001100;
  2470  062D  300C               	movlw	12
  2471  062E  0025               	movlb	5	; select bank5
  2472  062F  0093               	movwf	19	;volatile
  2473                           
  2474                           ;main.c: 369: CCP1CONbits.DC1B = (int)(0.5 * 4 * (0x0c + 1)) & 0x03;
  2475  0630  0813               	movf	19,w	;volatile
  2476  0631  39CF               	andlw	-49
  2477  0632  3820               	iorlw	32
  2478  0633  0093               	movwf	19	;volatile
  2479                           
  2480                           ;main.c: 370: CCPR1L = (int)(0.5 * 4 * (0x0c + 1)) >> 2;
  2481  0634  3006               	movlw	6
  2482  0635  0091               	movwf	17	;volatile
  2483                           
  2484                           ;main.c: 371: T2CONbits.T2CKPS = 0;
  2485  0636  30FC               	movlw	-4
  2486  0637  0020               	movlb	0	; select bank0
  2487  0638  059C               	andwf	28,f	;volatile
  2488                           
  2489                           ;main.c: 372: T2CONbits.TMR2ON = 1;
  2490  0639  151C               	bsf	28,2	;volatile
  2491                           
  2492                           ;main.c: 374: BeepStatus = 1;
  2493  063A  01D4               	clrf	_BeepStatus
  2494  063B  0AD4               	incf	_BeepStatus,f
  2495  063C  0008               	return
  2496  063D                     __end_of_StartBeepHigh:	
  2497                           
  2498                           	psect	text13
  2499  051F                     __ptext13:	
  2500 ;; *************** function _SerialLED *****************
  2501 ;; Defined at:
  2502 ;;		line 123 in file "main.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  r               1    wreg     unsigned char 
  2505 ;;  g               1   21[BANK0 ] unsigned char 
  2506 ;;  b               1   22[BANK0 ] unsigned char 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  r               1   25[BANK0 ] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1
  2518 ;;      Params:         0       2       0
  2519 ;;      Locals:         0       1       0
  2520 ;;      Temps:          0       2       0
  2521 ;;      Totals:         0       5       0
  2522 ;;Total ram usage:        5 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    7
  2525 ;; This function calls:
  2526 ;;		_SendLED
  2527 ;; This function is called by:
  2528 ;;		_StatusDisplay1
  2529 ;;		_StatusDisplayADC
  2530 ;;		_StartStatus
  2531 ;;		_main
  2532 ;;		_StartBeepHigh
  2533 ;;		_StartBeepLow
  2534 ;;		_StopBeep
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function _SerialLED
  2540  051F                     _SerialLED:	
  2541                           
  2542                           ;incstack = 0
  2543                           ; Regs used in _SerialLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2544                           ;SerialLED@r stored from wreg
  2545  051F  0020               	movlb	0	; select bank0
  2546  0520  00B9               	movwf	SerialLED@r
  2547                           
  2548                           ;main.c: 124: T1CONbits.TMR1ON = 0;
  2549  0521  1018               	bcf	24,0	;volatile
  2550                           
  2551                           ;main.c: 125: _delay((unsigned long)((1)*(62500/4000.0)));
  2552  0522  3004               	movlw	4
  2553  0523  00B7               	movwf	??_SerialLED
  2554  0524                     u2797:	
  2555  0524  0BB7               	decfsz	??_SerialLED,f
  2556  0525  2D24               	goto	u2797
  2557  0526  3200               	nop2	;nop
  2558                           
  2559                           ;main.c: 126: OSCCONbits.IRCF = 0b1110;
  2560  0527  0021               	movlb	1	; select bank1
  2561  0528  0819               	movf	25,w	;volatile
  2562  0529  3987               	andlw	-121
  2563  052A  3870               	iorlw	112
  2564  052B  0099               	movwf	25	;volatile
  2565                           
  2566                           ;main.c: 127: _delay((unsigned long)((2000)*(62500/4000.0)));
  2567  052C  3029               	movlw	41
  2568  052D  0020               	movlb	0	; select bank0
  2569  052E  00B8               	movwf	??_SerialLED+1
  2570  052F  3094               	movlw	148
  2571  0530  00B7               	movwf	??_SerialLED
  2572  0531                     u2807:	
  2573  0531  0BB7               	decfsz	??_SerialLED,f
  2574  0532  2D31               	goto	u2807
  2575  0533  0BB8               	decfsz	??_SerialLED+1,f
  2576  0534  2D31               	goto	u2807
  2577  0535  0000               	nop
  2578                           
  2579                           ;main.c: 128: R[0]=r;
  2580  0536  0020               	movlb	0	; select bank0
  2581  0537  0839               	movf	SerialLED@r,w
  2582  0538  00B7               	movwf	??_SerialLED
  2583  0539  0837               	movf	??_SerialLED,w
  2584  053A  00D9               	movwf	_R
  2585                           
  2586                           ;main.c: 129: G[0]=g;
  2587  053B  0835               	movf	SerialLED@g,w
  2588  053C  00B7               	movwf	??_SerialLED
  2589  053D  0837               	movf	??_SerialLED,w
  2590  053E  00D6               	movwf	_G
  2591                           
  2592                           ;main.c: 130: B[0]=b;
  2593  053F  0836               	movf	SerialLED@b,w
  2594  0540  00B7               	movwf	??_SerialLED
  2595  0541  0837               	movf	??_SerialLED,w
  2596  0542  00D3               	movwf	_B
  2597                           
  2598                           ;main.c: 131: SendLED(0+1);
  2599  0543  3001               	movlw	1
  2600  0544  00AC               	movwf	SendLED@num
  2601  0545  3000               	movlw	0
  2602  0546  00AD               	movwf	SendLED@num+1
  2603  0547  2161               	fcall	_SendLED
  2604                           
  2605                           ;main.c: 132: OSCCONbits.IRCF = 0b0100;
  2606  0548  0021               	movlb	1	; select bank1
  2607  0549  0819               	movf	25,w	;volatile
  2608  054A  3987               	andlw	-121
  2609  054B  3820               	iorlw	32
  2610  054C  0099               	movwf	25	;volatile
  2611                           
  2612                           ;main.c: 133: _delay((unsigned long)((10)*(62500/4000.0)));
  2613  054D  3033               	movlw	51
  2614  054E  0020               	movlb	0	; select bank0
  2615  054F  00B7               	movwf	??_SerialLED
  2616  0550                     u2817:	
  2617  0550  0BB7               	decfsz	??_SerialLED,f
  2618  0551  2D50               	goto	u2817
  2619  0552  3200               	nop2	;nop
  2620                           
  2621                           ;main.c: 134: T1CONbits.TMR1ON = 1;
  2622  0553  0020               	movlb	0	; select bank0
  2623  0554  1418               	bsf	24,0	;volatile
  2624  0555  0008               	return
  2625  0556                     __end_of_SerialLED:	
  2626                           
  2627                           	psect	text14
  2628  0161                     __ptext14:	
  2629 ;; *************** function _SendLED *****************
  2630 ;; Defined at:
  2631 ;;		line 98 in file "main.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  num             2   12[BANK0 ] int 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  comp            2   19[BANK0 ] int 
  2636 ;;  loop8           2   17[BANK0 ] int 
  2637 ;;  loopNum         2   15[BANK0 ] int 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;		None               void
  2640 ;; Registers used:
  2641 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1
  2647 ;;      Params:         0       2       0
  2648 ;;      Locals:         0       6       0
  2649 ;;      Temps:          0       1       0
  2650 ;;      Totals:         0       9       0
  2651 ;;Total ram usage:        9 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    6
  2654 ;; This function calls:
  2655 ;;		_Data0
  2656 ;;		_Data1
  2657 ;; This function is called by:
  2658 ;;		_SerialLED
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function _SendLED
  2664  0161                     _SendLED:	
  2665                           
  2666                           ;main.c: 99: int loop8,loopNum;
  2667                           ;main.c: 100: int comp;
  2668                           ;main.c: 101: for(loopNum=0;loopNum<num;loopNum++){
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in _SendLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2672  0161  0020               	movlb	0	; select bank0
  2673  0162  01AF               	clrf	SendLED@loopNum
  2674  0163  01B0               	clrf	SendLED@loopNum+1
  2675  0164                     l145:	
  2676  0164  0830               	movf	SendLED@loopNum+1,w
  2677  0165  3A80               	xorlw	128
  2678  0166  00AE               	movwf	??_SendLED
  2679  0167  082D               	movf	SendLED@num+1,w
  2680  0168  3A80               	xorlw	128
  2681  0169  022E               	subwf	??_SendLED,w
  2682  016A  1D03               	skipz
  2683  016B  296E               	goto	u2145
  2684  016C  082C               	movf	SendLED@num,w
  2685  016D  022F               	subwf	SendLED@loopNum,w
  2686  016E                     u2145:	
  2687  016E  1803               	btfsc	3,0
  2688  016F  2A09               	goto	l2282
  2689                           
  2690                           ;main.c: 102: comp=128;
  2691  0170  3080               	movlw	128
  2692  0171  0020               	movlb	0	; select bank0
  2693  0172  00B3               	movwf	SendLED@comp
  2694  0173  3000               	movlw	0
  2695  0174  00B4               	movwf	SendLED@comp+1
  2696                           
  2697                           ;main.c: 103: for(loop8=0;loop8<8;loop8++){
  2698  0175  01B1               	clrf	SendLED@loop8
  2699  0176  01B2               	clrf	SendLED@loop8+1
  2700  0177  0832               	movf	SendLED@loop8+1,w
  2701  0178  3A80               	xorlw	128
  2702  0179  00AE               	movwf	??_SendLED
  2703  017A  3080               	movlw	128
  2704  017B  022E               	subwf	??_SendLED,w
  2705  017C  3008               	movlw	8
  2706  017D  1903               	btfsc	3,2
  2707  017E  0231               	subwf	SendLED@loop8,w
  2708  017F  1803               	btfsc	3,0
  2709  0180  29A1               	goto	l2240
  2710  0181                     l2228:	
  2711                           
  2712                           ;main.c: 104: if(comp&G[loopNum]){Data1();}else{Data0();}
  2713  0181  0020               	movlb	0	; select bank0
  2714  0182  082F               	movf	SendLED@loopNum,w
  2715  0183  3E56               	addlw	_G& (0+255)
  2716  0184  0086               	movwf	6
  2717  0185  0187               	clrf	7
  2718  0186  0801               	movf	1,w
  2719  0187  0533               	andwf	SendLED@comp,w
  2720  0188  1903               	btfsc	3,2
  2721  0189  298C               	goto	l2232
  2722  018A  26DB               	fcall	_Data1
  2723  018B  298D               	goto	l2234
  2724  018C                     l2232:	
  2725  018C  26F5               	fcall	_Data0
  2726  018D                     l2234:	
  2727                           
  2728                           ;main.c: 105: comp = comp>>1;
  2729  018D  0020               	movlb	0	; select bank0
  2730  018E  0D34               	rlf	SendLED@comp+1,w
  2731  018F  0C34               	rrf	SendLED@comp+1,w
  2732  0190  00B4               	movwf	SendLED@comp+1
  2733  0191  0C33               	rrf	SendLED@comp,w
  2734  0192  00B3               	movwf	SendLED@comp
  2735  0193  3001               	movlw	1
  2736  0194  07B1               	addwf	SendLED@loop8,f
  2737  0195  3000               	movlw	0
  2738  0196  3DB2               	addwfc	SendLED@loop8+1,f
  2739  0197  0832               	movf	SendLED@loop8+1,w
  2740  0198  3A80               	xorlw	128
  2741  0199  00AE               	movwf	??_SendLED
  2742  019A  3080               	movlw	128
  2743  019B  022E               	subwf	??_SendLED,w
  2744  019C  3008               	movlw	8
  2745  019D  1903               	btfsc	3,2
  2746  019E  0231               	subwf	SendLED@loop8,w
  2747  019F  1C03               	skipc
  2748  01A0  2981               	goto	l2228
  2749  01A1                     l2240:	
  2750                           
  2751                           ;main.c: 106: }
  2752                           ;main.c: 107: comp=128;
  2753  01A1  3080               	movlw	128
  2754  01A2  0020               	movlb	0	; select bank0
  2755  01A3  00B3               	movwf	SendLED@comp
  2756  01A4  3000               	movlw	0
  2757  01A5  00B4               	movwf	SendLED@comp+1
  2758                           
  2759                           ;main.c: 108: for(loop8=0;loop8<8;loop8++){
  2760  01A6  01B1               	clrf	SendLED@loop8
  2761  01A7  01B2               	clrf	SendLED@loop8+1
  2762  01A8  0832               	movf	SendLED@loop8+1,w
  2763  01A9  3A80               	xorlw	128
  2764  01AA  00AE               	movwf	??_SendLED
  2765  01AB  3080               	movlw	128
  2766  01AC  022E               	subwf	??_SendLED,w
  2767  01AD  3008               	movlw	8
  2768  01AE  1903               	btfsc	3,2
  2769  01AF  0231               	subwf	SendLED@loop8,w
  2770  01B0  1803               	btfsc	3,0
  2771  01B1  29D2               	goto	l2260
  2772  01B2                     l2248:	
  2773                           
  2774                           ;main.c: 109: if(comp&R[loopNum]){Data1();}else{Data0();}
  2775  01B2  0020               	movlb	0	; select bank0
  2776  01B3  082F               	movf	SendLED@loopNum,w
  2777  01B4  3E59               	addlw	_R& (0+255)
  2778  01B5  0086               	movwf	6
  2779  01B6  0187               	clrf	7
  2780  01B7  0801               	movf	1,w
  2781  01B8  0533               	andwf	SendLED@comp,w
  2782  01B9  1903               	btfsc	3,2
  2783  01BA  29BD               	goto	l2252
  2784  01BB  26DB               	fcall	_Data1
  2785  01BC  29BE               	goto	l2254
  2786  01BD                     l2252:	
  2787  01BD  26F5               	fcall	_Data0
  2788  01BE                     l2254:	
  2789                           
  2790                           ;main.c: 110: comp = comp>>1;
  2791  01BE  0020               	movlb	0	; select bank0
  2792  01BF  0D34               	rlf	SendLED@comp+1,w
  2793  01C0  0C34               	rrf	SendLED@comp+1,w
  2794  01C1  00B4               	movwf	SendLED@comp+1
  2795  01C2  0C33               	rrf	SendLED@comp,w
  2796  01C3  00B3               	movwf	SendLED@comp
  2797  01C4  3001               	movlw	1
  2798  01C5  07B1               	addwf	SendLED@loop8,f
  2799  01C6  3000               	movlw	0
  2800  01C7  3DB2               	addwfc	SendLED@loop8+1,f
  2801  01C8  0832               	movf	SendLED@loop8+1,w
  2802  01C9  3A80               	xorlw	128
  2803  01CA  00AE               	movwf	??_SendLED
  2804  01CB  3080               	movlw	128
  2805  01CC  022E               	subwf	??_SendLED,w
  2806  01CD  3008               	movlw	8
  2807  01CE  1903               	btfsc	3,2
  2808  01CF  0231               	subwf	SendLED@loop8,w
  2809  01D0  1C03               	skipc
  2810  01D1  29B2               	goto	l2248
  2811  01D2                     l2260:	
  2812                           
  2813                           ;main.c: 111: }
  2814                           ;main.c: 112: comp=128;
  2815  01D2  3080               	movlw	128
  2816  01D3  0020               	movlb	0	; select bank0
  2817  01D4  00B3               	movwf	SendLED@comp
  2818  01D5  3000               	movlw	0
  2819  01D6  00B4               	movwf	SendLED@comp+1
  2820                           
  2821                           ;main.c: 113: for(loop8=0;loop8<8;loop8++){
  2822  01D7  01B1               	clrf	SendLED@loop8
  2823  01D8  01B2               	clrf	SendLED@loop8+1
  2824  01D9  0832               	movf	SendLED@loop8+1,w
  2825  01DA  3A80               	xorlw	128
  2826  01DB  00AE               	movwf	??_SendLED
  2827  01DC  3080               	movlw	128
  2828  01DD  022E               	subwf	??_SendLED,w
  2829  01DE  3008               	movlw	8
  2830  01DF  1903               	btfsc	3,2
  2831  01E0  0231               	subwf	SendLED@loop8,w
  2832  01E1  1803               	btfsc	3,0
  2833  01E2  2A03               	goto	l2280
  2834  01E3                     l2268:	
  2835                           
  2836                           ;main.c: 114: if(comp&B[loopNum]){Data1();}else{Data0();}
  2837  01E3  0020               	movlb	0	; select bank0
  2838  01E4  082F               	movf	SendLED@loopNum,w
  2839  01E5  3E53               	addlw	_B& (0+255)
  2840  01E6  0086               	movwf	6
  2841  01E7  0187               	clrf	7
  2842  01E8  0801               	movf	1,w
  2843  01E9  0533               	andwf	SendLED@comp,w
  2844  01EA  1903               	btfsc	3,2
  2845  01EB  29EE               	goto	l2272
  2846  01EC  26DB               	fcall	_Data1
  2847  01ED  29EF               	goto	l2274
  2848  01EE                     l2272:	
  2849  01EE  26F5               	fcall	_Data0
  2850  01EF                     l2274:	
  2851                           
  2852                           ;main.c: 115: comp = comp>>1;
  2853  01EF  0020               	movlb	0	; select bank0
  2854  01F0  0D34               	rlf	SendLED@comp+1,w
  2855  01F1  0C34               	rrf	SendLED@comp+1,w
  2856  01F2  00B4               	movwf	SendLED@comp+1
  2857  01F3  0C33               	rrf	SendLED@comp,w
  2858  01F4  00B3               	movwf	SendLED@comp
  2859  01F5  3001               	movlw	1
  2860  01F6  07B1               	addwf	SendLED@loop8,f
  2861  01F7  3000               	movlw	0
  2862  01F8  3DB2               	addwfc	SendLED@loop8+1,f
  2863  01F9  0832               	movf	SendLED@loop8+1,w
  2864  01FA  3A80               	xorlw	128
  2865  01FB  00AE               	movwf	??_SendLED
  2866  01FC  3080               	movlw	128
  2867  01FD  022E               	subwf	??_SendLED,w
  2868  01FE  3008               	movlw	8
  2869  01FF  1903               	btfsc	3,2
  2870  0200  0231               	subwf	SendLED@loop8,w
  2871  0201  1C03               	skipc
  2872  0202  29E3               	goto	l2268
  2873  0203                     l2280:	
  2874  0203  3001               	movlw	1
  2875  0204  0020               	movlb	0	; select bank0
  2876  0205  07AF               	addwf	SendLED@loopNum,f
  2877  0206  3000               	movlw	0
  2878  0207  3DB0               	addwfc	SendLED@loopNum+1,f
  2879  0208  2964               	goto	l145
  2880  0209                     l2282:	
  2881                           
  2882                           ;main.c: 116: }
  2883                           ;main.c: 118: }
  2884                           ;main.c: 119: _delay((unsigned long)((10)*(62500/4000.0)));
  2885  0209  3033               	movlw	51
  2886  020A  0020               	movlb	0	; select bank0
  2887  020B  00AE               	movwf	??_SendLED
  2888  020C                     u2827:	
  2889  020C  0BAE               	decfsz	??_SendLED,f
  2890  020D  2A0C               	goto	u2827
  2891  020E  3200               	nop2	;nop
  2892  020F  0008               	return
  2893  0210                     __end_of_SendLED:	
  2894                           
  2895                           	psect	text15
  2896  06DB                     __ptext15:	
  2897 ;; *************** function _Data1 *****************
  2898 ;; Defined at:
  2899 ;;		line 82 in file "main.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;		None               void
  2906 ;; Registers used:
  2907 ;;		None
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1
  2913 ;;      Params:         0       0       0
  2914 ;;      Locals:         0       0       0
  2915 ;;      Temps:          0       0       0
  2916 ;;      Totals:         0       0       0
  2917 ;;Total ram usage:        0 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    5
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_SendLED
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _Data1
  2929  06DB                     _Data1:	
  2930                           
  2931                           ;main.c: 83: LATAbits.LATA1=1;
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _Data1: []
  2935  06DB  0022               	movlb	2	; select bank2
  2936  06DC  148C               	bsf	12,1	;volatile
  2937  06DD  0000               	nop	;# 
  2938  06DE  0000               	nop	;# 
  2939  06DF  0000               	nop	;# 
  2940  06E0  0000               	nop	;# 
  2941  06E1  0000               	nop	;# 
  2942                           
  2943                           ;main.c: 89: LATAbits.LATA1=0;
  2944  06E2  0022               	movlb	2	; select bank2
  2945  06E3  108C               	bcf	12,1	;volatile
  2946  06E4  0008               	return
  2947  06E5                     __end_of_Data1:	
  2948                           
  2949                           	psect	text16
  2950  06F5                     __ptext16:	
  2951 ;; *************** function _Data0 *****************
  2952 ;; Defined at:
  2953 ;;		line 92 in file "main.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;		None               void
  2960 ;; Registers used:
  2961 ;;		None
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1
  2967 ;;      Params:         0       0       0
  2968 ;;      Locals:         0       0       0
  2969 ;;      Temps:          0       0       0
  2970 ;;      Totals:         0       0       0
  2971 ;;Total ram usage:        0 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    5
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_SendLED
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _Data0
  2983  06F5                     _Data0:	
  2984                           
  2985                           ;main.c: 93: LATAbits.LATA1=1;
  2986                           
  2987                           ;incstack = 0
  2988                           ; Regs used in _Data0: []
  2989  06F5  0022               	movlb	2	; select bank2
  2990  06F6  148C               	bsf	12,1	;volatile
  2991  06F7  0000               	nop	;# 
  2992                           
  2993                           ;main.c: 95: LATAbits.LATA1=0;
  2994  06F8  0022               	movlb	2	; select bank2
  2995  06F9  108C               	bcf	12,1	;volatile
  2996  06FA  0008               	return
  2997  06FB                     __end_of_Data0:	
  2998                           
  2999                           	psect	text17
  3000  0671                     __ptext17:	
  3001 ;; *************** function _BatteryCheckVoltage *****************
  3002 ;; Defined at:
  3003 ;;		line 442 in file "main.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  i               2    0        unsigned int 
  3008 ;;  thresh          2    0        unsigned int 
  3009 ;;  ad2             2    0        unsigned int 
  3010 ;;  ad1             2    0        unsigned int 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  2   12[BANK0 ] unsigned int 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1
  3020 ;;      Params:         0       2       0
  3021 ;;      Locals:         0       0       0
  3022 ;;      Temps:          0       0       0
  3023 ;;      Totals:         0       2       0
  3024 ;;Total ram usage:        2 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    5
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_StatusDisplayADC
  3031 ;;		_Inject
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _BatteryCheckVoltage
  3037  0671                     _BatteryCheckVoltage:	
  3038                           
  3039                           ;main.c: 444: unsigned int ad1, ad2, thresh, i;
  3040                           ;main.c: 447: ADCON0 = 0b00010101;
  3041                           
  3042                           ;incstack = 0
  3043                           ; Regs used in _BatteryCheckVoltage: [wreg+status,2+status,0]
  3044  0671  3015               	movlw	21
  3045  0672  0021               	movlb	1	; select bank1
  3046  0673  009D               	movwf	29	;volatile
  3047                           
  3048                           ;main.c: 450: ADCON0 = 0b00010111;
  3049  0674  3017               	movlw	23
  3050  0675  009D               	movwf	29	;volatile
  3051  0676                     l243:	
  3052                           ;main.c: 453: while(ADCON0 & 0x02);
  3053                           
  3054  0676  189D               	btfsc	29,1	;volatile
  3055  0677  2E76               	goto	l243
  3056                           
  3057                           ;main.c: 455: AdcRes = ((unsigned int)ADRESH << 8) | (unsigned int)ADRESL;
  3058  0678  081C               	movf	28,w	;volatile
  3059  0679  0020               	movlb	0	; select bank0
  3060  067A  01CA               	clrf	_AdcRes+1
  3061  067B  07CA               	addwf	_AdcRes+1,f
  3062  067C  0021               	movlb	1	; select bank1
  3063  067D  081B               	movf	27,w	;volatile
  3064  067E  0020               	movlb	0	; select bank0
  3065  067F  01C9               	clrf	_AdcRes
  3066  0680  07C9               	addwf	_AdcRes,f
  3067                           
  3068                           ;main.c: 457: return AdcRes;
  3069  0681  084A               	movf	_AdcRes+1,w
  3070  0682  01AD               	clrf	?_BatteryCheckVoltage+1
  3071  0683  07AD               	addwf	?_BatteryCheckVoltage+1,f
  3072  0684  0849               	movf	_AdcRes,w
  3073  0685  01AC               	clrf	?_BatteryCheckVoltage
  3074  0686  07AC               	addwf	?_BatteryCheckVoltage,f
  3075  0687  0008               	return
  3076  0688                     __end_of_BatteryCheckVoltage:	
  3077                           
  3078                           	psect	text18
  3079  0701                     __ptext18:	
  3080 ;; *************** function _B_LED_ON *****************
  3081 ;; Defined at:
  3082 ;;		line 55 in file "main.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;		None               void
  3089 ;; Registers used:
  3090 ;;		None
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1
  3096 ;;      Params:         0       0       0
  3097 ;;      Locals:         0       0       0
  3098 ;;      Temps:          0       0       0
  3099 ;;      Totals:         0       0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    5
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_Inject
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _B_LED_ON
  3112  0701                     _B_LED_ON:	
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in _B_LED_ON: []
  3116  0701  0022               	movlb	2	; select bank2
  3117  0702  140C               	bsf	12,0	;volatile
  3118  0703  0008               	return
  3119  0704                     __end_of_B_LED_ON:	
  3120                           
  3121                           	psect	text19
  3122  0704                     __ptext19:	
  3123 ;; *************** function _B_LED_OFF *****************
  3124 ;; Defined at:
  3125 ;;		line 56 in file "main.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;		None               void
  3132 ;; Registers used:
  3133 ;;		None
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1
  3139 ;;      Params:         0       0       0
  3140 ;;      Locals:         0       0       0
  3141 ;;      Temps:          0       0       0
  3142 ;;      Totals:         0       0       0
  3143 ;;Total ram usage:        0 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    5
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_Inject
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function _B_LED_OFF
  3155  0704                     _B_LED_OFF:	
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _B_LED_OFF: []
  3159  0704  0022               	movlb	2	; select bank2
  3160  0705  100C               	bcf	12,0	;volatile
  3161  0706  0008               	return
  3162  0707                     __end_of_B_LED_OFF:	
  3163                           
  3164                           	psect	text20
  3165  0556                     __ptext20:	
  3166 ;; *************** function _CheckVoltage *****************
  3167 ;; Defined at:
  3168 ;;		line 459 in file "main.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  thresh          2   14[BANK0 ] unsigned int 
  3173 ;;  ad2             2   12[BANK0 ] unsigned int 
  3174 ;;  i               2    0        unsigned int 
  3175 ;;  ad1             2    0        unsigned int 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      unsigned char 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1
  3185 ;;      Params:         0       0       0
  3186 ;;      Locals:         0       4       0
  3187 ;;      Temps:          0       0       0
  3188 ;;      Totals:         0       4       0
  3189 ;;Total ram usage:        4 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    5
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_main
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _CheckVoltage
  3201  0556                     _CheckVoltage:	
  3202                           
  3203                           ;main.c: 461: unsigned int ad1, ad2, thresh, i;
  3204                           ;main.c: 464: ADCON0 = 0b00010101;
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _CheckVoltage: [wreg+status,2+status,0]
  3208  0556  3015               	movlw	21
  3209  0557  0021               	movlb	1	; select bank1
  3210  0558  009D               	movwf	29	;volatile
  3211                           
  3212                           ;main.c: 466: LATCbits.LATC3 = 1;
  3213  0559  0022               	movlb	2	; select bank2
  3214  055A  158E               	bsf	14,3	;volatile
  3215                           
  3216                           ;main.c: 467: _delay((unsigned long)((100)*(62500/4000000.0)));
  3217  055B  0000               	nop
  3218                           
  3219                           ;main.c: 468: ADCON0 = 0b00011011;
  3220  055C  301B               	movlw	27
  3221  055D  0021               	movlb	1	; select bank1
  3222  055E  009D               	movwf	29	;volatile
  3223  055F                     l249:	
  3224                           ;main.c: 469: while(ADCON0 & 0x02);
  3225                           
  3226  055F  189D               	btfsc	29,1	;volatile
  3227  0560  2D5F               	goto	l249
  3228                           
  3229                           ;main.c: 471: ad2 = ((unsigned int)ADRESH << 8) | (unsigned int)ADRESL;
  3230  0561  081C               	movf	28,w	;volatile
  3231  0562  0020               	movlb	0	; select bank0
  3232  0563  01AD               	clrf	CheckVoltage@ad2+1
  3233  0564  07AD               	addwf	CheckVoltage@ad2+1,f
  3234  0565  0021               	movlb	1	; select bank1
  3235  0566  081B               	movf	27,w	;volatile
  3236  0567  0020               	movlb	0	; select bank0
  3237  0568  01AC               	clrf	CheckVoltage@ad2
  3238  0569  07AC               	addwf	CheckVoltage@ad2,f
  3239                           
  3240                           ;main.c: 473: LATCbits.LATC3 = 0;
  3241  056A  0022               	movlb	2	; select bank2
  3242  056B  118E               	bcf	14,3	;volatile
  3243                           
  3244                           ;main.c: 476: thresh = (unsigned int)(0x3ff * 100.0 / 102.0 * 0.8);
  3245  056C  3022               	movlw	34
  3246  056D  0020               	movlb	0	; select bank0
  3247  056E  00AE               	movwf	CheckVoltage@thresh
  3248  056F  3003               	movlw	3
  3249  0570  00AF               	movwf	CheckVoltage@thresh+1
  3250                           
  3251                           ;main.c: 478: if(ad2 < thresh)
  3252  0571  082F               	movf	CheckVoltage@thresh+1,w
  3253  0572  022D               	subwf	CheckVoltage@ad2+1,w
  3254  0573  1D03               	skipz
  3255  0574  2D77               	goto	u2495
  3256  0575  082E               	movf	CheckVoltage@thresh,w
  3257  0576  022C               	subwf	CheckVoltage@ad2,w
  3258  0577                     u2495:	
  3259  0577  1803               	skipnc
  3260  0578  2D7B               	goto	l2522
  3261                           
  3262                           ;main.c: 479: {
  3263                           ;main.c: 480: return 1;
  3264  0579  3001               	movlw	1
  3265  057A  0008               	return
  3266  057B                     l2522:	
  3267                           
  3268                           ;main.c: 481: }
  3269                           ;main.c: 484: thresh = (unsigned int)1013;
  3270  057B  30F5               	movlw	245
  3271  057C  00AE               	movwf	CheckVoltage@thresh
  3272  057D  3003               	movlw	3
  3273  057E  00AF               	movwf	CheckVoltage@thresh+1
  3274                           
  3275                           ;main.c: 486: if(ad2 > thresh)
  3276  057F  082D               	movf	CheckVoltage@ad2+1,w
  3277  0580  022F               	subwf	CheckVoltage@thresh+1,w
  3278  0581  1D03               	skipz
  3279  0582  2D85               	goto	u2505
  3280  0583  082C               	movf	CheckVoltage@ad2,w
  3281  0584  022E               	subwf	CheckVoltage@thresh,w
  3282  0585                     u2505:	
  3283  0585  1803               	skipnc
  3284  0586  2D89               	goto	l2528
  3285                           
  3286                           ;main.c: 487: {
  3287                           ;main.c: 488: return 2;
  3288  0587  3002               	movlw	2
  3289  0588  0008               	return
  3290  0589                     l2528:	
  3291                           
  3292                           ;main.c: 489: }
  3293                           ;main.c: 490: return 0;
  3294  0589  3000               	movlw	0
  3295  058A  0008               	return
  3296  058B                     __end_of_CheckVoltage:	
  3297                           
  3298                           	psect	intentry
  3299  0004                     __pintentry:	
  3300 ;; *************** function _isr *****************
  3301 ;; Defined at:
  3302 ;;		line 493 in file "main.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;		None               void
  3309 ;; Registers used:
  3310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1
  3316 ;;      Params:         0       0       0
  3317 ;;      Locals:         0       0       0
  3318 ;;      Temps:          0       2       0
  3319 ;;      Totals:         0       2       0
  3320 ;;Total ram usage:        2 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    4
  3323 ;; This function calls:
  3324 ;;		i1_CheckStatus
  3325 ;;		i1_SerialLED
  3326 ;;		i1_StatusDisplayADC
  3327 ;; This function is called by:
  3328 ;;		Interrupt level 1
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332  0004                     _isr:	
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3336  0004  147E               	bsf	126,0	;set compiler interrupt flag
  3337  0005  3180               	pagesel	$
  3338  0006  0020               	movlb	0	; select bank0
  3339  0007  087F               	movf	127,w
  3340  0008  00AB               	movwf	??_isr+1
  3341                           
  3342                           ;main.c: 494: if(IOCAFbits.IOCAF5 != 1){
  3343  0009  0027               	movlb	7	; select bank7
  3344  000A  1A93               	btfsc	19,5	;volatile
  3345  000B  2847               	goto	i1l257
  3346                           
  3347                           ;main.c: 495: CheckStatus();
  3348  000C  2602               	fcall	i1_CheckStatus
  3349                           
  3350                           ;main.c: 496: if(BeepStatus!=1){
  3351  000D  0020               	movlb	0	; select bank0
  3352  000E  0854               	movf	_BeepStatus,w
  3353  000F  3A01               	xorlw	1
  3354  0010  1D03               	btfss	3,2
  3355                           
  3356                           ;main.c: 497: if(PIR1bits.TMR1IF == 1) {
  3357  0011  1C11               	btfss	17,0	;volatile
  3358  0012  2844               	goto	i1l2208
  3359                           
  3360                           ;main.c: 498: if(ChargeStatus == 2){
  3361  0013  0855               	movf	_ChargeStatus,w
  3362  0014  3A02               	xorlw	2
  3363  0015  1D03               	skipz
  3364  0016  281B               	goto	i1l2180
  3365                           
  3366                           ;main.c: 499: SerialLED(20,0,0);
  3367  0017  01F9               	clrf	i1SerialLED@g
  3368  0018  01FA               	clrf	i1SerialLED@b
  3369  0019  3014               	movlw	20
  3370  001A  2826               	goto	L3
  3371  001B                     i1l2180:	
  3372                           ;main.c: 500: }else if(ChargeStatus == 3){
  3373                           
  3374  001B  0020               	movlb	0	; select bank0
  3375  001C  0855               	movf	_ChargeStatus,w
  3376  001D  3A03               	xorlw	3
  3377  001E  1D03               	skipz
  3378  001F  2827               	goto	i1l2184
  3379                           
  3380                           ;main.c: 501: SerialLED(0,0,25);
  3381  0020  01F9               	clrf	i1SerialLED@g
  3382  0021  3019               	movlw	25
  3383  0022  00AA               	movwf	??_isr
  3384  0023  082A               	movf	??_isr,w
  3385  0024  00FA               	movwf	i1SerialLED@b
  3386  0025  3000               	movlw	0
  3387  0026                     L3:	
  3388  0026  258B               	fcall	i1_SerialLED
  3389  0027                     i1l2184:	
  3390                           
  3391                           ;main.c: 502: }
  3392                           ;main.c: 503: TMR1H = (-2000>>8);
  3393  0027  30F8               	movlw	248
  3394  0028  0020               	movlb	0	; select bank0
  3395  0029  0097               	movwf	23	;volatile
  3396                           
  3397                           ;main.c: 504: TMR1L = (-2000 & 0x00ff);
  3398  002A  3030               	movlw	48
  3399  002B  0096               	movwf	22	;volatile
  3400                           
  3401                           ;main.c: 505: if(ChargeStatus == 1){
  3402  002C  0855               	movf	_ChargeStatus,w
  3403  002D  3A01               	xorlw	1
  3404  002E  1D03               	skipz
  3405  002F  2844               	goto	i1l2208
  3406                           
  3407                           ;main.c: 506: if(fLED == 0){
  3408  0030  08DE               	movf	_fLED,f
  3409  0031  1D03               	skipz
  3410  0032  283B               	goto	i1l2200
  3411                           
  3412                           ;main.c: 507: fLED = 1;
  3413  0033  01DE               	clrf	_fLED
  3414  0034  0ADE               	incf	_fLED,f
  3415                           
  3416                           ;main.c: 508: StatusDisplayADC();
  3417  0035  2417               	fcall	i1_StatusDisplayADC
  3418                           
  3419                           ;main.c: 520: TMR1H = (-1);
  3420  0036  30FF               	movlw	255
  3421  0037  0020               	movlb	0	; select bank0
  3422  0038  0097               	movwf	23	;volatile
  3423                           
  3424                           ;main.c: 521: TMR1L = (0);
  3425  0039  0196               	clrf	22	;volatile
  3426                           
  3427                           ;main.c: 522: }else{
  3428  003A  2844               	goto	i1l2208
  3429  003B                     i1l2200:	
  3430                           
  3431                           ;main.c: 523: fLED = 0;
  3432  003B  01DE               	clrf	_fLED
  3433                           
  3434                           ;main.c: 524: TMR1H = (-1*8000 >> 8);
  3435  003C  30E0               	movlw	224
  3436  003D  0097               	movwf	23	;volatile
  3437                           
  3438                           ;main.c: 525: TMR1L = (-1*8000 & 0x00ff);
  3439  003E  30C0               	movlw	192
  3440  003F  0096               	movwf	22	;volatile
  3441                           
  3442                           ;main.c: 526: SerialLED(0,0,0);
  3443  0040  01F9               	clrf	i1SerialLED@g
  3444  0041  01FA               	clrf	i1SerialLED@b
  3445  0042  3000               	movlw	0
  3446  0043  258B               	fcall	i1_SerialLED
  3447  0044                     i1l2208:	
  3448                           
  3449                           ;main.c: 527: }
  3450                           ;main.c: 528: }
  3451                           ;main.c: 529: }
  3452                           ;main.c: 530: }
  3453                           ;main.c: 531: PIR1bits.TMR1IF = 0;
  3454  0044  0020               	movlb	0	; select bank0
  3455  0045  1011               	bcf	17,0	;volatile
  3456                           
  3457                           ;main.c: 532: }else{IOCAFbits.IOCAF5 =0;}
  3458  0046  2848               	goto	i1l267
  3459  0047                     i1l257:	
  3460  0047  1293               	bcf	19,5	;volatile
  3461  0048                     i1l267:	
  3462  0048  0020               	movlb	0	; select bank0
  3463  0049  082B               	movf	??_isr+1,w
  3464  004A  00FF               	movwf	127
  3465  004B  107E               	bcf	126,0	;clear compiler interrupt flag
  3466  004C  0009               	retfie
  3467  004D                     __end_of_isr:	
  3468                           
  3469                           	psect	text22
  3470  0417                     __ptext22:	
  3471 ;; *************** function i1_StatusDisplayADC *****************
  3472 ;; Defined at:
  3473 ;;		line 174 in file "main.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;		None               void
  3480 ;; Registers used:
  3481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1
  3487 ;;      Params:         0       0       0
  3488 ;;      Locals:         0       0       0
  3489 ;;      Temps:          0       1       0
  3490 ;;      Totals:         0       1       0
  3491 ;;Total ram usage:        1 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    3
  3494 ;; This function calls:
  3495 ;;		i1_BatteryCheckVoltage
  3496 ;;		i1_SerialLED
  3497 ;;		i1___ftge
  3498 ;;		i1___lwtoft
  3499 ;; This function is called by:
  3500 ;;		_isr
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function i1_StatusDisplayADC
  3506  0417                     i1_StatusDisplayADC:	
  3507                           
  3508                           ;main.c: 175: vBattery = BatteryCheckVoltage();
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in i1_StatusDisplayADC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3512  0417  2688               	fcall	i1_BatteryCheckVoltage
  3513  0418  0871               	movf	?i1_BatteryCheckVoltage+1,w
  3514  0419  0020               	movlb	0	; select bank0
  3515  041A  01D2               	clrf	_vBattery+1
  3516  041B  07D2               	addwf	_vBattery+1,f
  3517  041C  0870               	movf	?i1_BatteryCheckVoltage,w
  3518  041D  01D1               	clrf	_vBattery
  3519  041E  07D1               	addwf	_vBattery,f
  3520                           
  3521                           ;main.c: 177: if(vBattery > 0x03ff*0.37){
  3522  041F  3041               	movlw	65
  3523  0420  00A0               	movwf	i1___ftge@ff1
  3524  0421  30BD               	movlw	189
  3525  0422  00A1               	movwf	i1___ftge@ff1+1
  3526  0423  3043               	movlw	67
  3527  0424  00A2               	movwf	i1___ftge@ff1+2
  3528  0425  0852               	movf	_vBattery+1,w
  3529  0426  01F9               	clrf	i1___lwtoft@c+1
  3530  0427  07F9               	addwf	i1___lwtoft@c+1,f
  3531  0428  0851               	movf	_vBattery,w
  3532  0429  01F8               	clrf	i1___lwtoft@c
  3533  042A  07F8               	addwf	i1___lwtoft@c,f
  3534  042B  26C9               	fcall	i1___lwtoft
  3535  042C  0878               	movf	?i1___lwtoft,w
  3536  042D  0020               	movlb	0	; select bank0
  3537  042E  00A3               	movwf	i1___ftge@ff2
  3538  042F  0879               	movf	?i1___lwtoft+1,w
  3539  0430  00A4               	movwf	i1___ftge@ff2+1
  3540  0431  087A               	movf	?i1___lwtoft+2,w
  3541  0432  00A5               	movwf	i1___ftge@ff2+2
  3542  0433  24E3               	fcall	i1___ftge
  3543  0434  1803               	btfsc	3,0
  3544  0435  2C3F               	goto	i1l2012
  3545                           
  3546                           ;main.c: 178: SerialLED(0,0,20);
  3547  0436  01F9               	clrf	i1SerialLED@g
  3548  0437  3014               	movlw	20
  3549  0438  0020               	movlb	0	; select bank0
  3550  0439  00A9               	movwf	??i1_StatusDisplayADC
  3551  043A  0829               	movf	??i1_StatusDisplayADC,w
  3552  043B  00FA               	movwf	i1SerialLED@b
  3553  043C  3000               	movlw	0
  3554  043D  258B               	fcall	i1_SerialLED
  3555                           
  3556                           ;main.c: 179: }else{
  3557  043E  0008               	return
  3558  043F                     i1l2012:	
  3559                           
  3560                           ;main.c: 180: if(vBattery > 0x03ff*0.31){
  3561  043F  3091               	movlw	145
  3562  0440  0020               	movlb	0	; select bank0
  3563  0441  00A0               	movwf	i1___ftge@ff1
  3564  0442  309E               	movlw	158
  3565  0443  00A1               	movwf	i1___ftge@ff1+1
  3566  0444  3043               	movlw	67
  3567  0445  00A2               	movwf	i1___ftge@ff1+2
  3568  0446  0852               	movf	_vBattery+1,w
  3569  0447  01F9               	clrf	i1___lwtoft@c+1
  3570  0448  07F9               	addwf	i1___lwtoft@c+1,f
  3571  0449  0851               	movf	_vBattery,w
  3572  044A  01F8               	clrf	i1___lwtoft@c
  3573  044B  07F8               	addwf	i1___lwtoft@c,f
  3574  044C  26C9               	fcall	i1___lwtoft
  3575  044D  0878               	movf	?i1___lwtoft,w
  3576  044E  0020               	movlb	0	; select bank0
  3577  044F  00A3               	movwf	i1___ftge@ff2
  3578  0450  0879               	movf	?i1___lwtoft+1,w
  3579  0451  00A4               	movwf	i1___ftge@ff2+1
  3580  0452  087A               	movf	?i1___lwtoft+2,w
  3581  0453  00A5               	movwf	i1___ftge@ff2+2
  3582  0454  24E3               	fcall	i1___ftge
  3583  0455  1803               	btfsc	3,0
  3584  0456  2C60               	goto	i1l2016
  3585                           
  3586                           ;main.c: 181: SerialLED(24,13,0);
  3587  0457  300D               	movlw	13
  3588  0458  0020               	movlb	0	; select bank0
  3589  0459  00A9               	movwf	??i1_StatusDisplayADC
  3590  045A  0829               	movf	??i1_StatusDisplayADC,w
  3591  045B  00F9               	movwf	i1SerialLED@g
  3592  045C  01FA               	clrf	i1SerialLED@b
  3593  045D  3018               	movlw	24
  3594  045E  258B               	fcall	i1_SerialLED
  3595                           
  3596                           ;main.c: 182: }else{
  3597  045F  0008               	return
  3598  0460                     i1l2016:	
  3599                           
  3600                           ;main.c: 183: SerialLED(40,0,0);
  3601  0460  01F9               	clrf	i1SerialLED@g
  3602  0461  01FA               	clrf	i1SerialLED@b
  3603  0462  3028               	movlw	40
  3604  0463  258B               	fcall	i1_SerialLED
  3605  0464  0008               	return
  3606  0465                     __end_ofi1_StatusDisplayADC:	
  3607                           
  3608                           	psect	text23
  3609  06C9                     __ptext23:	
  3610 ;; *************** function i1___lwtoft *****************
  3611 ;; Defined at:
  3612 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\lwtoft.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  c               2    8[COMMON] unsigned int 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  3    8[COMMON] float 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, pclath, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1
  3626 ;;      Params:         3       0       0
  3627 ;;      Locals:         0       0       0
  3628 ;;      Temps:          1       0       0
  3629 ;;      Totals:         4       0       0
  3630 ;;Total ram usage:        4 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    1
  3633 ;; This function calls:
  3634 ;;		i1___ftpack
  3635 ;; This function is called by:
  3636 ;;		i1_StatusDisplayADC
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function i1___lwtoft
  3642  06C9                     i1___lwtoft:	
  3643                           
  3644                           ;incstack = 0
  3645                           ; Regs used in i1___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3646  06C9  0878               	movf	i1___lwtoft@c,w
  3647  06CA  00F0               	movwf	i1___ftpack@arg
  3648  06CB  0879               	movf	i1___lwtoft@c+1,w
  3649  06CC  00F1               	movwf	i1___ftpack@arg+1
  3650  06CD  01F2               	clrf	i1___ftpack@arg+2
  3651  06CE  308E               	movlw	142
  3652  06CF  00FB               	movwf	??i1___lwtoft
  3653  06D0  087B               	movf	??i1___lwtoft,w
  3654  06D1  00F3               	movwf	i1___ftpack@exp
  3655  06D2  01F4               	clrf	i1___ftpack@sign
  3656  06D3  2314               	fcall	i1___ftpack
  3657  06D4  0870               	movf	?i1___ftpack,w
  3658  06D5  00F8               	movwf	?i1___lwtoft
  3659  06D6  0871               	movf	?i1___ftpack+1,w
  3660  06D7  00F9               	movwf	?i1___lwtoft+1
  3661  06D8  0872               	movf	?i1___ftpack+2,w
  3662  06D9  00FA               	movwf	?i1___lwtoft+2
  3663  06DA  0008               	return
  3664  06DB                     __end_ofi1___lwtoft:	
  3665                           
  3666                           	psect	text24
  3667  0314                     __ptext24:	
  3668 ;; *************** function i1___ftpack *****************
  3669 ;; Defined at:
  3670 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\float.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  arg             3    0[COMMON] unsigned um
  3673 ;;  exp             1    3[COMMON] unsigned char 
  3674 ;;  sign            1    4[COMMON] unsigned char 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  3    0[COMMON] float 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMMON   BANK0   BANK1
  3686 ;;      Params:         5       0       0
  3687 ;;      Locals:         0       0       0
  3688 ;;      Temps:          3       0       0
  3689 ;;      Totals:         8       0       0
  3690 ;;Total ram usage:        8 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		i1___lwtoft
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function i1___ftpack
  3701  0314                     i1___ftpack:	
  3702                           
  3703                           ;incstack = 0
  3704                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  3705  0314  0873               	movf	i1___ftpack@exp,w
  3706  0315  1903               	btfsc	3,2
  3707  0316  2B1C               	goto	i1l1726
  3708  0317  0872               	movf	i1___ftpack@arg+2,w
  3709  0318  0471               	iorwf	i1___ftpack@arg+1,w
  3710  0319  0470               	iorwf	i1___ftpack@arg,w
  3711  031A  1D03               	skipz
  3712  031B  2B2D               	goto	i1l1732
  3713  031C                     i1l1726:	
  3714  031C  3000               	movlw	0
  3715  031D  00F0               	movwf	?i1___ftpack
  3716  031E  3000               	movlw	0
  3717  031F  00F1               	movwf	?i1___ftpack+1
  3718  0320  3000               	movlw	0
  3719  0321  00F2               	movwf	?i1___ftpack+2
  3720  0322  0008               	return
  3721  0323                     i1l1730:	
  3722  0323  3001               	movlw	1
  3723  0324  00F5               	movwf	??i1___ftpack
  3724  0325  0875               	movf	??i1___ftpack,w
  3725  0326  07F3               	addwf	i1___ftpack@exp,f
  3726  0327  3001               	movlw	1
  3727  0328                     u143_25:	
  3728  0328  36F2               	lsrf	i1___ftpack@arg+2,f
  3729  0329  0CF1               	rrf	i1___ftpack@arg+1,f
  3730  032A  0CF0               	rrf	i1___ftpack@arg,f
  3731  032B  0B89               	decfsz	9,f
  3732  032C  2B28               	goto	u143_25
  3733  032D                     i1l1732:	
  3734  032D  30FE               	movlw	254
  3735  032E  0572               	andwf	i1___ftpack@arg+2,w
  3736  032F  1903               	btfsc	3,2
  3737  0330  2B46               	goto	i1l512
  3738  0331  2B23               	goto	i1l1730
  3739  0332                     i1l1734:	
  3740  0332  3001               	movlw	1
  3741  0333  00F5               	movwf	??i1___ftpack
  3742  0334  0875               	movf	??i1___ftpack,w
  3743  0335  07F3               	addwf	i1___ftpack@exp,f
  3744  0336  3001               	movlw	1
  3745  0337  07F0               	addwf	i1___ftpack@arg,f
  3746  0338  3000               	movlw	0
  3747  0339  1803               	skipnc
  3748  033A  3001               	movlw	1
  3749  033B  07F1               	addwf	i1___ftpack@arg+1,f
  3750  033C  3000               	movlw	0
  3751  033D  1803               	skipnc
  3752  033E  3001               	movlw	1
  3753  033F  07F2               	addwf	i1___ftpack@arg+2,f
  3754  0340  3001               	movlw	1
  3755  0341                     u145_25:	
  3756  0341  36F2               	lsrf	i1___ftpack@arg+2,f
  3757  0342  0CF1               	rrf	i1___ftpack@arg+1,f
  3758  0343  0CF0               	rrf	i1___ftpack@arg,f
  3759  0344  0B89               	decfsz	9,f
  3760  0345  2B41               	goto	u145_25
  3761  0346                     i1l512:	
  3762  0346  30FF               	movlw	255
  3763  0347  0572               	andwf	i1___ftpack@arg+2,w
  3764  0348  1903               	btfsc	3,2
  3765  0349  2B53               	goto	i1l1742
  3766  034A  2B32               	goto	i1l1734
  3767  034B                     i1l1740:	
  3768  034B  3001               	movlw	1
  3769  034C  02F3               	subwf	i1___ftpack@exp,f
  3770  034D  3001               	movlw	1
  3771  034E                     u147_25:	
  3772  034E  35F0               	lslf	i1___ftpack@arg,f
  3773  034F  0DF1               	rlf	i1___ftpack@arg+1,f
  3774  0350  0DF2               	rlf	i1___ftpack@arg+2,f
  3775  0351  0B89               	decfsz	9,f
  3776  0352  2B4E               	goto	u147_25
  3777  0353                     i1l1742:	
  3778  0353  1FF1               	btfss	i1___ftpack@arg+1,7
  3779  0354  2B4B               	goto	i1l1740
  3780  0355  1873               	btfsc	i1___ftpack@exp,0
  3781  0356  2B5D               	goto	i1l518
  3782  0357  30FF               	movlw	255
  3783  0358  05F0               	andwf	i1___ftpack@arg,f
  3784  0359  307F               	movlw	127
  3785  035A  05F1               	andwf	i1___ftpack@arg+1,f
  3786  035B  30FF               	movlw	255
  3787  035C  05F2               	andwf	i1___ftpack@arg+2,f
  3788  035D                     i1l518:	
  3789  035D  1003               	clrc
  3790  035E  0CF3               	rrf	i1___ftpack@exp,f
  3791  035F  0873               	movf	i1___ftpack@exp,w
  3792  0360  00F5               	movwf	??i1___ftpack
  3793  0361  01F6               	clrf	??i1___ftpack+1
  3794  0362  01F7               	clrf	??i1___ftpack+2
  3795  0363  3010               	movlw	16
  3796  0364                     u150_25:	
  3797  0364  35F5               	lslf	??i1___ftpack,f
  3798  0365  0DF6               	rlf	??i1___ftpack+1,f
  3799  0366  0DF7               	rlf	??i1___ftpack+2,f
  3800  0367  0B89               	decfsz	9,f
  3801  0368  2B64               	goto	u150_25
  3802  0369  0875               	movf	??i1___ftpack,w
  3803  036A  04F0               	iorwf	i1___ftpack@arg,f
  3804  036B  0876               	movf	??i1___ftpack+1,w
  3805  036C  04F1               	iorwf	i1___ftpack@arg+1,f
  3806  036D  0877               	movf	??i1___ftpack+2,w
  3807  036E  04F2               	iorwf	i1___ftpack@arg+2,f
  3808  036F  0874               	movf	i1___ftpack@sign,w
  3809  0370  1903               	btfsc	3,2
  3810  0371  0008               	return
  3811  0372  17F2               	bsf	i1___ftpack@arg+2,7
  3812  0373  0008               	return
  3813  0374                     __end_ofi1___ftpack:	
  3814                           
  3815                           	psect	text25
  3816  04E3                     __ptext25:	
  3817 ;; *************** function i1___ftge *****************
  3818 ;; Defined at:
  3819 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftge.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  ff1             3    0[BANK0 ] float 
  3822 ;;  ff2             3    3[BANK0 ] float 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;		None               void
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1
  3834 ;;      Params:         0       6       0
  3835 ;;      Locals:         0       0       0
  3836 ;;      Temps:          0       3       0
  3837 ;;      Totals:         0       9       0
  3838 ;;Total ram usage:        9 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		i1_StatusDisplayADC
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function i1___ftge
  3849  04E3                     i1___ftge:	
  3850                           
  3851                           ;incstack = 0
  3852                           ; Regs used in i1___ftge: [wreg+status,2+status,0]
  3853  04E3  0020               	movlb	0	; select bank0
  3854  04E4  1FA2               	btfss	i1___ftge@ff1+2,7
  3855  04E5  2CFA               	goto	i1l1874
  3856  04E6  0920               	comf	i1___ftge@ff1,w
  3857  04E7  00A6               	movwf	??i1___ftge
  3858  04E8  0921               	comf	i1___ftge@ff1+1,w
  3859  04E9  00A7               	movwf	??i1___ftge+1
  3860  04EA  0922               	comf	i1___ftge@ff1+2,w
  3861  04EB  00A8               	movwf	??i1___ftge+2
  3862  04EC  0AA6               	incf	??i1___ftge,f
  3863  04ED  1903               	skipnz
  3864  04EE  0AA7               	incf	??i1___ftge+1,f
  3865  04EF  1903               	skipnz
  3866  04F0  0AA8               	incf	??i1___ftge+2,f
  3867  04F1  3000               	movlw	0
  3868  04F2  0726               	addwf	??i1___ftge,w
  3869  04F3  00A0               	movwf	i1___ftge@ff1
  3870  04F4  3000               	movlw	0
  3871  04F5  3D27               	addwfc	??i1___ftge+1,w
  3872  04F6  00A1               	movwf	i1___ftge@ff1+1
  3873  04F7  3080               	movlw	128
  3874  04F8  3D28               	addwfc	??i1___ftge+2,w
  3875  04F9  00A2               	movwf	i1___ftge@ff1+2
  3876  04FA                     i1l1874:	
  3877  04FA  1FA5               	btfss	i1___ftge@ff2+2,7
  3878  04FB  2D10               	goto	i1l1878
  3879  04FC  0923               	comf	i1___ftge@ff2,w
  3880  04FD  00A6               	movwf	??i1___ftge
  3881  04FE  0924               	comf	i1___ftge@ff2+1,w
  3882  04FF  00A7               	movwf	??i1___ftge+1
  3883  0500  0925               	comf	i1___ftge@ff2+2,w
  3884  0501  00A8               	movwf	??i1___ftge+2
  3885  0502  0AA6               	incf	??i1___ftge,f
  3886  0503  1903               	skipnz
  3887  0504  0AA7               	incf	??i1___ftge+1,f
  3888  0505  1903               	skipnz
  3889  0506  0AA8               	incf	??i1___ftge+2,f
  3890  0507  3000               	movlw	0
  3891  0508  0726               	addwf	??i1___ftge,w
  3892  0509  00A3               	movwf	i1___ftge@ff2
  3893  050A  3000               	movlw	0
  3894  050B  3D27               	addwfc	??i1___ftge+1,w
  3895  050C  00A4               	movwf	i1___ftge@ff2+1
  3896  050D  3080               	movlw	128
  3897  050E  3D28               	addwfc	??i1___ftge+2,w
  3898  050F  00A5               	movwf	i1___ftge@ff2+2
  3899  0510                     i1l1878:	
  3900  0510  3080               	movlw	128
  3901  0511  06A2               	xorwf	i1___ftge@ff1+2,f
  3902  0512  3080               	movlw	128
  3903  0513  06A5               	xorwf	i1___ftge@ff2+2,f
  3904  0514  0825               	movf	i1___ftge@ff2+2,w
  3905  0515  0222               	subwf	i1___ftge@ff1+2,w
  3906  0516  1D03               	skipz
  3907  0517  0008               	return
  3908  0518  0824               	movf	i1___ftge@ff2+1,w
  3909  0519  0221               	subwf	i1___ftge@ff1+1,w
  3910  051A  1D03               	skipz
  3911  051B  0008               	return
  3912  051C  0823               	movf	i1___ftge@ff2,w
  3913  051D  0220               	subwf	i1___ftge@ff1,w
  3914  051E  0008               	return
  3915  051F                     __end_ofi1___ftge:	
  3916                           
  3917                           	psect	text26
  3918  058B                     __ptext26:	
  3919 ;; *************** function i1_SerialLED *****************
  3920 ;; Defined at:
  3921 ;;		line 123 in file "main.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  r               1    wreg     unsigned char 
  3924 ;;  g               1    9[COMMON] unsigned char 
  3925 ;;  b               1   10[COMMON] unsigned char 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  r               1   13[COMMON] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;		None               void
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1
  3937 ;;      Params:         2       0       0
  3938 ;;      Locals:         1       0       0
  3939 ;;      Temps:          2       0       0
  3940 ;;      Totals:         5       0       0
  3941 ;;Total ram usage:        5 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    2
  3944 ;; This function calls:
  3945 ;;		i1_SendLED
  3946 ;; This function is called by:
  3947 ;;		_isr
  3948 ;;		i1_StatusDisplayADC
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           
  3953                           ;psect for function i1_SerialLED
  3954  058B                     i1_SerialLED:	
  3955                           
  3956                           ;incstack = 0
  3957                           ; Regs used in i1_SerialLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3958                           ;i1SerialLED@r stored from wreg
  3959  058B  00FD               	movwf	i1SerialLED@r
  3960                           
  3961                           ;main.c: 124: T1CONbits.TMR1ON = 0;
  3962  058C  0020               	movlb	0	; select bank0
  3963  058D  1018               	bcf	24,0	;volatile
  3964                           
  3965                           ;main.c: 125: _delay((unsigned long)((1)*(62500/4000.0)));
  3966  058E  3004               	movlw	4
  3967  058F  00FB               	movwf	??i1_SerialLED
  3968  0590                     u283_27:	
  3969  0590  0BFB               	decfsz	??i1_SerialLED,f
  3970  0591  2D90               	goto	u283_27
  3971  0592  3200               	nop2	;nop
  3972                           
  3973                           ;main.c: 126: OSCCONbits.IRCF = 0b1110;
  3974  0593  0021               	movlb	1	; select bank1
  3975  0594  0819               	movf	25,w	;volatile
  3976  0595  3987               	andlw	-121
  3977  0596  3870               	iorlw	112
  3978  0597  0099               	movwf	25	;volatile
  3979                           
  3980                           ;main.c: 127: _delay((unsigned long)((2000)*(62500/4000.0)));
  3981  0598  3029               	movlw	41
  3982  0599  00FC               	movwf	??i1_SerialLED+1
  3983  059A  3094               	movlw	148
  3984  059B  00FB               	movwf	??i1_SerialLED
  3985  059C                     u284_27:	
  3986  059C  0BFB               	decfsz	??i1_SerialLED,f
  3987  059D  2D9C               	goto	u284_27
  3988  059E  0BFC               	decfsz	??i1_SerialLED+1,f
  3989  059F  2D9C               	goto	u284_27
  3990  05A0  0000               	nop
  3991                           
  3992                           ;main.c: 128: R[0]=r;
  3993  05A1  087D               	movf	i1SerialLED@r,w
  3994  05A2  00FB               	movwf	??i1_SerialLED
  3995  05A3  087B               	movf	??i1_SerialLED,w
  3996  05A4  0020               	movlb	0	; select bank0
  3997  05A5  00D9               	movwf	_R
  3998                           
  3999                           ;main.c: 129: G[0]=g;
  4000  05A6  0879               	movf	i1SerialLED@g,w
  4001  05A7  00FB               	movwf	??i1_SerialLED
  4002  05A8  087B               	movf	??i1_SerialLED,w
  4003  05A9  00D6               	movwf	_G
  4004                           
  4005                           ;main.c: 130: B[0]=b;
  4006  05AA  087A               	movf	i1SerialLED@b,w
  4007  05AB  00FB               	movwf	??i1_SerialLED
  4008  05AC  087B               	movf	??i1_SerialLED,w
  4009  05AD  00D3               	movwf	_B
  4010                           
  4011                           ;main.c: 131: SendLED(0+1);
  4012  05AE  3001               	movlw	1
  4013  05AF  00F0               	movwf	i1SendLED@num
  4014  05B0  3000               	movlw	0
  4015  05B1  00F1               	movwf	i1SendLED@num+1
  4016  05B2  2210               	fcall	i1_SendLED
  4017                           
  4018                           ;main.c: 132: OSCCONbits.IRCF = 0b0100;
  4019  05B3  0021               	movlb	1	; select bank1
  4020  05B4  0819               	movf	25,w	;volatile
  4021  05B5  3987               	andlw	-121
  4022  05B6  3820               	iorlw	32
  4023  05B7  0099               	movwf	25	;volatile
  4024                           
  4025                           ;main.c: 133: _delay((unsigned long)((10)*(62500/4000.0)));
  4026  05B8  3033               	movlw	51
  4027  05B9  00FB               	movwf	??i1_SerialLED
  4028  05BA                     u285_27:	
  4029  05BA  0BFB               	decfsz	??i1_SerialLED,f
  4030  05BB  2DBA               	goto	u285_27
  4031  05BC  3200               	nop2	;nop
  4032                           
  4033                           ;main.c: 134: T1CONbits.TMR1ON = 1;
  4034  05BD  0020               	movlb	0	; select bank0
  4035  05BE  1418               	bsf	24,0	;volatile
  4036  05BF  0008               	return
  4037  05C0                     __end_ofi1_SerialLED:	
  4038                           
  4039                           	psect	text27
  4040  0210                     __ptext27:	
  4041 ;; *************** function i1_SendLED *****************
  4042 ;; Defined at:
  4043 ;;		line 98 in file "main.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  num             2    0[COMMON] int 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  SendLED         2    7[COMMON] int 
  4048 ;;  SendLED         2    5[COMMON] int 
  4049 ;;  SendLED         2    3[COMMON] int 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;		None               void
  4052 ;; Registers used:
  4053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1
  4059 ;;      Params:         2       0       0
  4060 ;;      Locals:         6       0       0
  4061 ;;      Temps:          1       0       0
  4062 ;;      Totals:         9       0       0
  4063 ;;Total ram usage:        9 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    1
  4066 ;; This function calls:
  4067 ;;		i1_Data0
  4068 ;;		i1_Data1
  4069 ;; This function is called by:
  4070 ;;		i1_SerialLED
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           
  4075                           ;psect for function i1_SendLED
  4076  0210                     i1_SendLED:	
  4077                           
  4078                           ;main.c: 99: int loop8,loopNum;
  4079                           ;main.c: 100: int comp;
  4080                           ;main.c: 101: for(loopNum=0;loopNum<num;loopNum++){
  4081                           
  4082                           ;incstack = 0
  4083                           ; Regs used in i1_SendLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4084  0210  01F3               	clrf	i1SendLED@loopNum
  4085  0211  01F4               	clrf	i1SendLED@loopNum+1
  4086  0212                     i1l145:	
  4087  0212  0874               	movf	i1SendLED@loopNum+1,w
  4088  0213  3A80               	xorlw	128
  4089  0214  00F2               	movwf	??i1_SendLED
  4090  0215  0871               	movf	i1SendLED@num+1,w
  4091  0216  3A80               	xorlw	128
  4092  0217  0272               	subwf	??i1_SendLED,w
  4093  0218  1D03               	skipz
  4094  0219  2A1C               	goto	u140_25
  4095  021A  0870               	movf	i1SendLED@num,w
  4096  021B  0273               	subwf	i1SendLED@loopNum,w
  4097  021C                     u140_25:	
  4098  021C  1803               	btfsc	3,0
  4099  021D  2AAD               	goto	i1l1720
  4100                           
  4101                           ;main.c: 102: comp=128;
  4102  021E  3080               	movlw	128
  4103  021F  00F7               	movwf	i1SendLED@comp
  4104  0220  3000               	movlw	0
  4105  0221  00F8               	movwf	i1SendLED@comp+1
  4106                           
  4107                           ;main.c: 103: for(loop8=0;loop8<8;loop8++){
  4108  0222  01F5               	clrf	i1SendLED@loop8
  4109  0223  01F6               	clrf	i1SendLED@loop8+1
  4110  0224  0876               	movf	i1SendLED@loop8+1,w
  4111  0225  3A80               	xorlw	128
  4112  0226  00F2               	movwf	??i1_SendLED
  4113  0227  3080               	movlw	128
  4114  0228  0272               	subwf	??i1_SendLED,w
  4115  0229  3008               	movlw	8
  4116  022A  1903               	btfsc	3,2
  4117  022B  0275               	subwf	i1SendLED@loop8,w
  4118  022C  1803               	btfsc	3,0
  4119  022D  2A4C               	goto	i1l1678
  4120  022E                     i1l1666:	
  4121                           
  4122                           ;main.c: 104: if(comp&G[loopNum]){Data1();}else{Data0();}
  4123  022E  0873               	movf	i1SendLED@loopNum,w
  4124  022F  3E56               	addlw	_G& (0+255)
  4125  0230  0086               	movwf	6
  4126  0231  0187               	clrf	7
  4127  0232  0801               	movf	1,w
  4128  0233  0577               	andwf	i1SendLED@comp,w
  4129  0234  1903               	btfsc	3,2
  4130  0235  2A38               	goto	i1l1670
  4131  0236  26E5               	fcall	i1_Data1
  4132  0237  2A39               	goto	i1l1672
  4133  0238                     i1l1670:	
  4134  0238  26FB               	fcall	i1_Data0
  4135  0239                     i1l1672:	
  4136                           
  4137                           ;main.c: 105: comp = comp>>1;
  4138  0239  0D78               	rlf	i1SendLED@comp+1,w
  4139  023A  0C78               	rrf	i1SendLED@comp+1,w
  4140  023B  00F8               	movwf	i1SendLED@comp+1
  4141  023C  0C77               	rrf	i1SendLED@comp,w
  4142  023D  00F7               	movwf	i1SendLED@comp
  4143  023E  3001               	movlw	1
  4144  023F  07F5               	addwf	i1SendLED@loop8,f
  4145  0240  3000               	movlw	0
  4146  0241  3DF6               	addwfc	i1SendLED@loop8+1,f
  4147  0242  0876               	movf	i1SendLED@loop8+1,w
  4148  0243  3A80               	xorlw	128
  4149  0244  00F2               	movwf	??i1_SendLED
  4150  0245  3080               	movlw	128
  4151  0246  0272               	subwf	??i1_SendLED,w
  4152  0247  3008               	movlw	8
  4153  0248  1903               	btfsc	3,2
  4154  0249  0275               	subwf	i1SendLED@loop8,w
  4155  024A  1C03               	skipc
  4156  024B  2A2E               	goto	i1l1666
  4157  024C                     i1l1678:	
  4158                           
  4159                           ;main.c: 106: }
  4160                           ;main.c: 107: comp=128;
  4161  024C  3080               	movlw	128
  4162  024D  00F7               	movwf	i1SendLED@comp
  4163  024E  3000               	movlw	0
  4164  024F  00F8               	movwf	i1SendLED@comp+1
  4165                           
  4166                           ;main.c: 108: for(loop8=0;loop8<8;loop8++){
  4167  0250  01F5               	clrf	i1SendLED@loop8
  4168  0251  01F6               	clrf	i1SendLED@loop8+1
  4169  0252  0876               	movf	i1SendLED@loop8+1,w
  4170  0253  3A80               	xorlw	128
  4171  0254  00F2               	movwf	??i1_SendLED
  4172  0255  3080               	movlw	128
  4173  0256  0272               	subwf	??i1_SendLED,w
  4174  0257  3008               	movlw	8
  4175  0258  1903               	btfsc	3,2
  4176  0259  0275               	subwf	i1SendLED@loop8,w
  4177  025A  1803               	btfsc	3,0
  4178  025B  2A7A               	goto	i1l1698
  4179  025C                     i1l1686:	
  4180                           
  4181                           ;main.c: 109: if(comp&R[loopNum]){Data1();}else{Data0();}
  4182  025C  0873               	movf	i1SendLED@loopNum,w
  4183  025D  3E59               	addlw	_R& (0+255)
  4184  025E  0086               	movwf	6
  4185  025F  0187               	clrf	7
  4186  0260  0801               	movf	1,w
  4187  0261  0577               	andwf	i1SendLED@comp,w
  4188  0262  1903               	btfsc	3,2
  4189  0263  2A66               	goto	i1l1690
  4190  0264  26E5               	fcall	i1_Data1
  4191  0265  2A67               	goto	i1l1692
  4192  0266                     i1l1690:	
  4193  0266  26FB               	fcall	i1_Data0
  4194  0267                     i1l1692:	
  4195                           
  4196                           ;main.c: 110: comp = comp>>1;
  4197  0267  0D78               	rlf	i1SendLED@comp+1,w
  4198  0268  0C78               	rrf	i1SendLED@comp+1,w
  4199  0269  00F8               	movwf	i1SendLED@comp+1
  4200  026A  0C77               	rrf	i1SendLED@comp,w
  4201  026B  00F7               	movwf	i1SendLED@comp
  4202  026C  3001               	movlw	1
  4203  026D  07F5               	addwf	i1SendLED@loop8,f
  4204  026E  3000               	movlw	0
  4205  026F  3DF6               	addwfc	i1SendLED@loop8+1,f
  4206  0270  0876               	movf	i1SendLED@loop8+1,w
  4207  0271  3A80               	xorlw	128
  4208  0272  00F2               	movwf	??i1_SendLED
  4209  0273  3080               	movlw	128
  4210  0274  0272               	subwf	??i1_SendLED,w
  4211  0275  3008               	movlw	8
  4212  0276  1903               	btfsc	3,2
  4213  0277  0275               	subwf	i1SendLED@loop8,w
  4214  0278  1C03               	skipc
  4215  0279  2A5C               	goto	i1l1686
  4216  027A                     i1l1698:	
  4217                           
  4218                           ;main.c: 111: }
  4219                           ;main.c: 112: comp=128;
  4220  027A  3080               	movlw	128
  4221  027B  00F7               	movwf	i1SendLED@comp
  4222  027C  3000               	movlw	0
  4223  027D  00F8               	movwf	i1SendLED@comp+1
  4224                           
  4225                           ;main.c: 113: for(loop8=0;loop8<8;loop8++){
  4226  027E  01F5               	clrf	i1SendLED@loop8
  4227  027F  01F6               	clrf	i1SendLED@loop8+1
  4228  0280  0876               	movf	i1SendLED@loop8+1,w
  4229  0281  3A80               	xorlw	128
  4230  0282  00F2               	movwf	??i1_SendLED
  4231  0283  3080               	movlw	128
  4232  0284  0272               	subwf	??i1_SendLED,w
  4233  0285  3008               	movlw	8
  4234  0286  1903               	btfsc	3,2
  4235  0287  0275               	subwf	i1SendLED@loop8,w
  4236  0288  1803               	btfsc	3,0
  4237  0289  2AA8               	goto	i1l1718
  4238  028A                     i1l1706:	
  4239                           
  4240                           ;main.c: 114: if(comp&B[loopNum]){Data1();}else{Data0();}
  4241  028A  0873               	movf	i1SendLED@loopNum,w
  4242  028B  3E53               	addlw	_B& (0+255)
  4243  028C  0086               	movwf	6
  4244  028D  0187               	clrf	7
  4245  028E  0801               	movf	1,w
  4246  028F  0577               	andwf	i1SendLED@comp,w
  4247  0290  1903               	btfsc	3,2
  4248  0291  2A94               	goto	i1l1710
  4249  0292  26E5               	fcall	i1_Data1
  4250  0293  2A95               	goto	i1l1712
  4251  0294                     i1l1710:	
  4252  0294  26FB               	fcall	i1_Data0
  4253  0295                     i1l1712:	
  4254                           
  4255                           ;main.c: 115: comp = comp>>1;
  4256  0295  0D78               	rlf	i1SendLED@comp+1,w
  4257  0296  0C78               	rrf	i1SendLED@comp+1,w
  4258  0297  00F8               	movwf	i1SendLED@comp+1
  4259  0298  0C77               	rrf	i1SendLED@comp,w
  4260  0299  00F7               	movwf	i1SendLED@comp
  4261  029A  3001               	movlw	1
  4262  029B  07F5               	addwf	i1SendLED@loop8,f
  4263  029C  3000               	movlw	0
  4264  029D  3DF6               	addwfc	i1SendLED@loop8+1,f
  4265  029E  0876               	movf	i1SendLED@loop8+1,w
  4266  029F  3A80               	xorlw	128
  4267  02A0  00F2               	movwf	??i1_SendLED
  4268  02A1  3080               	movlw	128
  4269  02A2  0272               	subwf	??i1_SendLED,w
  4270  02A3  3008               	movlw	8
  4271  02A4  1903               	btfsc	3,2
  4272  02A5  0275               	subwf	i1SendLED@loop8,w
  4273  02A6  1C03               	skipc
  4274  02A7  2A8A               	goto	i1l1706
  4275  02A8                     i1l1718:	
  4276  02A8  3001               	movlw	1
  4277  02A9  07F3               	addwf	i1SendLED@loopNum,f
  4278  02AA  3000               	movlw	0
  4279  02AB  3DF4               	addwfc	i1SendLED@loopNum+1,f
  4280  02AC  2A12               	goto	i1l145
  4281  02AD                     i1l1720:	
  4282                           
  4283                           ;main.c: 116: }
  4284                           ;main.c: 118: }
  4285                           ;main.c: 119: _delay((unsigned long)((10)*(62500/4000.0)));
  4286  02AD  3033               	movlw	51
  4287  02AE  00F2               	movwf	??i1_SendLED
  4288  02AF                     u286_27:	
  4289  02AF  0BF2               	decfsz	??i1_SendLED,f
  4290  02B0  2AAF               	goto	u286_27
  4291  02B1  3200               	nop2	;nop
  4292  02B2  0008               	return
  4293  02B3                     __end_ofi1_SendLED:	
  4294                           
  4295                           	psect	text28
  4296  06E5                     __ptext28:	
  4297 ;; *************** function i1_Data1 *****************
  4298 ;; Defined at:
  4299 ;;		line 82 in file "main.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;		None               void
  4306 ;; Registers used:
  4307 ;;		None
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1
  4313 ;;      Params:         0       0       0
  4314 ;;      Locals:         0       0       0
  4315 ;;      Temps:          0       0       0
  4316 ;;      Totals:         0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		i1_SendLED
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           
  4327                           ;psect for function i1_Data1
  4328  06E5                     i1_Data1:	
  4329                           
  4330                           ;main.c: 83: LATAbits.LATA1=1;
  4331                           
  4332                           ;incstack = 0
  4333                           ; Regs used in i1_Data1: []
  4334  06E5  0022               	movlb	2	; select bank2
  4335  06E6  148C               	bsf	12,1	;volatile
  4336  06E7  0000               	nop	;# 
  4337  06E8  0000               	nop	;# 
  4338  06E9  0000               	nop	;# 
  4339  06EA  0000               	nop	;# 
  4340  06EB  0000               	nop	;# 
  4341                           
  4342                           ;main.c: 89: LATAbits.LATA1=0;
  4343  06EC  0022               	movlb	2	; select bank2
  4344  06ED  108C               	bcf	12,1	;volatile
  4345  06EE  0008               	return
  4346  06EF                     __end_ofi1_Data1:	
  4347                           
  4348                           	psect	text29
  4349  06FB                     __ptext29:	
  4350 ;; *************** function i1_Data0 *****************
  4351 ;; Defined at:
  4352 ;;		line 92 in file "main.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;		None               void
  4359 ;; Registers used:
  4360 ;;		None
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1
  4366 ;;      Params:         0       0       0
  4367 ;;      Locals:         0       0       0
  4368 ;;      Temps:          0       0       0
  4369 ;;      Totals:         0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		i1_SendLED
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function i1_Data0
  4381  06FB                     i1_Data0:	
  4382                           
  4383                           ;main.c: 93: LATAbits.LATA1=1;
  4384                           
  4385                           ;incstack = 0
  4386                           ; Regs used in i1_Data0: []
  4387  06FB  0022               	movlb	2	; select bank2
  4388  06FC  148C               	bsf	12,1	;volatile
  4389  06FD  0000               	nop	;# 
  4390                           
  4391                           ;main.c: 95: LATAbits.LATA1=0;
  4392  06FE  0022               	movlb	2	; select bank2
  4393  06FF  108C               	bcf	12,1	;volatile
  4394  0700  0008               	return
  4395  0701                     __end_ofi1_Data0:	
  4396                           
  4397                           	psect	text30
  4398  0688                     __ptext30:	
  4399 ;; *************** function i1_BatteryCheckVoltage *****************
  4400 ;; Defined at:
  4401 ;;		line 442 in file "main.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  BatteryCheck    2    0        unsigned int 
  4406 ;;  BatteryCheck    2    0        unsigned int 
  4407 ;;  BatteryCheck    2    0        unsigned int 
  4408 ;;  BatteryCheck    2    0        unsigned int 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  2    0[COMMON] unsigned int 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMMON   BANK0   BANK1
  4418 ;;      Params:         2       0       0
  4419 ;;      Locals:         0       0       0
  4420 ;;      Temps:          0       0       0
  4421 ;;      Totals:         2       0       0
  4422 ;;Total ram usage:        2 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		i1_StatusDisplayADC
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function i1_BatteryCheckVoltage
  4433  0688                     i1_BatteryCheckVoltage:	
  4434                           
  4435                           ;main.c: 444: unsigned int ad1, ad2, thresh, i;
  4436                           ;main.c: 447: ADCON0 = 0b00010101;
  4437                           
  4438                           ;incstack = 0
  4439                           ; Regs used in i1_BatteryCheckVoltage: [wreg+status,2+status,0]
  4440  0688  3015               	movlw	21
  4441  0689  0021               	movlb	1	; select bank1
  4442  068A  009D               	movwf	29	;volatile
  4443                           
  4444                           ;main.c: 450: ADCON0 = 0b00010111;
  4445  068B  3017               	movlw	23
  4446  068C  009D               	movwf	29	;volatile
  4447  068D                     i1l243:	
  4448                           ;main.c: 453: while(ADCON0 & 0x02);
  4449                           
  4450  068D  189D               	btfsc	29,1	;volatile
  4451  068E  2E8D               	goto	i1l243
  4452                           
  4453                           ;main.c: 455: AdcRes = ((unsigned int)ADRESH << 8) | (unsigned int)ADRESL;
  4454  068F  081C               	movf	28,w	;volatile
  4455  0690  0020               	movlb	0	; select bank0
  4456  0691  01CA               	clrf	_AdcRes+1
  4457  0692  07CA               	addwf	_AdcRes+1,f
  4458  0693  0021               	movlb	1	; select bank1
  4459  0694  081B               	movf	27,w	;volatile
  4460  0695  0020               	movlb	0	; select bank0
  4461  0696  01C9               	clrf	_AdcRes
  4462  0697  07C9               	addwf	_AdcRes,f
  4463                           
  4464                           ;main.c: 457: return AdcRes;
  4465  0698  084A               	movf	_AdcRes+1,w
  4466  0699  01F1               	clrf	?i1_BatteryCheckVoltage+1
  4467  069A  07F1               	addwf	?i1_BatteryCheckVoltage+1,f
  4468  069B  0849               	movf	_AdcRes,w
  4469  069C  01F0               	clrf	?i1_BatteryCheckVoltage
  4470  069D  07F0               	addwf	?i1_BatteryCheckVoltage,f
  4471  069E  0008               	return
  4472  069F                     __end_ofi1_BatteryCheckVoltage:	
  4473                           
  4474                           	psect	text31
  4475  0602                     __ptext31:	
  4476 ;; *************** function i1_CheckStatus *****************
  4477 ;; Defined at:
  4478 ;;		line 136 in file "main.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;		None               void
  4485 ;; Registers used:
  4486 ;;		wreg
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1
  4492 ;;      Params:         0       0       0
  4493 ;;      Locals:         0       0       0
  4494 ;;      Temps:          1       0       0
  4495 ;;      Totals:         1       0       0
  4496 ;;Total ram usage:        1 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_isr
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           
  4506                           ;psect for function i1_CheckStatus
  4507  0602                     i1_CheckStatus:	
  4508                           
  4509                           ;main.c: 137: if(PORTCbits.RC0==1){
  4510                           
  4511                           ;incstack = 0
  4512                           ; Regs used in i1_CheckStatus: [wreg]
  4513  0602  0020               	movlb	0	; select bank0
  4514  0603  1C0E               	btfss	14,0	;volatile
  4515  0604  2E19               	goto	i1l2004
  4516                           
  4517                           ;main.c: 138: if(PORTAbits.RA2==1){
  4518  0605  1D0C               	btfss	12,2	;volatile
  4519  0606  2E10               	goto	i1l2000
  4520                           
  4521                           ;main.c: 139: if(ChargeStatus!=3){
  4522  0607  0855               	movf	_ChargeStatus,w
  4523  0608  3A03               	xorlw	3
  4524  0609  1903               	skipnz
  4525  060A  0008               	return
  4526                           
  4527                           ;main.c: 140: ChargeStatus=3;
  4528  060B  3003               	movlw	3
  4529  060C  00F0               	movwf	??i1_CheckStatus
  4530  060D  0870               	movf	??i1_CheckStatus,w
  4531  060E  00D5               	movwf	_ChargeStatus
  4532                           
  4533                           ;main.c: 141: }
  4534                           ;main.c: 142: }else{
  4535  060F  0008               	return
  4536  0610                     i1l2000:	
  4537                           
  4538                           ;main.c: 143: if(ChargeStatus!=2){
  4539  0610  0855               	movf	_ChargeStatus,w
  4540  0611  3A02               	xorlw	2
  4541  0612  1903               	skipnz
  4542  0613  0008               	return
  4543                           
  4544                           ;main.c: 144: ChargeStatus=2;
  4545  0614  3002               	movlw	2
  4546  0615  00F0               	movwf	??i1_CheckStatus
  4547  0616  0870               	movf	??i1_CheckStatus,w
  4548  0617  00D5               	movwf	_ChargeStatus
  4549                           
  4550                           ;main.c: 145: }
  4551                           ;main.c: 146: }
  4552                           ;main.c: 147: }else{
  4553  0618  0008               	return
  4554  0619                     i1l2004:	
  4555                           
  4556                           ;main.c: 148: if(ChargeStatus!=1){
  4557  0619  0855               	movf	_ChargeStatus,w
  4558  061A  3A01               	xorlw	1
  4559  061B  1903               	skipnz
  4560  061C  0008               	return
  4561                           
  4562                           ;main.c: 149: ChargeStatus=1;
  4563  061D  01D5               	clrf	_ChargeStatus
  4564  061E  0AD5               	incf	_ChargeStatus,f
  4565  061F  0008               	return
  4566  0620                     __end_ofi1_CheckStatus:	
  4567  007E                     btemp	set	126	;btemp
  4568  007E                     pic14e$flags	set	126
  4569  007E                     wtemp	set	126
  4570  007E                     wtemp0	set	126
  4571  0080                     wtemp1	set	128
  4572  0082                     wtemp2	set	130
  4573  0084                     wtemp3	set	132
  4574  0086                     wtemp4	set	134
  4575  0088                     wtemp5	set	136
  4576  007F                     wtemp6	set	127
  4577  007E                     ttemp	set	126
  4578  007E                     ttemp0	set	126
  4579  0081                     ttemp1	set	129
  4580  0084                     ttemp2	set	132
  4581  0087                     ttemp3	set	135
  4582  007F                     ttemp4	set	127
  4583  007E                     ltemp	set	126
  4584  007E                     ltemp0	set	126
  4585  0082                     ltemp1	set	130
  4586  0086                     ltemp2	set	134
  4587  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      63
    BANK1            32     10      10

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_SerialLED
    i1_StatusDisplayADC->i1_SerialLED
    i1___lwtoft->i1___ftpack
    i1___ftge->i1___lwtoft
    i1_SerialLED->i1_SendLED

Critical Paths under _main in BANK0

    _main->_Inject
    _StatusDisplay1->_SerialLED
    _StartStatus->_StatusDisplayADC
    _StatusDisplayADC->___ftge
    _Inject->___ftge
    ___lwtoft->___ftpack
    ___ftge->___lwtoft
    _StopBeep->_SerialLED
    _StartBeepLow->_SerialLED
    _StartBeepHigh->_SerialLED
    _SerialLED->_SendLED

Critical Paths under _isr in BANK0

    _isr->i1_StatusDisplayADC
    i1_StatusDisplayADC->i1___ftge

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    13      4   33365
                                             35 BANK0      6     2      4
                                              0 BANK1     10    10      0
                       _CheckVoltage
                             _Inject
                          _SerialLED
                      _StartBeepHigh
                       _StartBeepLow
                        _StartStatus
                     _StatusDisplay1
                           _StopBeep
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _StatusDisplay1                                       2     2      0    2597
                                             26 BANK0      2     2      0
                        _CheckStatus
                          _SerialLED
 ---------------------------------------------------------------------------------
 (1) _StartStatus                                          0     0      0    7865
                        _CheckStatus
                          _SerialLED
                   _StatusDisplayADC
 ---------------------------------------------------------------------------------
 (2) _StatusDisplayADC                                     1     1      0    5268
                                             33 BANK0      1     1      0
                _BatteryCheckVoltage
                          _SerialLED
                             ___ftge
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _CheckStatus                                          1     1      0       0
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Inject                                               2     2      0   10917
                                             33 BANK0      2     2      0
                          _B_LED_OFF
                           _B_LED_ON
                _BatteryCheckVoltage
                      _StartBeepHigh
                       _StartBeepLow
                           _StopBeep
                             ___ftge
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2083
                                             20 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1857
                                             12 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     588
                                             24 BANK0      9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _StopBeep                                             0     0      0    2597
                          _SerialLED
 ---------------------------------------------------------------------------------
 (1) _StartBeepLow                                         0     0      0    3052
                          _SerialLED
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2     455
                                             12 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _StartBeepHigh                                        1     1      0    2597
                                             26 BANK0      1     1      0
                          _SerialLED
 ---------------------------------------------------------------------------------
 (2) _SerialLED                                            5     3      2    2597
                                             21 BANK0      5     3      2
                            _SendLED
 ---------------------------------------------------------------------------------
 (3) _SendLED                                              9     7      2     634
                                             12 BANK0      9     7      2
                              _Data0
                              _Data1
 ---------------------------------------------------------------------------------
 (4) _Data1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Data0                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BatteryCheckVoltage                                 10     8      2       0
                                             12 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _B_LED_ON                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _B_LED_OFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckVoltage                                         8     8      0     133
                                             12 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0    2185
                                             10 BANK0      2     2      0
                      i1_CheckStatus
                        i1_SerialLED
                 i1_StatusDisplayADC
 ---------------------------------------------------------------------------------
 (7) i1_StatusDisplayADC                                   1     1      0    1393
                                              9 BANK0      1     1      0
              i1_BatteryCheckVoltage
                        i1_SerialLED
                           i1___ftge
                         i1___lwtoft
 ---------------------------------------------------------------------------------
 (8) i1___lwtoft                                           4     1      3     361
                                              8 COMMON     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (9) i1___ftpack                                           8     3      5     287
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (8) i1___ftge                                             9     3      6     240
                                              0 BANK0      9     3      6
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (8) i1_SerialLED                                          5     3      2     792
                                              9 COMMON     5     3      2
                          i1_SendLED
 ---------------------------------------------------------------------------------
 (9) i1_SendLED                                            9     7      2     414
                                              0 COMMON     9     7      2
                            i1_Data0
                            i1_Data1
 ---------------------------------------------------------------------------------
 (10) i1_Data1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_Data0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_BatteryCheckVoltage                               10     8      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) i1_CheckStatus                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckVoltage
   _Inject
     _B_LED_OFF
     _B_LED_ON
     _BatteryCheckVoltage
     _StartBeepHigh
       _SerialLED
         _SendLED
           _Data0
           _Data1
     _StartBeepLow
       _SerialLED
         _SendLED
           _Data0
           _Data1
       _delay_ms
     _StopBeep
       _SerialLED
         _SendLED
           _Data0
           _Data1
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _SerialLED
     _SendLED
       _Data0
       _Data1
   _StartBeepHigh
     _SerialLED
       _SendLED
         _Data0
         _Data1
   _StartBeepLow
     _SerialLED
       _SendLED
         _Data0
         _Data1
     _delay_ms
   _StartStatus
     _CheckStatus
     _SerialLED
       _SendLED
         _Data0
         _Data1
     _StatusDisplayADC
       _BatteryCheckVoltage
       _SerialLED
         _SendLED
           _Data0
           _Data1
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
   _StatusDisplay1
     _CheckStatus
     _SerialLED
       _SendLED
         _Data0
         _Data1
   _StopBeep
     _SerialLED
       _SendLED
         _Data0
         _Data1
   _delay_ms

 _isr (ROOT)
   i1_CheckStatus
   i1_SerialLED
     i1_SendLED
       i1_Data0
       i1_Data1
   i1_StatusDisplayADC
     i1_BatteryCheckVoltage
     i1_SerialLED
       i1_SendLED
         i1_Data0
         i1_Data1
     i1___ftge
       i1___lwtoft (ARG)
         i1___ftpack
     i1___lwtoft
       i1___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      57       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     29      3F       6       78.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      A       A       8       31.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      57       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Feb 28 23:25:58 2015

                    __CFG_CP$ON 0000                               _B 0053                               _G 0056  
                             _R 0059                      i1___ftpack 0314                              _i1 004F  
                    i1___lwtoft 06C9                     __CFG_LVP$ON 0000                             l213 0116  
                           l145 0164                             l243 0676                             l239 03C6  
                           l512 02E6                             l249 055F                             l518 02FD  
                           _PR2 001B                    __CFG_CPD$OFF 0000                    i1___ftge@ff1 0020  
                  i1___ftge@ff2 0023                             _cnt 005B                             _isr 0004  
                    _BeepStatus 0054                    __CFG_BORV$LO 0000                             wreg 0009  
                  __CFG_IESO$ON 0000                     main@nSwStat 00A9                            l2302 02EB  
                          l2232 018C                            l2240 01A1                            l2304 02F3  
                          l2400 0411                            l2234 018D                            l2252 01BD  
                          l2260 01D2                            l2228 0181                            l2500 0652  
                          l2254 01BE                            l2272 01EE                            l2280 0203  
                          l2248 01B2                            l2352 04BE                            l2522 057B  
                          l2282 0209                            l2274 01EF                            l2610 00A6  
                          l2268 01E3                            l2356 04D4                            l2292 02C3  
                          l2700 0154                            l2620 00C5                            l2294 02CD  
                          l2550 03AC                            l2630 00D2                            l2528 0589  
                          l2296 02D2                            l2288 02BC                            l2384 05F2  
                          l2480 0494                            l2704 0158                            l2616 00BB  
                          l2706 0159                            l2388 05FB                            l2396 03F0  
                          l2476 0487                            l2652 00F2                            l2636 00D6  
                          l2670 011E                            l2496 0648                            l2692 013B  
                          l2668 011A                            l2678 0124                            ?_isr 0070  
                          _LATA 010C                            u2215 02EE                            _LATC 010E  
                          u2145 016E                            u2245 0304                            u2175 02C8  
                          u2505 0585                            u2265 0663                            u2195 02E1  
                          u2707 010F                            u2717 015C                            u2495 0577  
                          u2807 0531                            u2727 0477                            u2817 0550  
                          u2737 039A                            u2827 020C                            u2747 03A5  
                          u2757 03B0                            u2677 00EB                            u2767 03B8  
                          u2687 00FC                            u2777 03C1                            u2697 0105  
                          u2787 0668                            u2797 0524                 ?_StatusDisplay1 0070  
               __end_ofi1_Data0 0701                 __end_ofi1_Data1 06EF                            _fLED 005E  
                  main@bSwFixed 00A3                    __CFG_WRT$OFF 0000                   __CFG_FCMEN$ON 0000  
               ??_StartBeepHigh 003A                            _main 0057                    ___ftpack@arg 002C  
                  ___ftpack@exp 002F                    i1___lwtoft@c 0078                            fsr0h 0005  
                          fsr1h 0007                            fsr0l 0004                            indf0 0000  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
                          ltemp 007E                            start 004D                            ttemp 007E  
                          wtemp 007E              __size_of_B_LED_OFF 0003                 __end_of_SendLED 0210  
                         ??_isr 002A                   __CFG_PLLEN$ON 0000                __end_of_B_LED_ON 0704  
                   _CheckStatus 05E4                           ?_main 0043                   __CFG_WDTE$OFF 0000  
                         _T1CON 0018                           i1l145 0212                           i1l243 068D  
                         i1l512 0346                           i1l257 0047                           i1l267 0048  
                         i1l518 035D                           _TMR1H 0017                           _TMR1L 0016  
                         _TRISA 008C                           _TRISC 008E                           _Data0 06F5  
                         _Data1 06DB                      SendLED@num 002C                           _MyCNT 004B  
                         _fDsky 005D                   ___ftpack@sign 0030              __size_ofi1_SendLED 00A3  
              __end_ofi1___ftge 051F                  __CFG_BOREN$OFF 0000                           ltemp0 007E  
                         ltemp1 0082                           ltemp2 0086                           ltemp3 0080  
                         ttemp0 007E                           ttemp1 0081                           ttemp2 0084  
                         ttemp3 0087                           ttemp4 007F           __size_of_CheckVoltage 0035  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                  i1___ftpack@arg 0070  
                i1___ftpack@exp 0073                  __CFG_MCLRE$OFF 0000                 __initialization 004E  
                  __end_of_main 0161                     ?i1___ftpack 0070              CheckVoltage@thresh 002E  
                   ?i1___lwtoft 0078           __end_ofi1_CheckStatus 0620                          ??_main 0047  
                        ?_Data0 0070                          ?_Data1 0070               __end_of_B_LED_OFF 0707  
                    SerialLED@b 0036                      SerialLED@g 0035                      SerialLED@r 0039  
                  _CheckVoltage 0556                       ??i1_Data0 0070                       ??i1_Data1 0070  
              __end_of_StopBeep 06B5                          _ADCON0 009D                          _ADCON1 009E  
                        _ADRESH 009C                          _ADRESL 009B                          _CCPR1L 0291  
                        _ANSELA 018C                          _ANSELC 018E                __end_of___ftpack 0314  
                        i1l2000 0610                          i1l2004 0619                          i1l2012 043F  
                        i1l2016 0460                          i1l2200 003B                          i1l2208 0044  
                        i1l2180 001B                          i1l1710 0294                          i1l1720 02AD  
                        i1l1712 0295                          i1l2184 0027                          i1l1706 028A  
                        i1l1730 0323                          i1l1740 034B                          i1l1732 032D  
                        i1l1718 02A8                          i1l1670 0238                          i1l1742 0353  
                        i1l1734 0332                          i1l1726 031C                          i1l1672 0239  
                        i1l1690 0266                          i1l1666 022E                          i1l1692 0267  
                        i1l1686 025C                          i1l1678 024C                          i1l1698 027A  
                        i1l1874 04FA     __end_of_BatteryCheckVoltage 0688                          i1l1878 0510  
                        u140_25 021C                          u150_25 0364                          u143_25 0328  
                        u145_25 0341                          u147_25 034E                __end_of___lwtoft 06C9  
                        u283_27 0590                          u284_27 059C                          u285_27 05BA  
                        u286_27 02AF                          _AdcRes 0049                     SendLED@comp 0033  
             ?_StatusDisplayADC 0070                    _ChargeStatus 0055                __end_of_delay_ms 0671  
                __CFG_PWRTE$OFF 0000                       ??_SendLED 002E                          _Inject 0374  
                        _MyBuff 0058              ??_StatusDisplayADC 0041                  main@bSwHolding 00A6  
                        _Status 005A                          ___ftge 04A7                  __CFG_STVREN$ON 0000  
             __end_ofi1_SendLED 02B3              __size_of_SerialLED 0037           i1_BatteryCheckVoltage 0688  
                  ?i1_SerialLED 0079             __size_ofi1___ftpack 0060         __end_of__initialization 0054  
   __size_ofi1_StatusDisplayADC 004E             __size_ofi1___lwtoft 0012                       ?_B_LED_ON 0070  
                    ___ftge@ff1 0038                      ___ftge@ff2 003B                 i1___ftpack@sign 0074  
                 __end_of_Data0 06FB                   __end_of_Data1 06E5                  __pcstackCOMMON 0070  
                 ??_StartStatus 0042                       ?i1___ftge 0020                      ___lwtoft@c 0034  
                       ??_Data0 002C                         ??_Data1 002C                ??_StatusDisplay1 003A  
                    __pbssBANK0 0049               __end_of_SerialLED 0556                      ??_B_LED_ON 002C  
                       ?_Inject 0070                      __pmaintext 0057                         ?___ftge 0038  
                    __pintentry 0004                       ?_StopBeep 0070                         _CCP1CON 0293  
                  _cntChargeNon 004D                    ?_CheckStatus 0070                       ?___ftpack 002C  
                    ??i1___ftge 0026                       ?___lwtoft 0034          ?i1_BatteryCheckVoltage 0070  
           __end_of_StartStatus 0659                       ?_delay_ms 002C                         i1_Data0 06FB  
                       i1_Data1 06E5                    SendLED@loop8 0031           __end_of_StartBeepHigh 063D  
                       _SendLED 0161                 __size_of_Inject 0054                 __size_of___ftge 003C  
                  ??i1___ftpack 0075                      ??_StopBeep 003A                    ??i1___lwtoft 007B  
                    ??___ftpack 0031                         __ptext0 0000                         __ptext1 0465  
                       __ptext2 063D                         __ptext3 03C8                         __ptext4 05E4  
                       __ptext5 0374                         __ptext6 06B5                         __ptext7 02B3  
                       __ptext8 04A7                         __ptext9 069F                      ??___lwtoft 0037  
                     _T1CONbits 0018                       _T2CONbits 001C                    __size_of_isr 0049  
                     _IOCAFbits 0393                      ??_delay_ms 002E                       _IOCANbits 0392  
                       clrloop0 06F0                       _B_LED_OFF 0704            end_of_initialization 0054  
            __end_ofi1___ftpack 0374                  i1SendLED@loop8 0075            __size_ofi1_SerialLED 0035  
            __end_ofi1___lwtoft 06DB                   ?_StartBeepLow 0070                     _StartStatus 063D  
     __size_of_StatusDisplayADC 004F                       _PORTAbits 000C                       _PORTCbits 000E  
                     i1_SendLED 0210                __CFG_FOSC$INTOSC 0000                      ?_B_LED_OFF 0070  
                SendLED@loopNum 002F                      main@checkv 00A4                     _CCP1CONbits 0293  
        __size_ofi1_CheckStatus 001E                  ??_StartBeepLow 003A               __size_of_B_LED_ON 0003  
  __size_of_BatteryCheckVoltage 0017                  __end_of_Inject 03C8                  __end_of___ftge 04E3  
              _LastChargeStatus 0057                      ?i1_SendLED 0070            __size_of_CheckStatus 001E  
             __size_ofi1___ftge 003C             start_initialization 004E             main@nSwHoldingCount 00A0  
                   __end_of_isr 004D      __end_ofi1_StatusDisplayADC 0465            main@nBeepLengthCount 00A7  
                     _SerialLED 051F                        ??_Inject 0041                        ??___ftge 003E  
       ??i1_BatteryCheckVoltage 0072                   i1_CheckStatus 0602               __size_of_StopBeep 0016  
             __size_of___ftpack 0061                       ___latbits 0000               __size_of___lwtoft 0014  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0                        ?i1_Data0 0070  
                      ?i1_Data1 0070                     ??_B_LED_OFF 002C               __size_of_delay_ms 0018  
                      ?_SendLED 002C                      ?_SerialLED 0035                       _cntCharge 005C  
          main@nBeepRepeatCount 00A2                  ?i1_CheckStatus 0070                _StatusDisplayADC 03C8  
                   ??i1_SendLED 0072                  __size_of_Data0 0006                  __size_of_Data1 000A  
          __end_of_StartBeepLow 05E4                   ?_CheckVoltage 0070                        _LATAbits 010C  
                      _LATCbits 010E                        _B_LED_ON 0701         __size_of_StatusDisplay1 0042  
                     clear_ram0 06EF                   i1SendLED@comp 0077                        _PIE1bits 0091  
                      _PIR1bits 0011                    ?_StartStatus 0070                        i1___ftge 04E3  
                     main@bBeep 00A8                       main@bStay 00A5                  ??_CheckVoltage 002C  
        __size_of_StartBeepHigh 001D             _BatteryCheckVoltage 0671                 CheckVoltage@ad2 002C  
              __size_ofi1_Data0 0006                __size_ofi1_Data1 000A                    delay_ms@time 002C  
                 ??i1_SerialLED 007B                     ??_SerialLED 0037            ?_BatteryCheckVoltage 002C  
              __size_of_SendLED 00AF                 ??i1_CheckStatus 0070                i1SendLED@loopNum 0073  
                      _StopBeep 069F                        ___ftpack 02B3                        ___lwtoft 06B5  
                      _delay_ms 0659                        _vBattery 0051                        __ptext10 05C0  
                      __ptext11 0659                        __ptext20 0556                        __ptext12 0620  
                      __ptext13 051F                        __ptext30 0688                        __ptext22 0417  
                      __ptext14 0161                        __ptext31 0602                        __ptext23 06C9  
                      __ptext15 06DB                        __ptext24 0314                        __ptext16 06F5  
                      __ptext25 04E3                        __ptext17 0671                        __ptext26 058B  
                      __ptext18 0701                        __ptext27 0210                        __ptext19 0704  
                      __ptext28 06E5                        __ptext29 06FB                   __size_of_main 010A  
         ??_BatteryCheckVoltage 002E             __end_ofi1_SerialLED 05C0                   _StartBeepHigh 0620  
                  i1SendLED@num 0070              i1_StatusDisplayADC 0417                        main@argc 0043  
                      main@argv 0045                   ??_CheckStatus 002C           __size_of_StartBeepLow 0024  
           ?i1_StatusDisplayADC 0070  __size_ofi1_BatteryCheckVoltage 0017   __end_ofi1_BatteryCheckVoltage 069F  
                    _INTCONbits 000B                     pic14e$flags 007E                        intlevel1 0000  
          ??i1_StatusDisplayADC 0029        __end_of_StatusDisplayADC 0417                  _StatusDisplay1 0465  
             __CFG_CLKOUTEN$OFF 0000                  ?_StartBeepHigh 0070                      _OSCCONbits 0099  
                  i1SerialLED@b 007A                    i1SerialLED@g 0079                    _StartBeepLow 05C0  
                  i1SerialLED@r 007D            __end_of_CheckVoltage 058B            __size_of_StartStatus 001C  
            main@nSwStableCount 00A1             __end_of_CheckStatus 0602                     i1_SerialLED 058B  
        __end_of_StatusDisplay1 04A7  
