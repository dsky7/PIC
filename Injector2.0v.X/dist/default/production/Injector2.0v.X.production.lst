

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Aug 08 02:49:09 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000E                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0015                     	;# 
    61  0016                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001B                     	;# 
    68  001C                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  008C                     	;# 
    72  008E                     	;# 
    73  0091                     	;# 
    74  0092                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0097                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  010C                     	;# 
    87  010E                     	;# 
    88  0111                     	;# 
    89  0112                     	;# 
    90  0113                     	;# 
    91  0114                     	;# 
    92  0115                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  0118                     	;# 
    96  0119                     	;# 
    97  011A                     	;# 
    98  011B                     	;# 
    99  011D                     	;# 
   100  011D                     	;# 
   101  018C                     	;# 
   102  018E                     	;# 
   103  0191                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0194                     	;# 
   110  0195                     	;# 
   111  0196                     	;# 
   112  0199                     	;# 
   113  019A                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019C                     	;# 
   119  019C                     	;# 
   120  019D                     	;# 
   121  019E                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  020E                     	;# 
   125  0211                     	;# 
   126  0211                     	;# 
   127  0212                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0213                     	;# 
   131  0214                     	;# 
   132  0214                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  0291                     	;# 
   141  0291                     	;# 
   142  0292                     	;# 
   143  0293                     	;# 
   144  0294                     	;# 
   145  0295                     	;# 
   146  0295                     	;# 
   147  0296                     	;# 
   148  0391                     	;# 
   149  0392                     	;# 
   150  0393                     	;# 
   151  039A                     	;# 
   152  039C                     	;# 
   153  039D                     	;# 
   154  039E                     	;# 
   155  039F                     	;# 
   156  0FE4                     	;# 
   157  0FE5                     	;# 
   158  0FE6                     	;# 
   159  0FE7                     	;# 
   160  0FE8                     	;# 
   161  0FE9                     	;# 
   162  0FEA                     	;# 
   163  0FEB                     	;# 
   164  0FED                     	;# 
   165  0FEE                     	;# 
   166  0FEF                     	;# 
   167  000B                     _INTCONbits	set	11
   168  0011                     _PIR1bits	set	17
   169  000C                     _PORTAbits	set	12
   170  000E                     _PORTCbits	set	14
   171  001B                     _PR2	set	27
   172  0018                     _T1CON	set	24
   173  0018                     _T1CONbits	set	24
   174  001C                     _T2CONbits	set	28
   175  0017                     _TMR1H	set	23
   176  0016                     _TMR1L	set	22
   177  009D                     _ADCON0	set	157
   178  009E                     _ADCON1	set	158
   179  009C                     _ADRESH	set	156
   180  009B                     _ADRESL	set	155
   181  0099                     _OSCCONbits	set	153
   182  0091                     _PIE1bits	set	145
   183  008C                     _TRISA	set	140
   184  008E                     _TRISC	set	142
   185  010C                     _LATA	set	268
   186  010C                     _LATAbits	set	268
   187  010E                     _LATC	set	270
   188  010E                     _LATCbits	set	270
   189  018C                     _ANSELA	set	396
   190  018E                     _ANSELC	set	398
   191  0293                     _CCP1CON	set	659
   192  0293                     _CCP1CONbits	set	659
   193  0291                     _CCPR1L	set	657
   194  0393                     _IOCAFbits	set	915
   195  0392                     _IOCANbits	set	914
   196                           
   197                           	psect	text0
   198  0000                     __ptext0:	
   199                           ; #config settings
   200                           
   201                           
   202                           ;psect for function i1_CheckStatus
   203  0000                     
   204                           	psect	cinit
   205  004A                     start_initialization:	
   206  004A                     __initialization:	
   207                           
   208                           ; Clear objects allocated to BANK0
   209  004A  3049               	movlw	low __pbssBANK0
   210  004B  0084               	movwf	4
   211  004C  3000               	movlw	high __pbssBANK0
   212  004D  0085               	movwf	5
   213  004E  3016               	movlw	22
   214  004F  26DD               	fcall	clear_ram0
   215  0050                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218  0050                     __end_of__initialization:	
   219  0050  0020               	movlb	0
   220  0051  2852               	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	bssBANK0
   223  0049                     __pbssBANK0:	
   224  0049                     _AdcRes:	
   225  0049                     	ds	2
   226  004B                     _MyCNT:	
   227  004B                     	ds	2
   228  004D                     _cntChargeNon:	
   229  004D                     	ds	2
   230  004F                     _i1:	
   231  004F                     	ds	2
   232  0051                     _vBattery:	
   233  0051                     	ds	2
   234  0053                     _B:	
   235  0053                     	ds	1
   236  0054                     _BeepStatus:	
   237  0054                     	ds	1
   238  0055                     _ChargeStatus:	
   239  0055                     	ds	1
   240  0056                     _G:	
   241  0056                     	ds	1
   242  0057                     _LastChargeStatus:	
   243  0057                     	ds	1
   244  0058                     _MyBuff:	
   245  0058                     	ds	1
   246  0059                     _R:	
   247  0059                     	ds	1
   248  005A                     _Status:	
   249  005A                     	ds	1
   250  005B                     _cnt:	
   251  005B                     	ds	1
   252  005C                     _cntCharge:	
   253  005C                     	ds	1
   254  005D                     _fDsky:	
   255  005D                     	ds	1
   256  005E                     _fLED:	
   257  005E                     	ds	1
   258                           
   259                           	psect	clrtext
   260  06DD                     clear_ram0:	
   261                           ;	Called with FSR0 containing the base address, and
   262                           ;	WREG with the size to clear
   263                           
   264  06DD  0064               	clrwdt	;clear the watchdog before getting into this loop
   265  06DE                     clrloop0:	
   266  06DE  0180               	clrf	0	;clear RAM location pointed to by FSR
   267  06DF  3101               	addfsr 0,1
   268  06E0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   269  06E1  2EDE               	goto	clrloop0	;have we reached the end yet?
   270  06E2  3400               	retlw	0	;all done for this memory range, return
   271                           
   272                           	psect	cstackBANK1
   273  00A0                     __pcstackBANK1:	
   274  00A0                     main@nSwHoldingCount:	
   275                           
   276                           ; 1 bytes @ 0x0
   277  00A0                     	ds	1
   278  00A1                     main@nSwStableCount:	
   279                           
   280                           ; 1 bytes @ 0x1
   281  00A1                     	ds	1
   282  00A2                     main@nBeepRepeatCount:	
   283                           
   284                           ; 1 bytes @ 0x2
   285  00A2                     	ds	1
   286  00A3                     main@bSwFixed:	
   287                           
   288                           ; 1 bytes @ 0x3
   289  00A3                     	ds	1
   290  00A4                     main@checkv:	
   291                           
   292                           ; 1 bytes @ 0x4
   293  00A4                     	ds	1
   294  00A5                     main@bStay:	
   295                           
   296                           ; 1 bytes @ 0x5
   297  00A5                     	ds	1
   298  00A6                     main@bSwHolding:	
   299                           
   300                           ; 1 bytes @ 0x6
   301  00A6                     	ds	1
   302  00A7                     main@nBeepLengthCount:	
   303                           
   304                           ; 1 bytes @ 0x7
   305  00A7                     	ds	1
   306  00A8                     main@bBeep:	
   307                           
   308                           ; 1 bytes @ 0x8
   309  00A8                     	ds	1
   310  00A9                     main@nSwStat:	
   311                           
   312                           ; 1 bytes @ 0x9
   313  00A9                     	ds	1
   314                           
   315                           	psect	cstackCOMMON
   316  0070                     __pcstackCOMMON:	
   317  0070                     ?_StopBeep:	
   318  0070                     ?_StartBeepLow:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_Inject:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_StartBeepHigh:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_B_LED_ON:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0070                     ?_B_LED_OFF:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0070                     ?_Data1:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ?_Data0:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_CheckStatus:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0070                     ?_StatusDisplay1:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0070                     ?_StatusDisplayADC:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0070                     ?_StartStatus:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0070                     ?_isr:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0070                     ?i1_Data1:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0070                     ??i1_Data1:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0070                     ?i1_Data0:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0070                     ??i1_Data0:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0070                     ?i1_SendLED:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ?i1_CheckStatus:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ??i1_CheckStatus:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?i1_StatusDisplayADC:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?_CheckVoltage:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ?i1_BatteryCheckVoltage:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?i1___ftpack:	
   385                           ; 2 bytes @ 0x0
   386                           
   387  0070                     i1SendLED@num:	
   388                           ; 3 bytes @ 0x0
   389                           
   390  0070                     i1___ftpack@arg:	
   391                           ; 2 bytes @ 0x0
   392                           
   393                           
   394                           ; 3 bytes @ 0x0
   395  0070                     	ds	2
   396  0072                     ??i1_SendLED:	
   397  0072                     ??i1_BatteryCheckVoltage:	
   398                           ; 0 bytes @ 0x2
   399                           
   400                           
   401                           ; 0 bytes @ 0x2
   402  0072                     	ds	1
   403  0073                     i1___ftpack@exp:	
   404  0073                     i1SendLED@loopNum:	
   405                           ; 1 bytes @ 0x3
   406                           
   407                           
   408                           ; 2 bytes @ 0x3
   409  0073                     	ds	1
   410  0074                     i1___ftpack@sign:	
   411                           
   412                           ; 1 bytes @ 0x4
   413  0074                     	ds	1
   414  0075                     ??i1___ftpack:	
   415  0075                     i1SendLED@loop8:	
   416                           ; 0 bytes @ 0x5
   417                           
   418                           
   419                           ; 2 bytes @ 0x5
   420  0075                     	ds	2
   421  0077                     i1SendLED@comp:	
   422                           
   423                           ; 2 bytes @ 0x7
   424  0077                     	ds	1
   425  0078                     ?i1___lwtoft:	
   426  0078                     i1___lwtoft@c:	
   427                           ; 3 bytes @ 0x8
   428                           
   429                           
   430                           ; 2 bytes @ 0x8
   431  0078                     	ds	1
   432  0079                     ?i1_SerialLED:	
   433  0079                     i1SerialLED@g:	
   434                           ; 0 bytes @ 0x9
   435                           
   436                           
   437                           ; 1 bytes @ 0x9
   438  0079                     	ds	1
   439  007A                     i1SerialLED@b:	
   440                           
   441                           ; 1 bytes @ 0xA
   442  007A                     	ds	1
   443  007B                     ??i1_SerialLED:	
   444  007B                     ??i1___lwtoft:	
   445                           ; 0 bytes @ 0xB
   446                           
   447                           
   448                           ; 0 bytes @ 0xB
   449  007B                     	ds	2
   450  007D                     i1SerialLED@r:	
   451                           
   452                           ; 1 bytes @ 0xD
   453  007D                     	ds	1
   454                           
   455                           	psect	cstackBANK0
   456  0020                     __pcstackBANK0:	
   457  0020                     ?i1___ftge:	
   458  0020                     i1___ftge@ff1:	
   459                           ; 1 bit 
   460                           
   461                           
   462                           ; 3 bytes @ 0x0
   463  0020                     	ds	3
   464  0023                     i1___ftge@ff2:	
   465                           
   466                           ; 3 bytes @ 0x3
   467  0023                     	ds	3
   468  0026                     ??i1___ftge:	
   469                           
   470                           ; 0 bytes @ 0x6
   471  0026                     	ds	3
   472  0029                     ??i1_StatusDisplayADC:	
   473                           
   474                           ; 0 bytes @ 0x9
   475  0029                     	ds	1
   476  002A                     ??_isr:	
   477                           
   478                           ; 0 bytes @ 0xA
   479  002A                     	ds	2
   480  002C                     ??_CheckVoltage:	
   481  002C                     ??_B_LED_ON:	
   482                           ; 0 bytes @ 0xC
   483                           
   484  002C                     ??_B_LED_OFF:	
   485                           ; 0 bytes @ 0xC
   486                           
   487  002C                     ?_delay_ms:	
   488                           ; 0 bytes @ 0xC
   489                           
   490  002C                     ??_Data1:	
   491                           ; 0 bytes @ 0xC
   492                           
   493  002C                     ??_Data0:	
   494                           ; 0 bytes @ 0xC
   495                           
   496  002C                     ?_SendLED:	
   497                           ; 0 bytes @ 0xC
   498                           
   499  002C                     ??_CheckStatus:	
   500                           ; 0 bytes @ 0xC
   501                           
   502  002C                     ?_BatteryCheckVoltage:	
   503                           ; 0 bytes @ 0xC
   504                           
   505  002C                     ?___ftpack:	
   506                           ; 2 bytes @ 0xC
   507                           
   508  002C                     delay_ms@time:	
   509                           ; 3 bytes @ 0xC
   510                           
   511  002C                     SendLED@num:	
   512                           ; 2 bytes @ 0xC
   513                           
   514  002C                     CheckVoltage@ad2:	
   515                           ; 2 bytes @ 0xC
   516                           
   517  002C                     ___ftpack@arg:	
   518                           ; 2 bytes @ 0xC
   519                           
   520                           
   521                           ; 3 bytes @ 0xC
   522  002C                     	ds	2
   523  002E                     ??_BatteryCheckVoltage:	
   524  002E                     ??_delay_ms:	
   525                           ; 0 bytes @ 0xE
   526                           
   527  002E                     ??_SendLED:	
   528                           ; 0 bytes @ 0xE
   529                           
   530  002E                     CheckVoltage@thresh:	
   531                           ; 0 bytes @ 0xE
   532                           
   533                           
   534                           ; 2 bytes @ 0xE
   535  002E                     	ds	1
   536  002F                     ___ftpack@exp:	
   537  002F                     SendLED@loopNum:	
   538                           ; 1 bytes @ 0xF
   539                           
   540                           
   541                           ; 2 bytes @ 0xF
   542  002F                     	ds	1
   543  0030                     ___ftpack@sign:	
   544                           
   545                           ; 1 bytes @ 0x10
   546  0030                     	ds	1
   547  0031                     ??___ftpack:	
   548  0031                     SendLED@loop8:	
   549                           ; 0 bytes @ 0x11
   550                           
   551                           
   552                           ; 2 bytes @ 0x11
   553  0031                     	ds	2
   554  0033                     SendLED@comp:	
   555                           
   556                           ; 2 bytes @ 0x13
   557  0033                     	ds	1
   558  0034                     ?___lwtoft:	
   559  0034                     ___lwtoft@c:	
   560                           ; 3 bytes @ 0x14
   561                           
   562                           
   563                           ; 2 bytes @ 0x14
   564  0034                     	ds	1
   565  0035                     ?_SerialLED:	
   566  0035                     SerialLED@g:	
   567                           ; 0 bytes @ 0x15
   568                           
   569                           
   570                           ; 1 bytes @ 0x15
   571  0035                     	ds	1
   572  0036                     SerialLED@b:	
   573                           
   574                           ; 1 bytes @ 0x16
   575  0036                     	ds	1
   576  0037                     ??_SerialLED:	
   577  0037                     ??___lwtoft:	
   578                           ; 0 bytes @ 0x17
   579                           
   580                           
   581                           ; 0 bytes @ 0x17
   582  0037                     	ds	1
   583  0038                     ?___ftge:	
   584  0038                     ___ftge@ff1:	
   585                           ; 1 bit 
   586                           
   587                           
   588                           ; 3 bytes @ 0x18
   589  0038                     	ds	1
   590  0039                     SerialLED@r:	
   591                           
   592                           ; 1 bytes @ 0x19
   593  0039                     	ds	1
   594  003A                     ??_StopBeep:	
   595  003A                     ??_StartBeepLow:	
   596                           ; 0 bytes @ 0x1A
   597                           
   598  003A                     ??_StartBeepHigh:	
   599                           ; 0 bytes @ 0x1A
   600                           
   601  003A                     ??_StatusDisplay1:	
   602                           ; 0 bytes @ 0x1A
   603                           
   604                           
   605                           ; 0 bytes @ 0x1A
   606  003A                     	ds	1
   607  003B                     ___ftge@ff2:	
   608                           
   609                           ; 3 bytes @ 0x1B
   610  003B                     	ds	3
   611  003E                     ??___ftge:	
   612                           
   613                           ; 0 bytes @ 0x1E
   614  003E                     	ds	3
   615  0041                     ??_Inject:	
   616  0041                     ??_StatusDisplayADC:	
   617                           ; 0 bytes @ 0x21
   618                           
   619                           
   620                           ; 0 bytes @ 0x21
   621  0041                     	ds	1
   622  0042                     ??_StartStatus:	
   623                           
   624                           ; 0 bytes @ 0x22
   625  0042                     	ds	1
   626  0043                     ?_main:	
   627  0043                     main@argc:	
   628                           ; 2 bytes @ 0x23
   629                           
   630                           
   631                           ; 2 bytes @ 0x23
   632  0043                     	ds	2
   633  0045                     main@argv:	
   634                           
   635                           ; 2 bytes @ 0x25
   636  0045                     	ds	2
   637  0047                     ??_main:	
   638                           
   639                           ; 0 bytes @ 0x27
   640  0047                     	ds	2
   641                           
   642                           	psect	maintext
   643  0052                     __pmaintext:	
   644 ;;
   645 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   646 ;;
   647 ;; *************** function _main *****************
   648 ;; Defined at:
   649 ;;		line 204 in file "main.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  argc            2   35[BANK0 ] int 
   652 ;;  argv            2   37[BANK0 ] PTR PTR unsigned char 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  nSwStat         1    9[BANK1 ] unsigned char 
   655 ;;  bBeep           1    8[BANK1 ] unsigned char 
   656 ;;  nBeepLengthC    1    7[BANK1 ] unsigned char 
   657 ;;  bSwHolding      1    6[BANK1 ] unsigned char 
   658 ;;  bStay           1    5[BANK1 ] unsigned char 
   659 ;;  checkv          1    4[BANK1 ] unsigned char 
   660 ;;  bSwFixed        1    3[BANK1 ] unsigned char 
   661 ;;  nBeepRepeatC    1    2[BANK1 ] unsigned char 
   662 ;;  nSwStableCou    1    1[BANK1 ] unsigned char 
   663 ;;  nSwHoldingCo    1    0[BANK1 ] unsigned char 
   664 ;;  i               1    0        unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  2   35[BANK0 ] int 
   667 ;; Registers used:
   668 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : B1F/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1
   674 ;;      Params:         0       4       0
   675 ;;      Locals:         0       0      10
   676 ;;      Temps:          0       2       0
   677 ;;      Totals:         0       6      10
   678 ;;Total ram usage:       16 bytes
   679 ;; Hardware stack levels required when called:   10
   680 ;; This function calls:
   681 ;;		_CheckVoltage
   682 ;;		_Inject
   683 ;;		_SerialLED
   684 ;;		_StartBeepHigh
   685 ;;		_StartBeepLow
   686 ;;		_StartStatus
   687 ;;		_StatusDisplay1
   688 ;;		_StopBeep
   689 ;;		_delay_ms
   690 ;; This function is called by:
   691 ;;		Startup code after reset
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _main
   697  0052                     _main:	
   698                           
   699                           ;main.c: 206: unsigned char i, checkv;
   700                           ;main.c: 208: unsigned char nSwStat = 0, nSwStableCount = 0, bSwFixed = 0, bSwHolding = 
      +                          0;
   701                           
   702                           ;incstack = 0
   703                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   704  0052  0021               	movlb	1	; select bank1
   705  0053  01A9               	clrf	main@nSwStat^(0+128)
   706  0054  01A1               	clrf	main@nSwStableCount^(0+128)
   707  0055  01A3               	clrf	main@bSwFixed^(0+128)
   708  0056  01A6               	clrf	main@bSwHolding^(0+128)
   709                           
   710                           ;main.c: 209: unsigned char nSwHoldingCount = 0, bStay = 0, bBeep = 0, nBeepRepeatCount 
      +                          = 0, nBeepLengthCount = 0;
   711  0057  01A0               	clrf	main@nSwHoldingCount^(0+128)
   712  0058  01A5               	clrf	main@bStay^(0+128)
   713  0059  01A8               	clrf	main@bBeep^(0+128)
   714  005A  01A2               	clrf	main@nBeepRepeatCount^(0+128)
   715  005B  01A7               	clrf	main@nBeepLengthCount^(0+128)
   716                           
   717                           ;main.c: 211: OSCCONbits.IRCF = 0b0100;
   718  005C  0819               	movf	25,w	;volatile
   719  005D  3987               	andlw	-121
   720  005E  3820               	iorlw	32
   721  005F  0099               	movwf	25	;volatile
   722                           
   723                           ;main.c: 216: LATA = 0b00000000;
   724  0060  0022               	movlb	2	; select bank2
   725  0061  018C               	clrf	12	;volatile
   726                           
   727                           ;main.c: 217: LATC = 0b00000000;
   728  0062  018E               	clrf	14	;volatile
   729                           
   730                           ;main.c: 218: TRISA = 0b11111100;
   731  0063  30FC               	movlw	252
   732  0064  0021               	movlb	1	; select bank1
   733  0065  008C               	movwf	12	;volatile
   734                           
   735                           ;main.c: 219: TRISC = 0b11000111;
   736  0066  30C7               	movlw	199
   737  0067  008E               	movwf	14	;volatile
   738                           
   739                           ;main.c: 220: ANSELA = 0b00000000;
   740  0068  0023               	movlb	3	; select bank3
   741  0069  018C               	clrf	12	;volatile
   742                           
   743                           ;main.c: 221: ANSELC = 0b00000110;
   744  006A  3006               	movlw	6
   745  006B  008E               	movwf	14	;volatile
   746                           
   747                           ;main.c: 223: ADCON1 = 0b11110000;
   748  006C  30F0               	movlw	240
   749  006D  0021               	movlb	1	; select bank1
   750  006E  009E               	movwf	30	;volatile
   751                           
   752                           ;main.c: 224: TMR1H = -1*32000>>8;
   753  006F  3083               	movlw	131
   754  0070  0020               	movlb	0	; select bank0
   755  0071  0097               	movwf	23	;volatile
   756                           
   757                           ;main.c: 225: TMR1L = -1*32000&0x00ff;
   758  0072  0196               	clrf	22	;volatile
   759                           
   760                           ;main.c: 227: StartStatus();
   761  0073  2634               	fcall	_StartStatus
   762                           
   763                           ;main.c: 228: delay_ms(50);
   764  0074  3032               	movlw	50
   765  0075  0020               	movlb	0	; select bank0
   766  0076  00AC               	movwf	delay_ms@time
   767  0077  3000               	movlw	0
   768  0078  00AD               	movwf	delay_ms@time+1
   769  0079  264F               	fcall	_delay_ms
   770                           
   771                           ;main.c: 229: SerialLED(0,0,0);
   772  007A  0020               	movlb	0	; select bank0
   773  007B  01B5               	clrf	SerialLED@g
   774  007C  01B6               	clrf	SerialLED@b
   775  007D  3000               	movlw	0
   776  007E  251A               	fcall	_SerialLED
   777                           
   778                           ;main.c: 230: delay_ms(50);
   779  007F  3032               	movlw	50
   780  0080  0020               	movlb	0	; select bank0
   781  0081  00AC               	movwf	delay_ms@time
   782  0082  3000               	movlw	0
   783  0083  00AD               	movwf	delay_ms@time+1
   784  0084  264F               	fcall	_delay_ms
   785                           
   786                           ;main.c: 232: StartStatus();
   787  0085  2634               	fcall	_StartStatus
   788                           
   789                           ;main.c: 233: delay_ms(50);
   790  0086  3032               	movlw	50
   791  0087  0020               	movlb	0	; select bank0
   792  0088  00AC               	movwf	delay_ms@time
   793  0089  3000               	movlw	0
   794  008A  00AD               	movwf	delay_ms@time+1
   795  008B  264F               	fcall	_delay_ms
   796                           
   797                           ;main.c: 234: SerialLED(0,0,0);
   798  008C  0020               	movlb	0	; select bank0
   799  008D  01B5               	clrf	SerialLED@g
   800  008E  01B6               	clrf	SerialLED@b
   801  008F  3000               	movlw	0
   802  0090  251A               	fcall	_SerialLED
   803                           
   804                           ;main.c: 235: delay_ms(100);
   805  0091  3064               	movlw	100
   806  0092  0020               	movlb	0	; select bank0
   807  0093  00AC               	movwf	delay_ms@time
   808  0094  3000               	movlw	0
   809  0095  00AD               	movwf	delay_ms@time+1
   810  0096  264F               	fcall	_delay_ms
   811                           
   812                           ;main.c: 238: PIE1bits.TMR1IE = 1;
   813  0097  0021               	movlb	1	; select bank1
   814  0098  1411               	bsf	17,0	;volatile
   815                           
   816                           ;main.c: 240: T1CON = 0b00110001;
   817  0099  3031               	movlw	49
   818  009A  0020               	movlb	0	; select bank0
   819  009B  0098               	movwf	24	;volatile
   820                           
   821                           ;main.c: 243: IOCANbits.IOCAN5 = 1;
   822  009C  0027               	movlb	7	; select bank7
   823  009D  1692               	bsf	18,5	;volatile
   824                           
   825                           ;main.c: 245: INTCONbits.IOCIE = 1;
   826  009E  158B               	bsf	11,3	;volatile
   827                           
   828                           ;main.c: 247: INTCONbits.PEIE = 1;
   829  009F  170B               	bsf	11,6	;volatile
   830                           
   831                           ;main.c: 248: INTCONbits.GIE = 1;
   832  00A0  178B               	bsf	11,7	;volatile
   833  00A1                     l2646:	
   834                           ;main.c: 254: while(1){
   835                           
   836                           
   837                           ;main.c: 255: LATCbits.LATC4 = 1;
   838  00A1  0022               	movlb	2	; select bank2
   839  00A2  160E               	bsf	14,4	;volatile
   840                           
   841                           ;main.c: 257: _delay((unsigned long)((1)*(62500/4000.0)));
   842  00A3  3004               	movlw	4
   843  00A4  0020               	movlb	0	; select bank0
   844  00A5  00C7               	movwf	??_main
   845  00A6                     u2727:	
   846  00A6  0BC7               	decfsz	??_main,f
   847  00A7  28A6               	goto	u2727
   848  00A8  3200               	nop2	;nop
   849                           
   850                           ;main.c: 258: LATCbits.LATC4 = 0;
   851  00A9  0022               	movlb	2	; select bank2
   852  00AA  120E               	bcf	14,4	;volatile
   853                           
   854                           ;main.c: 259: _delay((unsigned long)((10)*(62500/4000.0)));
   855  00AB  3033               	movlw	51
   856  00AC  0020               	movlb	0	; select bank0
   857  00AD  00C7               	movwf	??_main
   858  00AE                     u2737:	
   859  00AE  0BC7               	decfsz	??_main,f
   860  00AF  28AE               	goto	u2737
   861  00B0  3200               	nop2	;nop
   862  00B1  28A1               	goto	l2646
   863  00B2                     l2654:	
   864                           ;main.c: 260: }
   865                           ;main.c: 262: while(1)
   866                           
   867                           
   868                           ;main.c: 263: {
   869                           ;main.c: 264: if(PORTAbits.RA5 == nSwStat)
   870  00B2  0020               	movlb	0	; select bank0
   871  00B3  0E0C               	swapf	12,w	;volatile
   872  00B4  0C89               	rrf	9,f
   873  00B5  3901               	andlw	1
   874  00B6  0021               	movlb	1	; select bank1
   875  00B7  0629               	xorwf	main@nSwStat^(0+128),w
   876  00B8  1D03               	skipz
   877  00B9  28C7               	goto	l2660
   878                           
   879                           ;main.c: 265: {
   880                           ;main.c: 266: if(++nSwStableCount >= 5) bSwFixed = 1;
   881  00BA  3001               	movlw	1
   882  00BB  0020               	movlb	0	; select bank0
   883  00BC  00C7               	movwf	??_main
   884  00BD  0847               	movf	??_main,w
   885  00BE  0021               	movlb	1	; select bank1
   886  00BF  07A1               	addwf	main@nSwStableCount^(0+128),f
   887  00C0  3005               	movlw	5
   888  00C1  0221               	subwf	main@nSwStableCount^(0+128),w
   889  00C2  1C03               	skipc
   890  00C3  28D1               	goto	l2664
   891  00C4  01A3               	clrf	main@bSwFixed^(0+128)
   892  00C5  0AA3               	incf	main@bSwFixed^(0+128),f
   893                           
   894                           ;main.c: 267: }
   895  00C6  28D1               	goto	l2664
   896  00C7                     l2660:	
   897                           
   898                           ;main.c: 268: else
   899                           ;main.c: 269: {
   900                           ;main.c: 270: nSwStableCount = 0;
   901  00C7  01A1               	clrf	main@nSwStableCount^(0+128)
   902                           
   903                           ;main.c: 271: bSwFixed = 0;
   904  00C8  01A3               	clrf	main@bSwFixed^(0+128)
   905                           
   906                           ;main.c: 272: nSwStat = 1 - nSwStat;
   907  00C9  0329               	decf	main@nSwStat^(0+128),w
   908  00CA  3AFF               	xorlw	255
   909  00CB  3E01               	addlw	1
   910  00CC  0020               	movlb	0	; select bank0
   911  00CD  00C7               	movwf	??_main
   912  00CE  0847               	movf	??_main,w
   913  00CF  0021               	movlb	1	; select bank1
   914  00D0  00A9               	movwf	main@nSwStat^(0+128)
   915  00D1                     l2664:	
   916                           
   917                           ;main.c: 273: }
   918                           ;main.c: 274: if(bSwFixed)
   919  00D1  0823               	movf	main@bSwFixed^(0+128),w
   920  00D2  1903               	btfsc	3,2
   921  00D3  292E               	goto	l2722
   922                           
   923                           ;main.c: 275: {
   924                           ;main.c: 276: if(nSwStat == 1)
   925  00D4  0329               	decf	main@nSwStat^(0+128),w
   926  00D5  1D03               	btfss	3,2
   927  00D6  28E1               	goto	l2680
   928                           
   929                           ;main.c: 277: {
   930                           ;main.c: 278: if(bBeep)
   931  00D7  0828               	movf	main@bBeep^(0+128),w
   932  00D8  1903               	btfsc	3,2
   933  00D9  28DD               	goto	l2674
   934                           
   935                           ;main.c: 279: {
   936                           ;main.c: 280: StopBeep();
   937  00DA  2667               	fcall	_StopBeep
   938                           
   939                           ;main.c: 281: bBeep = 0;
   940  00DB  0021               	movlb	1	; select bank1
   941  00DC  01A8               	clrf	main@bBeep^(0+128)
   942  00DD                     l2674:	
   943                           
   944                           ;main.c: 282: }
   945                           ;main.c: 283: bSwHolding = 0;
   946  00DD  01A6               	clrf	main@bSwHolding^(0+128)
   947                           
   948                           ;main.c: 284: nSwHoldingCount = 0;
   949  00DE  01A0               	clrf	main@nSwHoldingCount^(0+128)
   950                           
   951                           ;main.c: 285: bStay = 0;
   952  00DF  01A5               	clrf	main@bStay^(0+128)
   953                           
   954                           ;main.c: 286: }
   955  00E0  292E               	goto	l2722
   956  00E1                     l2680:	
   957                           
   958                           ;main.c: 287: else
   959                           ;main.c: 288: {
   960                           ;main.c: 289: if(!bSwHolding)
   961  00E1  0826               	movf	main@bSwHolding^(0+128),w
   962  00E2  1D03               	btfss	3,2
   963  00E3  292E               	goto	l2722
   964                           
   965                           ;main.c: 290: {
   966                           ;main.c: 291: bSwHolding = 1;
   967  00E4  01A6               	clrf	main@bSwHolding^(0+128)
   968  00E5  0AA6               	incf	main@bSwHolding^(0+128),f
   969                           
   970                           ;main.c: 292: checkv = CheckVoltage();
   971  00E6  2586               	fcall	_CheckVoltage
   972  00E7  0020               	movlb	0	; select bank0
   973  00E8  00C7               	movwf	??_main
   974  00E9  0847               	movf	??_main,w
   975  00EA  0021               	movlb	1	; select bank1
   976  00EB  00A4               	movwf	main@checkv^(0+128)
   977                           
   978                           ;main.c: 293: if(checkv == 1)
   979  00EC  0324               	decf	main@checkv^(0+128),w
   980  00ED  1D03               	btfss	3,2
   981  00EE  28FC               	goto	l2696
   982                           
   983                           ;main.c: 294: {
   984                           ;main.c: 295: StartBeepLow();
   985  00EF  25B9               	fcall	_StartBeepLow
   986                           
   987                           ;main.c: 296: _delay((unsigned long)((300)*(62500/4000.0)));
   988  00F0  3007               	movlw	7
   989  00F1  0020               	movlb	0	; select bank0
   990  00F2  00C8               	movwf	??_main+1
   991  00F3  3014               	movlw	20
   992  00F4  00C7               	movwf	??_main
   993  00F5                     u2747:	
   994  00F5  0BC7               	decfsz	??_main,f
   995  00F6  28F5               	goto	u2747
   996  00F7  0BC8               	decfsz	??_main+1,f
   997  00F8  28F5               	goto	u2747
   998  00F9  3200               	nop2
   999                           
  1000                           ;main.c: 297: StopBeep();
  1001  00FA  2667               	fcall	_StopBeep
  1002  00FB  2924               	goto	l2712
  1003  00FC                     l2696:	
  1004                           ;main.c: 299: }
  1005                           
  1006                           ;main.c: 298: bStay = 1;
  1007                           
  1008                           
  1009                           ;main.c: 300: else if(checkv == 2)
  1010  00FC  3002               	movlw	2
  1011  00FD  0624               	xorwf	main@checkv^(0+128),w
  1012  00FE  1D03               	btfss	3,2
  1013  00FF  2920               	goto	l216
  1014                           
  1015                           ;main.c: 301: {
  1016                           ;main.c: 302: StartBeepLow();
  1017  0100  25B9               	fcall	_StartBeepLow
  1018                           
  1019                           ;main.c: 303: _delay((unsigned long)((300)*(62500/4000.0)));
  1020  0101  3007               	movlw	7
  1021  0102  0020               	movlb	0	; select bank0
  1022  0103  00C8               	movwf	??_main+1
  1023  0104  3014               	movlw	20
  1024  0105  00C7               	movwf	??_main
  1025  0106                     u2757:	
  1026  0106  0BC7               	decfsz	??_main,f
  1027  0107  2906               	goto	u2757
  1028  0108  0BC8               	decfsz	??_main+1,f
  1029  0109  2906               	goto	u2757
  1030  010A  3200               	nop2
  1031                           
  1032                           ;main.c: 304: StopBeep();
  1033  010B  2667               	fcall	_StopBeep
  1034                           
  1035                           ;main.c: 305: _delay((unsigned long)((100)*(62500/4000.0)));
  1036  010C  30DF               	movlw	223
  1037  010D  0020               	movlb	0	; select bank0
  1038  010E  00C7               	movwf	??_main
  1039  010F                     u2767:	
  1040  010F  3200               	nop2
  1041  0110  3200               	nop2
  1042  0111  0BC7               	decfsz	??_main,f
  1043  0112  290F               	goto	u2767
  1044                           
  1045                           ;main.c: 307: StartBeepLow();
  1046  0113  25B9               	fcall	_StartBeepLow
  1047                           
  1048                           ;main.c: 308: _delay((unsigned long)((300)*(62500/4000.0)));
  1049  0114  3007               	movlw	7
  1050  0115  0020               	movlb	0	; select bank0
  1051  0116  00C8               	movwf	??_main+1
  1052  0117  3014               	movlw	20
  1053  0118  00C7               	movwf	??_main
  1054  0119                     u2777:	
  1055  0119  0BC7               	decfsz	??_main,f
  1056  011A  2919               	goto	u2777
  1057  011B  0BC8               	decfsz	??_main+1,f
  1058  011C  2919               	goto	u2777
  1059  011D  3200               	nop2
  1060                           
  1061                           ;main.c: 309: StopBeep();
  1062  011E  2667               	fcall	_StopBeep
  1063  011F  2924               	goto	l2712
  1064  0120                     l216:	
  1065                           ;main.c: 311: }
  1066                           
  1067                           ;main.c: 310: bStay = 1;
  1068                           
  1069                           
  1070                           ;main.c: 312: else
  1071                           ;main.c: 313: {
  1072                           ;main.c: 314: if(PORTAbits.RA4)
  1073  0120  0020               	movlb	0	; select bank0
  1074  0121  1E0C               	btfss	12,4	;volatile
  1075  0122  2928               	goto	l2714
  1076                           
  1077                           ;main.c: 315: {
  1078                           ;main.c: 316: Inject();
  1079  0123  2386               	fcall	_Inject
  1080  0124                     l2712:	
  1081                           
  1082                           ;main.c: 317: bStay = 1;
  1083  0124  0021               	movlb	1	; select bank1
  1084  0125  01A5               	clrf	main@bStay^(0+128)
  1085  0126  0AA5               	incf	main@bStay^(0+128),f
  1086                           
  1087                           ;main.c: 318: }
  1088  0127  292E               	goto	l2722
  1089  0128                     l2714:	
  1090                           
  1091                           ;main.c: 319: else
  1092                           ;main.c: 320: {
  1093                           ;main.c: 321: StartBeepHigh();
  1094  0128  25FA               	fcall	_StartBeepHigh
  1095                           
  1096                           ;main.c: 322: bBeep = 1;
  1097  0129  0021               	movlb	1	; select bank1
  1098  012A  01A8               	clrf	main@bBeep^(0+128)
  1099  012B  0AA8               	incf	main@bBeep^(0+128),f
  1100                           
  1101                           ;main.c: 323: nBeepRepeatCount = 0;
  1102  012C  01A2               	clrf	main@nBeepRepeatCount^(0+128)
  1103                           
  1104                           ;main.c: 324: nBeepLengthCount = 0;
  1105  012D  01A7               	clrf	main@nBeepLengthCount^(0+128)
  1106  012E                     l2722:	
  1107                           
  1108                           ;main.c: 325: }
  1109                           ;main.c: 326: }
  1110                           ;main.c: 327: }
  1111                           ;main.c: 328: }
  1112                           ;main.c: 329: }
  1113                           ;main.c: 331: if(bSwHolding && !bStay)
  1114  012E  0826               	movf	main@bSwHolding^(0+128),w
  1115  012F  1903               	btfsc	3,2
  1116  0130  2963               	goto	l2750
  1117  0131  0825               	movf	main@bStay^(0+128),w
  1118  0132  1D03               	btfss	3,2
  1119  0133  2963               	goto	l2750
  1120                           
  1121                           ;main.c: 332: {
  1122                           ;main.c: 333: if(bBeep)
  1123  0134  0828               	movf	main@bBeep^(0+128),w
  1124  0135  1903               	btfsc	3,2
  1125  0136  2945               	goto	l2736
  1126                           
  1127                           ;main.c: 334: {
  1128                           ;main.c: 335: if(++nBeepLengthCount >= 5)
  1129  0137  3001               	movlw	1
  1130  0138  0020               	movlb	0	; select bank0
  1131  0139  00C7               	movwf	??_main
  1132  013A  0847               	movf	??_main,w
  1133  013B  0021               	movlb	1	; select bank1
  1134  013C  07A7               	addwf	main@nBeepLengthCount^(0+128),f
  1135  013D  3005               	movlw	5
  1136  013E  0227               	subwf	main@nBeepLengthCount^(0+128),w
  1137  013F  1C03               	skipc
  1138  0140  2963               	goto	l2750
  1139                           
  1140                           ;main.c: 336: {
  1141                           ;main.c: 337: StopBeep();
  1142  0141  2667               	fcall	_StopBeep
  1143                           
  1144                           ;main.c: 338: bBeep = 0;
  1145  0142  0021               	movlb	1	; select bank1
  1146  0143  01A8               	clrf	main@bBeep^(0+128)
  1147  0144  2962               	goto	l2748
  1148  0145                     l2736:	
  1149                           ;main.c: 340: }
  1150                           ;main.c: 341: }
  1151                           
  1152                           ;main.c: 339: nBeepLengthCount = 0;
  1153                           
  1154                           
  1155                           ;main.c: 342: else
  1156                           ;main.c: 343: {
  1157                           ;main.c: 344: if(++nBeepLengthCount >= 40)
  1158  0145  3001               	movlw	1
  1159  0146  0020               	movlb	0	; select bank0
  1160  0147  00C7               	movwf	??_main
  1161  0148  0847               	movf	??_main,w
  1162  0149  0021               	movlb	1	; select bank1
  1163  014A  07A7               	addwf	main@nBeepLengthCount^(0+128),f
  1164  014B  3028               	movlw	40
  1165  014C  0227               	subwf	main@nBeepLengthCount^(0+128),w
  1166  014D  1C03               	skipc
  1167  014E  2963               	goto	l2750
  1168                           
  1169                           ;main.c: 345: {
  1170                           ;main.c: 346: if(++nBeepRepeatCount >= 3)
  1171  014F  3001               	movlw	1
  1172  0150  0020               	movlb	0	; select bank0
  1173  0151  00C7               	movwf	??_main
  1174  0152  0847               	movf	??_main,w
  1175  0153  0021               	movlb	1	; select bank1
  1176  0154  07A2               	addwf	main@nBeepRepeatCount^(0+128),f
  1177  0155  3003               	movlw	3
  1178  0156  0222               	subwf	main@nBeepRepeatCount^(0+128),w
  1179  0157  1C03               	skipc
  1180  0158  295E               	goto	l2744
  1181                           
  1182                           ;main.c: 347: {
  1183                           ;main.c: 348: Inject();
  1184  0159  2386               	fcall	_Inject
  1185                           
  1186                           ;main.c: 349: bStay = 1;
  1187  015A  0021               	movlb	1	; select bank1
  1188  015B  01A5               	clrf	main@bStay^(0+128)
  1189  015C  0AA5               	incf	main@bStay^(0+128),f
  1190                           
  1191                           ;main.c: 350: }
  1192  015D  2963               	goto	l2750
  1193  015E                     l2744:	
  1194                           
  1195                           ;main.c: 351: else
  1196                           ;main.c: 352: {
  1197                           ;main.c: 353: StartBeepHigh();
  1198  015E  25FA               	fcall	_StartBeepHigh
  1199                           
  1200                           ;main.c: 354: bBeep = 1;
  1201  015F  0021               	movlb	1	; select bank1
  1202  0160  01A8               	clrf	main@bBeep^(0+128)
  1203  0161  0AA8               	incf	main@bBeep^(0+128),f
  1204  0162                     l2748:	
  1205                           
  1206                           ;main.c: 355: nBeepLengthCount = 0;
  1207  0162  01A7               	clrf	main@nBeepLengthCount^(0+128)
  1208  0163                     l2750:	
  1209                           
  1210                           ;main.c: 356: }
  1211                           ;main.c: 357: }
  1212                           ;main.c: 358: }
  1213                           ;main.c: 359: }
  1214                           ;main.c: 360: _delay((unsigned long)((10)*(62500/4000.0)));
  1215  0163  3033               	movlw	51
  1216  0164  0020               	movlb	0	; select bank0
  1217  0165  00C7               	movwf	??_main
  1218  0166                     u2787:	
  1219  0166  0BC7               	decfsz	??_main,f
  1220  0167  2966               	goto	u2787
  1221  0168  3200               	nop2	;nop
  1222                           
  1223                           ;main.c: 361: StatusDisplay1();
  1224  0169  2462               	fcall	_StatusDisplay1
  1225  016A  28B2               	goto	l2654
  1226  016B                     __end_of_main:	
  1227                           ;main.c: 362: }
  1228                           ;main.c: 363: return (0);
  1229                           ;	Return value of _main is never used
  1230                           
  1231                           
  1232                           	psect	text1
  1233  0462                     __ptext1:	
  1234 ;; *************** function _StatusDisplay1 *****************
  1235 ;; Defined at:
  1236 ;;		line 153 in file "main.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;		None               void
  1243 ;; Registers used:
  1244 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1
  1250 ;;      Params:         0       0       0
  1251 ;;      Locals:         0       0       0
  1252 ;;      Temps:          0       2       0
  1253 ;;      Totals:         0       2       0
  1254 ;;Total ram usage:        2 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    8
  1257 ;; This function calls:
  1258 ;;		_CheckStatus
  1259 ;;		_SerialLED
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _StatusDisplay1
  1267  0462                     _StatusDisplay1:	
  1268                           
  1269                           ;main.c: 154: CheckStatus();
  1270                           
  1271                           ;incstack = 0
  1272                           ; Regs used in _StatusDisplay1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1273  0462  25DD               	fcall	_CheckStatus
  1274                           
  1275                           ;main.c: 155: if(ChargeStatus!=LastChargeStatus){
  1276  0463  0020               	movlb	0	; select bank0
  1277  0464  0855               	movf	_ChargeStatus,w
  1278  0465  0657               	xorwf	_LastChargeStatus,w
  1279  0466  1903               	skipnz
  1280  0467  0008               	return
  1281                           
  1282                           ;main.c: 156: LastChargeStatus = ChargeStatus;
  1283  0468  0855               	movf	_ChargeStatus,w
  1284  0469  00BA               	movwf	??_StatusDisplay1
  1285  046A  083A               	movf	??_StatusDisplay1,w
  1286  046B  00D7               	movwf	_LastChargeStatus
  1287                           
  1288                           ;main.c: 158: if(ChargeStatus == 2){
  1289  046C  3002               	movlw	2
  1290  046D  0655               	xorwf	_ChargeStatus,w
  1291  046E  1D03               	btfss	3,2
  1292  046F  2C84               	goto	l2516
  1293                           
  1294                           ;main.c: 159: _delay((unsigned long)((300)*(62500/4000.0)));
  1295  0470  3007               	movlw	7
  1296  0471  00BB               	movwf	??_StatusDisplay1+1
  1297  0472  3014               	movlw	20
  1298  0473  00BA               	movwf	??_StatusDisplay1
  1299  0474                     u2797:	
  1300  0474  0BBA               	decfsz	??_StatusDisplay1,f
  1301  0475  2C74               	goto	u2797
  1302  0476  0BBB               	decfsz	??_StatusDisplay1+1,f
  1303  0477  2C74               	goto	u2797
  1304  0478  3200               	nop2
  1305                           
  1306                           ;main.c: 160: CheckStatus();if(ChargeStatus==2){SerialLED(20,0,0);}
  1307  0479  25DD               	fcall	_CheckStatus
  1308  047A  3002               	movlw	2
  1309  047B  0020               	movlb	0	; select bank0
  1310  047C  0655               	xorwf	_ChargeStatus,w
  1311  047D  1D03               	btfss	3,2
  1312  047E  0008               	return
  1313  047F  01B5               	clrf	SerialLED@g
  1314  0480  01B6               	clrf	SerialLED@b
  1315  0481  3014               	movlw	20
  1316  0482  251A               	fcall	_SerialLED
  1317                           
  1318                           ;main.c: 163: }else if(ChargeStatus == 3){
  1319  0483  0008               	return
  1320  0484                     l2516:	
  1321  0484  3003               	movlw	3
  1322  0485  0020               	movlb	0	; select bank0
  1323  0486  0655               	xorwf	_ChargeStatus,w
  1324  0487  1D03               	btfss	3,2
  1325  0488  2C91               	goto	l2520
  1326                           
  1327                           ;main.c: 164: SerialLED(0,0,25);
  1328  0489  01B5               	clrf	SerialLED@g
  1329  048A  3019               	movlw	25
  1330  048B  00BA               	movwf	??_StatusDisplay1
  1331  048C  083A               	movf	??_StatusDisplay1,w
  1332  048D  00B6               	movwf	SerialLED@b
  1333  048E  3000               	movlw	0
  1334  048F  251A               	fcall	_SerialLED
  1335                           
  1336                           ;main.c: 165: }else if(ChargeStatus == 1){
  1337  0490  0008               	return
  1338  0491                     l2520:	
  1339  0491  0020               	movlb	0	; select bank0
  1340  0492  0355               	decf	_ChargeStatus,w
  1341  0493  1D03               	btfss	3,2
  1342  0494  0008               	return
  1343                           
  1344                           ;main.c: 166: if(BeepStatus!=1){
  1345  0495  0354               	decf	_BeepStatus,w
  1346  0496  1903               	btfsc	3,2
  1347  0497  0008               	return
  1348                           
  1349                           ;main.c: 167: SerialLED(0,0,0);
  1350  0498  01B5               	clrf	SerialLED@g
  1351  0499  01B6               	clrf	SerialLED@b
  1352  049A  3000               	movlw	0
  1353  049B  251A               	fcall	_SerialLED
  1354                           
  1355                           ;main.c: 168: TMR1H = (-1*8000/4 >> 8);
  1356  049C  30F8               	movlw	248
  1357  049D  0020               	movlb	0	; select bank0
  1358  049E  0097               	movwf	23	;volatile
  1359                           
  1360                           ;main.c: 169: TMR1L = (-1*8000/4 & 0x00ff);
  1361  049F  3030               	movlw	48
  1362  04A0  0096               	movwf	22	;volatile
  1363  04A1  0008               	return
  1364  04A2                     __end_of_StatusDisplay1:	
  1365                           
  1366                           	psect	text2
  1367  0634                     __ptext2:	
  1368 ;; *************** function _StartStatus *****************
  1369 ;; Defined at:
  1370 ;;		line 187 in file "main.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;		None               void
  1377 ;; Registers used:
  1378 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1
  1384 ;;      Params:         0       0       0
  1385 ;;      Locals:         0       0       0
  1386 ;;      Temps:          0       0       0
  1387 ;;      Totals:         0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    9
  1391 ;; This function calls:
  1392 ;;		_CheckStatus
  1393 ;;		_SerialLED
  1394 ;;		_StatusDisplayADC
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _StartStatus
  1402  0634                     _StartStatus:	
  1403                           
  1404                           ;main.c: 188: CheckStatus();
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _StartStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1408  0634  25DD               	fcall	_CheckStatus
  1409                           
  1410                           ;main.c: 191: if(ChargeStatus == 2){
  1411  0635  3002               	movlw	2
  1412  0636  0020               	movlb	0	; select bank0
  1413  0637  0655               	xorwf	_ChargeStatus,w
  1414  0638  1D03               	btfss	3,2
  1415  0639  2E3F               	goto	l2536
  1416                           
  1417                           ;main.c: 192: SerialLED(20,0,0);
  1418  063A  01B5               	clrf	SerialLED@g
  1419  063B  01B6               	clrf	SerialLED@b
  1420  063C  3014               	movlw	20
  1421  063D  251A               	fcall	_SerialLED
  1422                           
  1423                           ;main.c: 194: }else if(ChargeStatus == 3){
  1424  063E  0008               	return
  1425  063F                     l2536:	
  1426  063F  3003               	movlw	3
  1427  0640  0020               	movlb	0	; select bank0
  1428  0641  0655               	xorwf	_ChargeStatus,w
  1429  0642  1D03               	btfss	3,2
  1430  0643  2E49               	goto	l2540
  1431                           
  1432                           ;main.c: 195: SerialLED(20,0,0);
  1433  0644  01B5               	clrf	SerialLED@g
  1434  0645  01B6               	clrf	SerialLED@b
  1435  0646  3014               	movlw	20
  1436  0647  251A               	fcall	_SerialLED
  1437                           
  1438                           ;main.c: 197: }else if(ChargeStatus == 1){
  1439  0648  0008               	return
  1440  0649                     l2540:	
  1441  0649  0020               	movlb	0	; select bank0
  1442  064A  0355               	decf	_ChargeStatus,w
  1443  064B  1D03               	btfss	3,2
  1444  064C  0008               	return
  1445                           
  1446                           ;main.c: 198: StatusDisplayADC();
  1447  064D  23D1               	fcall	_StatusDisplayADC
  1448  064E  0008               	return
  1449  064F                     __end_of_StartStatus:	
  1450                           
  1451                           	psect	text3
  1452  03D1                     __ptext3:	
  1453 ;; *************** function _StatusDisplayADC *****************
  1454 ;; Defined at:
  1455 ;;		line 174 in file "main.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;		None               void
  1462 ;; Registers used:
  1463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1
  1469 ;;      Params:         0       0       0
  1470 ;;      Locals:         0       0       0
  1471 ;;      Temps:          0       1       0
  1472 ;;      Totals:         0       1       0
  1473 ;;Total ram usage:        1 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    8
  1476 ;; This function calls:
  1477 ;;		_BatteryCheckVoltage
  1478 ;;		_SerialLED
  1479 ;;		___ftge
  1480 ;;		___lwtoft
  1481 ;; This function is called by:
  1482 ;;		_StartStatus
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _StatusDisplayADC
  1488  03D1                     _StatusDisplayADC:	
  1489                           
  1490                           ;main.c: 175: vBattery = BatteryCheckVoltage();
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _StatusDisplayADC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1494  03D1  2691               	fcall	_BatteryCheckVoltage
  1495  03D2  0020               	movlb	0	; select bank0
  1496  03D3  082D               	movf	?_BatteryCheckVoltage+1,w
  1497  03D4  00D2               	movwf	_vBattery+1
  1498  03D5  082C               	movf	?_BatteryCheckVoltage,w
  1499  03D6  00D1               	movwf	_vBattery
  1500                           
  1501                           ;main.c: 177: if(vBattery > 0x03ff*0.37){
  1502  03D7  3041               	movlw	65
  1503  03D8  00B8               	movwf	___ftge@ff1
  1504  03D9  30BD               	movlw	189
  1505  03DA  00B9               	movwf	___ftge@ff1+1
  1506  03DB  3043               	movlw	67
  1507  03DC  00BA               	movwf	___ftge@ff1+2
  1508  03DD  0852               	movf	_vBattery+1,w
  1509  03DE  00B5               	movwf	___lwtoft@c+1
  1510  03DF  0851               	movf	_vBattery,w
  1511  03E0  00B4               	movwf	___lwtoft@c
  1512  03E1  267D               	fcall	___lwtoft
  1513  03E2  0020               	movlb	0	; select bank0
  1514  03E3  0834               	movf	?___lwtoft,w
  1515  03E4  00BB               	movwf	___ftge@ff2
  1516  03E5  0835               	movf	?___lwtoft+1,w
  1517  03E6  00BC               	movwf	___ftge@ff2+1
  1518  03E7  0836               	movf	?___lwtoft+2,w
  1519  03E8  00BD               	movwf	___ftge@ff2+2
  1520  03E9  24A2               	fcall	___ftge
  1521  03EA  1803               	btfsc	3,0
  1522  03EB  2BF5               	goto	l2434
  1523                           
  1524                           ;main.c: 178: SerialLED(0,0,20);
  1525  03EC  0020               	movlb	0	; select bank0
  1526  03ED  01B5               	clrf	SerialLED@g
  1527  03EE  3014               	movlw	20
  1528  03EF  00C1               	movwf	??_StatusDisplayADC
  1529  03F0  0841               	movf	??_StatusDisplayADC,w
  1530  03F1  00B6               	movwf	SerialLED@b
  1531  03F2  3000               	movlw	0
  1532  03F3  251A               	fcall	_SerialLED
  1533                           
  1534                           ;main.c: 179: }else{
  1535  03F4  0008               	return
  1536  03F5                     l2434:	
  1537                           
  1538                           ;main.c: 180: if(vBattery > 0x03ff*0.31){
  1539  03F5  3091               	movlw	145
  1540  03F6  0020               	movlb	0	; select bank0
  1541  03F7  00B8               	movwf	___ftge@ff1
  1542  03F8  309E               	movlw	158
  1543  03F9  00B9               	movwf	___ftge@ff1+1
  1544  03FA  3043               	movlw	67
  1545  03FB  00BA               	movwf	___ftge@ff1+2
  1546  03FC  0852               	movf	_vBattery+1,w
  1547  03FD  00B5               	movwf	___lwtoft@c+1
  1548  03FE  0851               	movf	_vBattery,w
  1549  03FF  00B4               	movwf	___lwtoft@c
  1550  0400  267D               	fcall	___lwtoft
  1551  0401  0020               	movlb	0	; select bank0
  1552  0402  0834               	movf	?___lwtoft,w
  1553  0403  00BB               	movwf	___ftge@ff2
  1554  0404  0835               	movf	?___lwtoft+1,w
  1555  0405  00BC               	movwf	___ftge@ff2+1
  1556  0406  0836               	movf	?___lwtoft+2,w
  1557  0407  00BD               	movwf	___ftge@ff2+2
  1558  0408  24A2               	fcall	___ftge
  1559  0409  1803               	btfsc	3,0
  1560  040A  2C14               	goto	l2438
  1561                           
  1562                           ;main.c: 181: SerialLED(24,13,0);
  1563  040B  300D               	movlw	13
  1564  040C  0020               	movlb	0	; select bank0
  1565  040D  00C1               	movwf	??_StatusDisplayADC
  1566  040E  0841               	movf	??_StatusDisplayADC,w
  1567  040F  00B5               	movwf	SerialLED@g
  1568  0410  01B6               	clrf	SerialLED@b
  1569  0411  3018               	movlw	24
  1570  0412  251A               	fcall	_SerialLED
  1571                           
  1572                           ;main.c: 182: }else{
  1573  0413  0008               	return
  1574  0414                     l2438:	
  1575                           
  1576                           ;main.c: 183: SerialLED(40,0,0);
  1577  0414  0020               	movlb	0	; select bank0
  1578  0415  01B5               	clrf	SerialLED@g
  1579  0416  01B6               	clrf	SerialLED@b
  1580  0417  3028               	movlw	40
  1581  0418  251A               	fcall	_SerialLED
  1582  0419  0008               	return
  1583  041A                     __end_of_StatusDisplayADC:	
  1584                           
  1585                           	psect	text4
  1586  05DD                     __ptext4:	
  1587 ;; *************** function _CheckStatus *****************
  1588 ;; Defined at:
  1589 ;;		line 136 in file "main.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;		None               void
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1
  1603 ;;      Params:         0       0       0
  1604 ;;      Locals:         0       0       0
  1605 ;;      Temps:          0       1       0
  1606 ;;      Totals:         0       1       0
  1607 ;;Total ram usage:        1 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    5
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_StatusDisplay1
  1614 ;;		_StartStatus
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           
  1619                           ;psect for function _CheckStatus
  1620  05DD                     _CheckStatus:	
  1621                           
  1622                           ;main.c: 137: if(PORTCbits.RC0==1){
  1623                           
  1624                           ;incstack = 0
  1625                           ; Regs used in _CheckStatus: [wreg+status,2+status,0]
  1626  05DD  0020               	movlb	0	; select bank0
  1627  05DE  1C0E               	btfss	14,0	;volatile
  1628  05DF  2DF4               	goto	l2424
  1629                           
  1630                           ;main.c: 138: if(PORTAbits.RA2==1){
  1631  05E0  1D0C               	btfss	12,2	;volatile
  1632  05E1  2DEB               	goto	l2420
  1633                           
  1634                           ;main.c: 139: if(ChargeStatus!=3){
  1635  05E2  3003               	movlw	3
  1636  05E3  0655               	xorwf	_ChargeStatus,w
  1637  05E4  1903               	btfsc	3,2
  1638  05E5  0008               	return
  1639                           
  1640                           ;main.c: 140: ChargeStatus=3;
  1641  05E6  3003               	movlw	3
  1642  05E7  00AC               	movwf	??_CheckStatus
  1643  05E8  082C               	movf	??_CheckStatus,w
  1644  05E9  00D5               	movwf	_ChargeStatus
  1645                           
  1646                           ;main.c: 141: }
  1647                           ;main.c: 142: }else{
  1648  05EA  0008               	return
  1649  05EB                     l2420:	
  1650                           
  1651                           ;main.c: 143: if(ChargeStatus!=2){
  1652  05EB  3002               	movlw	2
  1653  05EC  0655               	xorwf	_ChargeStatus,w
  1654  05ED  1903               	btfsc	3,2
  1655  05EE  0008               	return
  1656                           
  1657                           ;main.c: 144: ChargeStatus=2;
  1658  05EF  3002               	movlw	2
  1659  05F0  00AC               	movwf	??_CheckStatus
  1660  05F1  082C               	movf	??_CheckStatus,w
  1661  05F2  00D5               	movwf	_ChargeStatus
  1662                           
  1663                           ;main.c: 145: }
  1664                           ;main.c: 146: }
  1665                           ;main.c: 147: }else{
  1666  05F3  0008               	return
  1667  05F4                     l2424:	
  1668                           
  1669                           ;main.c: 148: if(ChargeStatus!=1){
  1670  05F4  0355               	decf	_ChargeStatus,w
  1671  05F5  1903               	btfsc	3,2
  1672  05F6  0008               	return
  1673                           
  1674                           ;main.c: 149: ChargeStatus=1;
  1675  05F7  01D5               	clrf	_ChargeStatus
  1676  05F8  0AD5               	incf	_ChargeStatus,f
  1677  05F9  0008               	return
  1678  05FA                     __end_of_CheckStatus:	
  1679                           
  1680                           	psect	text5
  1681  0386                     __ptext5:	
  1682 ;; *************** function _Inject *****************
  1683 ;; Defined at:
  1684 ;;		line 423 in file "main.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;		None               void
  1691 ;; Registers used:
  1692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1
  1698 ;;      Params:         0       0       0
  1699 ;;      Locals:         0       0       0
  1700 ;;      Temps:          0       2       0
  1701 ;;      Totals:         0       2       0
  1702 ;;Total ram usage:        2 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    9
  1705 ;; This function calls:
  1706 ;;		_B_LED_OFF
  1707 ;;		_B_LED_ON
  1708 ;;		_BatteryCheckVoltage
  1709 ;;		_StartBeepHigh
  1710 ;;		_StartBeepLow
  1711 ;;		_StopBeep
  1712 ;;		___ftge
  1713 ;;		___lwtoft
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function _Inject
  1721  0386                     _Inject:	
  1722                           
  1723                           ;main.c: 425: vBattery = BatteryCheckVoltage();
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _Inject: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1727  0386  2691               	fcall	_BatteryCheckVoltage
  1728  0387  0020               	movlb	0	; select bank0
  1729  0388  082D               	movf	?_BatteryCheckVoltage+1,w
  1730  0389  00D2               	movwf	_vBattery+1
  1731  038A  082C               	movf	?_BatteryCheckVoltage,w
  1732  038B  00D1               	movwf	_vBattery
  1733                           
  1734                           ;main.c: 427: if(vBattery > 0x03ff*0.31){
  1735  038C  3091               	movlw	145
  1736  038D  00B8               	movwf	___ftge@ff1
  1737  038E  309E               	movlw	158
  1738  038F  00B9               	movwf	___ftge@ff1+1
  1739  0390  3043               	movlw	67
  1740  0391  00BA               	movwf	___ftge@ff1+2
  1741  0392  0852               	movf	_vBattery+1,w
  1742  0393  00B5               	movwf	___lwtoft@c+1
  1743  0394  0851               	movf	_vBattery,w
  1744  0395  00B4               	movwf	___lwtoft@c
  1745  0396  267D               	fcall	___lwtoft
  1746  0397  0020               	movlb	0	; select bank0
  1747  0398  0834               	movf	?___lwtoft,w
  1748  0399  00BB               	movwf	___ftge@ff2
  1749  039A  0835               	movf	?___lwtoft+1,w
  1750  039B  00BC               	movwf	___ftge@ff2+1
  1751  039C  0836               	movf	?___lwtoft+2,w
  1752  039D  00BD               	movwf	___ftge@ff2+2
  1753  039E  24A2               	fcall	___ftge
  1754  039F  1803               	btfsc	3,0
  1755  03A0  2BB5               	goto	l2586
  1756                           
  1757                           ;main.c: 428: StartBeepHigh();
  1758  03A1  25FA               	fcall	_StartBeepHigh
  1759                           
  1760                           ;main.c: 429: B_LED_ON();
  1761  03A2  26EF               	fcall	_B_LED_ON
  1762                           
  1763                           ;main.c: 430: LATCbits.LATC4 = 1;
  1764  03A3  0022               	movlb	2	; select bank2
  1765  03A4  160E               	bsf	14,4	;volatile
  1766                           
  1767                           ;main.c: 432: _delay((unsigned long)((300)*(62500/4000000.0)));
  1768  03A5  3200               	nop2	;2 cycle nop
  1769  03A6  3200               	nop2	;2 cycle nop
  1770                           
  1771                           ;main.c: 434: LATCbits.LATC4 = 0;
  1772  03A7  0022               	movlb	2	; select bank2
  1773  03A8  120E               	bcf	14,4	;volatile
  1774                           
  1775                           ;main.c: 435: _delay((unsigned long)((1000)*(62500/4000.0)));
  1776  03A9  3015               	movlw	21
  1777  03AA  0020               	movlb	0	; select bank0
  1778  03AB  00C2               	movwf	??_Inject+1
  1779  03AC  3049               	movlw	73
  1780  03AD  00C1               	movwf	??_Inject
  1781  03AE                     u2807:	
  1782  03AE  0BC1               	decfsz	??_Inject,f
  1783  03AF  2BAE               	goto	u2807
  1784  03B0  0BC2               	decfsz	??_Inject+1,f
  1785  03B1  2BAE               	goto	u2807
  1786  03B2  0000               	nop
  1787                           
  1788                           ;main.c: 436: B_LED_OFF();
  1789  03B3  26F2               	fcall	_B_LED_OFF
  1790                           
  1791                           ;main.c: 437: }else{
  1792  03B4  2BCF               	goto	l242
  1793  03B5                     l2586:	
  1794                           
  1795                           ;main.c: 438: StartBeepLow();
  1796  03B5  25B9               	fcall	_StartBeepLow
  1797                           
  1798                           ;main.c: 439: _delay((unsigned long)((70)*(62500/4000.0)));
  1799  03B6  30DA               	movlw	218
  1800  03B7  0020               	movlb	0	; select bank0
  1801  03B8  00C1               	movwf	??_Inject
  1802  03B9                     u2817:	
  1803  03B9  3200               	nop2
  1804  03BA  0BC1               	decfsz	??_Inject,f
  1805  03BB  2BB9               	goto	u2817
  1806  03BC  3200               	nop2	;nop
  1807                           
  1808                           ;main.c: 440: StopBeep();
  1809  03BD  2667               	fcall	_StopBeep
  1810                           
  1811                           ;main.c: 441: _delay((unsigned long)((5)*(62500/4000.0)));
  1812  03BE  3019               	movlw	25
  1813  03BF  0020               	movlb	0	; select bank0
  1814  03C0  00C1               	movwf	??_Inject
  1815  03C1                     u2827:	
  1816  03C1  0BC1               	decfsz	??_Inject,f
  1817  03C2  2BC1               	goto	u2827
  1818  03C3  3200               	nop2	;nop
  1819                           
  1820                           ;main.c: 442: StartBeepLow();
  1821  03C4  25B9               	fcall	_StartBeepLow
  1822                           
  1823                           ;main.c: 443: _delay((unsigned long)((400)*(62500/4000.0)));
  1824  03C5  3009               	movlw	9
  1825  03C6  0020               	movlb	0	; select bank0
  1826  03C7  00C2               	movwf	??_Inject+1
  1827  03C8  301C               	movlw	28
  1828  03C9  00C1               	movwf	??_Inject
  1829  03CA                     u2837:	
  1830  03CA  0BC1               	decfsz	??_Inject,f
  1831  03CB  2BCA               	goto	u2837
  1832  03CC  0BC2               	decfsz	??_Inject+1,f
  1833  03CD  2BCA               	goto	u2837
  1834  03CE  0000               	nop
  1835  03CF                     l242:	
  1836                           
  1837                           ;main.c: 444: }
  1838                           ;main.c: 445: StopBeep();
  1839  03CF  2667               	fcall	_StopBeep
  1840  03D0  0008               	return
  1841  03D1                     __end_of_Inject:	
  1842                           
  1843                           	psect	text6
  1844  067D                     __ptext6:	
  1845 ;; *************** function ___lwtoft *****************
  1846 ;; Defined at:
  1847 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  c               2   20[BANK0 ] unsigned int 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  3   20[BANK0 ] float 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1
  1861 ;;      Params:         0       3       0
  1862 ;;      Locals:         0       0       0
  1863 ;;      Temps:          0       1       0
  1864 ;;      Totals:         0       4       0
  1865 ;;Total ram usage:        4 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    6
  1868 ;; This function calls:
  1869 ;;		___ftpack
  1870 ;; This function is called by:
  1871 ;;		_StatusDisplayADC
  1872 ;;		_Inject
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function ___lwtoft
  1878  067D                     ___lwtoft:	
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1882  067D  0020               	movlb	0	; select bank0
  1883  067E  0834               	movf	___lwtoft@c,w
  1884  067F  00AC               	movwf	___ftpack@arg
  1885  0680  0835               	movf	___lwtoft@c+1,w
  1886  0681  00AD               	movwf	___ftpack@arg+1
  1887  0682  01AE               	clrf	___ftpack@arg+2
  1888  0683  308E               	movlw	142
  1889  0684  00B7               	movwf	??___lwtoft
  1890  0685  0837               	movf	??___lwtoft,w
  1891  0686  00AF               	movwf	___ftpack@exp
  1892  0687  01B0               	clrf	___ftpack@sign
  1893  0688  22BD               	fcall	___ftpack
  1894  0689  0020               	movlb	0	; select bank0
  1895  068A  082C               	movf	?___ftpack,w
  1896  068B  00B4               	movwf	?___lwtoft
  1897  068C  082D               	movf	?___ftpack+1,w
  1898  068D  00B5               	movwf	?___lwtoft+1
  1899  068E  082E               	movf	?___ftpack+2,w
  1900  068F  00B6               	movwf	?___lwtoft+2
  1901  0690  0008               	return
  1902  0691                     __end_of___lwtoft:	
  1903                           
  1904                           	psect	text7
  1905  02BD                     __ptext7:	
  1906 ;; *************** function ___ftpack *****************
  1907 ;; Defined at:
  1908 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  arg             3   12[BANK0 ] unsigned um
  1911 ;;  exp             1   15[BANK0 ] unsigned char 
  1912 ;;  sign            1   16[BANK0 ] unsigned char 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  3   12[BANK0 ] float 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1
  1924 ;;      Params:         0       5       0
  1925 ;;      Locals:         0       0       0
  1926 ;;      Temps:          0       3       0
  1927 ;;      Totals:         0       8       0
  1928 ;;Total ram usage:        8 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    5
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		___lwtoft
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function ___ftpack
  1940  02BD                     ___ftpack:	
  1941                           
  1942                           ;incstack = 0
  1943                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1944  02BD  0020               	movlb	0	; select bank0
  1945  02BE  082F               	movf	___ftpack@exp,w
  1946  02BF  1903               	btfsc	3,2
  1947  02C0  2AC6               	goto	l2322
  1948  02C1  082E               	movf	___ftpack@arg+2,w
  1949  02C2  042D               	iorwf	___ftpack@arg+1,w
  1950  02C3  042C               	iorwf	___ftpack@arg,w
  1951  02C4  1D03               	skipz
  1952  02C5  2AD7               	goto	l2328
  1953  02C6                     l2322:	
  1954  02C6  3000               	movlw	0
  1955  02C7  00AC               	movwf	?___ftpack
  1956  02C8  3000               	movlw	0
  1957  02C9  00AD               	movwf	?___ftpack+1
  1958  02CA  3000               	movlw	0
  1959  02CB  00AE               	movwf	?___ftpack+2
  1960  02CC  0008               	return
  1961  02CD                     l2326:	
  1962  02CD  3001               	movlw	1
  1963  02CE  00B1               	movwf	??___ftpack
  1964  02CF  0831               	movf	??___ftpack,w
  1965  02D0  07AF               	addwf	___ftpack@exp,f
  1966  02D1  3001               	movlw	1
  1967  02D2                     u2215:	
  1968  02D2  36AE               	lsrf	___ftpack@arg+2,f
  1969  02D3  0CAD               	rrf	___ftpack@arg+1,f
  1970  02D4  0CAC               	rrf	___ftpack@arg,f
  1971  02D5  0B89               	decfsz	9,f
  1972  02D6  2AD2               	goto	u2215
  1973  02D7                     l2328:	
  1974  02D7  30FE               	movlw	254
  1975  02D8  052E               	andwf	___ftpack@arg+2,w
  1976  02D9  1903               	btfsc	3,2
  1977  02DA  2AF0               	goto	l515
  1978  02DB  2ACD               	goto	l2326
  1979  02DC                     l2330:	
  1980  02DC  3001               	movlw	1
  1981  02DD  00B1               	movwf	??___ftpack
  1982  02DE  0831               	movf	??___ftpack,w
  1983  02DF  07AF               	addwf	___ftpack@exp,f
  1984  02E0  3001               	movlw	1
  1985  02E1  07AC               	addwf	___ftpack@arg,f
  1986  02E2  3000               	movlw	0
  1987  02E3  1803               	skipnc
  1988  02E4  3001               	movlw	1
  1989  02E5  07AD               	addwf	___ftpack@arg+1,f
  1990  02E6  3000               	movlw	0
  1991  02E7  1803               	skipnc
  1992  02E8  3001               	movlw	1
  1993  02E9  07AE               	addwf	___ftpack@arg+2,f
  1994  02EA  3001               	movlw	1
  1995  02EB                     u2235:	
  1996  02EB  36AE               	lsrf	___ftpack@arg+2,f
  1997  02EC  0CAD               	rrf	___ftpack@arg+1,f
  1998  02ED  0CAC               	rrf	___ftpack@arg,f
  1999  02EE  0B89               	decfsz	9,f
  2000  02EF  2AEB               	goto	u2235
  2001  02F0                     l515:	
  2002  02F0  30FF               	movlw	255
  2003  02F1  052E               	andwf	___ftpack@arg+2,w
  2004  02F2  1903               	btfsc	3,2
  2005  02F3  2B01               	goto	l2338
  2006  02F4  2ADC               	goto	l2330
  2007  02F5                     l2340:	
  2008  02F5  3002               	movlw	2
  2009  02F6  022F               	subwf	___ftpack@exp,w
  2010  02F7  1C03               	btfss	3,0
  2011  02F8  2B03               	goto	l522
  2012  02F9  3001               	movlw	1
  2013  02FA  02AF               	subwf	___ftpack@exp,f
  2014  02FB  3001               	movlw	1
  2015  02FC                     u2255:	
  2016  02FC  35AC               	lslf	___ftpack@arg,f
  2017  02FD  0DAD               	rlf	___ftpack@arg+1,f
  2018  02FE  0DAE               	rlf	___ftpack@arg+2,f
  2019  02FF  0B89               	decfsz	9,f
  2020  0300  2AFC               	goto	u2255
  2021  0301                     l2338:	
  2022  0301  1FAD               	btfss	___ftpack@arg+1,7
  2023  0302  2AF5               	goto	l2340
  2024  0303                     l522:	
  2025  0303  182F               	btfsc	___ftpack@exp,0
  2026  0304  2B0B               	goto	l523
  2027  0305  30FF               	movlw	255
  2028  0306  05AC               	andwf	___ftpack@arg,f
  2029  0307  307F               	movlw	127
  2030  0308  05AD               	andwf	___ftpack@arg+1,f
  2031  0309  30FF               	movlw	255
  2032  030A  05AE               	andwf	___ftpack@arg+2,f
  2033  030B                     l523:	
  2034  030B  1003               	clrc
  2035  030C  0CAF               	rrf	___ftpack@exp,f
  2036  030D  082F               	movf	___ftpack@exp,w
  2037  030E  00B1               	movwf	??___ftpack
  2038  030F  01B2               	clrf	??___ftpack+1
  2039  0310  01B3               	clrf	??___ftpack+2
  2040  0311  3010               	movlw	16
  2041  0312                     u2295:	
  2042  0312  35B1               	lslf	??___ftpack,f
  2043  0313  0DB2               	rlf	??___ftpack+1,f
  2044  0314  0DB3               	rlf	??___ftpack+2,f
  2045  0315  0B89               	decfsz	9,f
  2046  0316  2B12               	goto	u2295
  2047  0317  0831               	movf	??___ftpack,w
  2048  0318  04AC               	iorwf	___ftpack@arg,f
  2049  0319  0832               	movf	??___ftpack+1,w
  2050  031A  04AD               	iorwf	___ftpack@arg+1,f
  2051  031B  0833               	movf	??___ftpack+2,w
  2052  031C  04AE               	iorwf	___ftpack@arg+2,f
  2053  031D  0830               	movf	___ftpack@sign,w
  2054  031E  1903               	btfsc	3,2
  2055  031F  0008               	return
  2056  0320  17AE               	bsf	___ftpack@arg+2,7
  2057  0321  0008               	return
  2058  0322                     __end_of___ftpack:	
  2059                           
  2060                           	psect	text8
  2061  04A2                     __ptext8:	
  2062 ;; *************** function ___ftge *****************
  2063 ;; Defined at:
  2064 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  ff1             3   24[BANK0 ] float 
  2067 ;;  ff2             3   27[BANK0 ] float 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;		None               void
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1
  2079 ;;      Params:         0       6       0
  2080 ;;      Locals:         0       0       0
  2081 ;;      Temps:          0       3       0
  2082 ;;      Totals:         0       9       0
  2083 ;;Total ram usage:        9 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    5
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_StatusDisplayADC
  2090 ;;		_Inject
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           
  2095                           ;psect for function ___ftge
  2096  04A2                     ___ftge:	
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2100  04A2  0020               	movlb	0	; select bank0
  2101  04A3  1FBA               	btfss	___ftge@ff1+2,7
  2102  04A4  2CB9               	goto	l2388
  2103  04A5  0938               	comf	___ftge@ff1,w
  2104  04A6  00BE               	movwf	??___ftge
  2105  04A7  0939               	comf	___ftge@ff1+1,w
  2106  04A8  00BF               	movwf	??___ftge+1
  2107  04A9  093A               	comf	___ftge@ff1+2,w
  2108  04AA  00C0               	movwf	??___ftge+2
  2109  04AB  0ABE               	incf	??___ftge,f
  2110  04AC  1903               	skipnz
  2111  04AD  0ABF               	incf	??___ftge+1,f
  2112  04AE  1903               	skipnz
  2113  04AF  0AC0               	incf	??___ftge+2,f
  2114  04B0  3000               	movlw	0
  2115  04B1  073E               	addwf	??___ftge,w
  2116  04B2  00B8               	movwf	___ftge@ff1
  2117  04B3  3000               	movlw	0
  2118  04B4  3D3F               	addwfc	??___ftge+1,w
  2119  04B5  00B9               	movwf	___ftge@ff1+1
  2120  04B6  3080               	movlw	128
  2121  04B7  3D40               	addwfc	??___ftge+2,w
  2122  04B8  00BA               	movwf	___ftge@ff1+2
  2123  04B9                     l2388:	
  2124  04B9  1FBD               	btfss	___ftge@ff2+2,7
  2125  04BA  2CCF               	goto	l2392
  2126  04BB  093B               	comf	___ftge@ff2,w
  2127  04BC  00BE               	movwf	??___ftge
  2128  04BD  093C               	comf	___ftge@ff2+1,w
  2129  04BE  00BF               	movwf	??___ftge+1
  2130  04BF  093D               	comf	___ftge@ff2+2,w
  2131  04C0  00C0               	movwf	??___ftge+2
  2132  04C1  0ABE               	incf	??___ftge,f
  2133  04C2  1903               	skipnz
  2134  04C3  0ABF               	incf	??___ftge+1,f
  2135  04C4  1903               	skipnz
  2136  04C5  0AC0               	incf	??___ftge+2,f
  2137  04C6  3000               	movlw	0
  2138  04C7  073E               	addwf	??___ftge,w
  2139  04C8  00BB               	movwf	___ftge@ff2
  2140  04C9  3000               	movlw	0
  2141  04CA  3D3F               	addwfc	??___ftge+1,w
  2142  04CB  00BC               	movwf	___ftge@ff2+1
  2143  04CC  3080               	movlw	128
  2144  04CD  3D40               	addwfc	??___ftge+2,w
  2145  04CE  00BD               	movwf	___ftge@ff2+2
  2146  04CF                     l2392:	
  2147  04CF  3080               	movlw	128
  2148  04D0  06BA               	xorwf	___ftge@ff1+2,f
  2149  04D1  3080               	movlw	128
  2150  04D2  06BD               	xorwf	___ftge@ff2+2,f
  2151  04D3  083D               	movf	___ftge@ff2+2,w
  2152  04D4  023A               	subwf	___ftge@ff1+2,w
  2153  04D5  1D03               	skipz
  2154  04D6  0008               	return
  2155  04D7  083C               	movf	___ftge@ff2+1,w
  2156  04D8  0239               	subwf	___ftge@ff1+1,w
  2157  04D9  1D03               	skipz
  2158  04DA  0008               	return
  2159  04DB  083B               	movf	___ftge@ff2,w
  2160  04DC  0238               	subwf	___ftge@ff1,w
  2161  04DD  0008               	return
  2162  04DE                     __end_of___ftge:	
  2163                           
  2164                           	psect	text9
  2165  0667                     __ptext9:	
  2166 ;; *************** function _StopBeep *****************
  2167 ;; Defined at:
  2168 ;;		line 407 in file "main.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;		None               void
  2175 ;; Registers used:
  2176 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMMON   BANK0   BANK1
  2182 ;;      Params:         0       0       0
  2183 ;;      Locals:         0       0       0
  2184 ;;      Temps:          0       0       0
  2185 ;;      Totals:         0       0       0
  2186 ;;Total ram usage:        0 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    8
  2189 ;; This function calls:
  2190 ;;		_SerialLED
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;;		_Inject
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function _StopBeep
  2199  0667                     _StopBeep:	
  2200                           
  2201                           ;main.c: 409: T2CONbits.TMR2ON = 0;
  2202                           
  2203                           ;incstack = 0
  2204                           ; Regs used in _StopBeep: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2205  0667  0020               	movlb	0	; select bank0
  2206  0668  111C               	bcf	28,2	;volatile
  2207                           
  2208                           ;main.c: 410: CCP1CON = 0x00;
  2209  0669  0025               	movlb	5	; select bank5
  2210  066A  0193               	clrf	19	;volatile
  2211                           
  2212                           ;main.c: 411: LATCbits.LATC5 = 0;
  2213  066B  0022               	movlb	2	; select bank2
  2214  066C  128E               	bcf	14,5	;volatile
  2215                           
  2216                           ;main.c: 412: SerialLED(0,0,0);
  2217  066D  0020               	movlb	0	; select bank0
  2218  066E  01B5               	clrf	SerialLED@g
  2219  066F  01B6               	clrf	SerialLED@b
  2220  0670  3000               	movlw	0
  2221  0671  251A               	fcall	_SerialLED
  2222                           
  2223                           ;main.c: 414: TMR1H = (-3);
  2224  0672  30FD               	movlw	253
  2225  0673  0020               	movlb	0	; select bank0
  2226  0674  0097               	movwf	23	;volatile
  2227                           
  2228                           ;main.c: 416: INTCONbits.GIE = 1;
  2229  0675  178B               	bsf	11,7	;volatile
  2230                           
  2231                           ;main.c: 417: T1CONbits.TMR1ON = 1;
  2232  0676  1418               	bsf	24,0	;volatile
  2233                           
  2234                           ;main.c: 418: BeepStatus = 0;
  2235  0677  01D4               	clrf	_BeepStatus
  2236                           
  2237                           ;main.c: 420: TMR1H = (-1*8000 >> 8);
  2238  0678  30E0               	movlw	224
  2239  0679  0097               	movwf	23	;volatile
  2240                           
  2241                           ;main.c: 421: TMR1L = (-1*8000 & 0x00ff);
  2242  067A  30C0               	movlw	192
  2243  067B  0096               	movwf	22	;volatile
  2244  067C  0008               	return
  2245  067D                     __end_of_StopBeep:	
  2246                           
  2247                           	psect	text10
  2248  05B9                     __ptext10:	
  2249 ;; *************** function _StartBeepLow *****************
  2250 ;; Defined at:
  2251 ;;		line 385 in file "main.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;		None               void
  2258 ;; Registers used:
  2259 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1
  2265 ;;      Params:         0       0       0
  2266 ;;      Locals:         0       0       0
  2267 ;;      Temps:          0       0       0
  2268 ;;      Totals:         0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    8
  2272 ;; This function calls:
  2273 ;;		_SerialLED
  2274 ;;		_delay_ms
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;;		_Inject
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _StartBeepLow
  2283  05B9                     _StartBeepLow:	
  2284                           
  2285                           ;main.c: 387: T1CONbits.TMR1ON = 0;
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _StartBeepLow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2289  05B9  0020               	movlb	0	; select bank0
  2290  05BA  1018               	bcf	24,0	;volatile
  2291                           
  2292                           ;main.c: 391: INTCONbits.GIE = 0;
  2293  05BB  138B               	bcf	11,7	;volatile
  2294                           
  2295                           ;main.c: 393: delay_ms(5);
  2296  05BC  3005               	movlw	5
  2297  05BD  00AC               	movwf	delay_ms@time
  2298  05BE  3000               	movlw	0
  2299  05BF  00AD               	movwf	delay_ms@time+1
  2300  05C0  264F               	fcall	_delay_ms
  2301                           
  2302                           ;main.c: 394: SerialLED(20,0,0);
  2303  05C1  0020               	movlb	0	; select bank0
  2304  05C2  01B5               	clrf	SerialLED@g
  2305  05C3  01B6               	clrf	SerialLED@b
  2306  05C4  3014               	movlw	20
  2307  05C5  251A               	fcall	_SerialLED
  2308                           
  2309                           ;main.c: 395: delay_ms(50);
  2310  05C6  3032               	movlw	50
  2311  05C7  0020               	movlb	0	; select bank0
  2312  05C8  00AC               	movwf	delay_ms@time
  2313  05C9  3000               	movlw	0
  2314  05CA  00AD               	movwf	delay_ms@time+1
  2315  05CB  264F               	fcall	_delay_ms
  2316                           
  2317                           ;main.c: 396: PR2 = 0xff;
  2318  05CC  30FF               	movlw	255
  2319  05CD  0020               	movlb	0	; select bank0
  2320  05CE  009B               	movwf	27	;volatile
  2321                           
  2322                           ;main.c: 397: CCP1CON = 0b00001100;
  2323  05CF  300C               	movlw	12
  2324  05D0  0025               	movlb	5	; select bank5
  2325  05D1  0093               	movwf	19	;volatile
  2326                           
  2327                           ;main.c: 398: CCP1CONbits.DC1B = (int)(0.5 * 4 * (0xff + 1)) & 0x03;
  2328  05D2  30CF               	movlw	-49
  2329  05D3  0593               	andwf	19,f	;volatile
  2330                           
  2331                           ;main.c: 399: CCPR1L = (int)(0.5 * 4 * (0xff + 1)) >> 2;
  2332  05D4  3080               	movlw	128
  2333  05D5  0091               	movwf	17	;volatile
  2334                           
  2335                           ;main.c: 400: T2CONbits.T2CKPS = 0;
  2336  05D6  30FC               	movlw	-4
  2337  05D7  0020               	movlb	0	; select bank0
  2338  05D8  059C               	andwf	28,f	;volatile
  2339                           
  2340                           ;main.c: 401: T2CONbits.TMR2ON = 1;
  2341  05D9  151C               	bsf	28,2	;volatile
  2342                           
  2343                           ;main.c: 403: BeepStatus = 1;
  2344  05DA  01D4               	clrf	_BeepStatus
  2345  05DB  0AD4               	incf	_BeepStatus,f
  2346  05DC  0008               	return
  2347  05DD                     __end_of_StartBeepLow:	
  2348                           
  2349                           	psect	text11
  2350  064F                     __ptext11:	
  2351 ;; *************** function _delay_ms *****************
  2352 ;; Defined at:
  2353 ;;		line 72 in file "main.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  time            2   12[BANK0 ] int 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;		None               void
  2360 ;; Registers used:
  2361 ;;		wreg
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1
  2367 ;;      Params:         0       2       0
  2368 ;;      Locals:         0       0       0
  2369 ;;      Temps:          0       1       0
  2370 ;;      Totals:         0       3       0
  2371 ;;Total ram usage:        3 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    5
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;;		_StartBeepLow
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _delay_ms
  2384  064F                     _delay_ms:	
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _delay_ms: [wreg]
  2388  064F  0020               	movlb	0	; select bank0
  2389  0650                     L2:	
  2390  0650  082D               	movf	delay_ms@time+1,w
  2391  0651  3A80               	xorlw	128
  2392  0652  00AE               	movwf	??_delay_ms
  2393  0653  3080               	movlw	128
  2394  0654  022E               	subwf	??_delay_ms,w
  2395  0655  1D03               	skipz
  2396  0656  2E59               	goto	u2315
  2397  0657  3001               	movlw	1
  2398  0658  022C               	subwf	delay_ms@time,w
  2399  0659                     u2315:	
  2400  0659  1C03               	btfss	3,0
  2401  065A  0008               	return
  2402                           
  2403                           ;main.c: 74: _delay((unsigned long)((1)*(62500/4000.0)));
  2404  065B  3004               	movlw	4
  2405  065C  0020               	movlb	0	; select bank0
  2406  065D  00AE               	movwf	??_delay_ms
  2407  065E                     u2847:	
  2408  065E  0BAE               	decfsz	??_delay_ms,f
  2409  065F  2E5E               	goto	u2847
  2410  0660  3200               	nop2	;nop
  2411  0661  30FF               	movlw	255
  2412  0662  0020               	movlb	0	; select bank0
  2413  0663  07AC               	addwf	delay_ms@time,f
  2414  0664  30FF               	movlw	255
  2415  0665  3DAD               	addwfc	delay_ms@time+1,f
  2416  0666  2E50               	goto	L2
  2417  0667                     __end_of_delay_ms:	
  2418                           
  2419                           	psect	text12
  2420  05FA                     __ptext12:	
  2421 ;; *************** function _StartBeepHigh *****************
  2422 ;; Defined at:
  2423 ;;		line 365 in file "main.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;		None               void
  2430 ;; Registers used:
  2431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1
  2437 ;;      Params:         0       0       0
  2438 ;;      Locals:         0       0       0
  2439 ;;      Temps:          0       1       0
  2440 ;;      Totals:         0       1       0
  2441 ;;Total ram usage:        1 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    8
  2444 ;; This function calls:
  2445 ;;		_SerialLED
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;;		_Inject
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           
  2453                           ;psect for function _StartBeepHigh
  2454  05FA                     _StartBeepHigh:	
  2455                           
  2456                           ;main.c: 367: T1CONbits.TMR1ON = 0;
  2457                           
  2458                           ;incstack = 0
  2459                           ; Regs used in _StartBeepHigh: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2460  05FA  0020               	movlb	0	; select bank0
  2461  05FB  1018               	bcf	24,0	;volatile
  2462                           
  2463                           ;main.c: 371: INTCONbits.GIE = 0;
  2464  05FC  138B               	bcf	11,7	;volatile
  2465                           
  2466                           ;main.c: 372: SerialLED(0,18,0);
  2467  05FD  3012               	movlw	18
  2468  05FE  00BA               	movwf	??_StartBeepHigh
  2469  05FF  083A               	movf	??_StartBeepHigh,w
  2470  0600  00B5               	movwf	SerialLED@g
  2471  0601  01B6               	clrf	SerialLED@b
  2472  0602  3000               	movlw	0
  2473  0603  251A               	fcall	_SerialLED
  2474                           
  2475                           ;main.c: 373: PR2 = 0x0c;
  2476  0604  300C               	movlw	12
  2477  0605  0020               	movlb	0	; select bank0
  2478  0606  009B               	movwf	27	;volatile
  2479                           
  2480                           ;main.c: 374: CCP1CON = 0b00001100;
  2481  0607  300C               	movlw	12
  2482  0608  0025               	movlb	5	; select bank5
  2483  0609  0093               	movwf	19	;volatile
  2484                           
  2485                           ;main.c: 375: CCP1CONbits.DC1B = (int)(0.5 * 4 * (0x0c + 1)) & 0x03;
  2486  060A  0813               	movf	19,w	;volatile
  2487  060B  39CF               	andlw	-49
  2488  060C  3820               	iorlw	32
  2489  060D  0093               	movwf	19	;volatile
  2490                           
  2491                           ;main.c: 376: CCPR1L = (int)(0.5 * 4 * (0x0c + 1)) >> 2;
  2492  060E  3006               	movlw	6
  2493  060F  0091               	movwf	17	;volatile
  2494                           
  2495                           ;main.c: 377: T2CONbits.T2CKPS = 0;
  2496  0610  30FC               	movlw	-4
  2497  0611  0020               	movlb	0	; select bank0
  2498  0612  059C               	andwf	28,f	;volatile
  2499                           
  2500                           ;main.c: 378: T2CONbits.TMR2ON = 1;
  2501  0613  151C               	bsf	28,2	;volatile
  2502                           
  2503                           ;main.c: 380: BeepStatus = 1;
  2504  0614  01D4               	clrf	_BeepStatus
  2505  0615  0AD4               	incf	_BeepStatus,f
  2506  0616  0008               	return
  2507  0617                     __end_of_StartBeepHigh:	
  2508                           
  2509                           	psect	text13
  2510  051A                     __ptext13:	
  2511 ;; *************** function _SerialLED *****************
  2512 ;; Defined at:
  2513 ;;		line 123 in file "main.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  r               1    wreg     unsigned char 
  2516 ;;  g               1   21[BANK0 ] unsigned char 
  2517 ;;  b               1   22[BANK0 ] unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  r               1   25[BANK0 ] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;		None               void
  2522 ;; Registers used:
  2523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1
  2529 ;;      Params:         0       2       0
  2530 ;;      Locals:         0       1       0
  2531 ;;      Temps:          0       2       0
  2532 ;;      Totals:         0       5       0
  2533 ;;Total ram usage:        5 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    7
  2536 ;; This function calls:
  2537 ;;		_SendLED
  2538 ;; This function is called by:
  2539 ;;		_StatusDisplay1
  2540 ;;		_StatusDisplayADC
  2541 ;;		_StartStatus
  2542 ;;		_main
  2543 ;;		_StartBeepHigh
  2544 ;;		_StartBeepLow
  2545 ;;		_StopBeep
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           
  2550                           ;psect for function _SerialLED
  2551  051A                     _SerialLED:	
  2552                           
  2553                           ;incstack = 0
  2554                           ; Regs used in _SerialLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2555                           ;SerialLED@r stored from wreg
  2556  051A  0020               	movlb	0	; select bank0
  2557  051B  00B9               	movwf	SerialLED@r
  2558                           
  2559                           ;main.c: 124: T1CONbits.TMR1ON = 0;
  2560  051C  1018               	bcf	24,0	;volatile
  2561                           
  2562                           ;main.c: 125: _delay((unsigned long)((1)*(62500/4000.0)));
  2563  051D  3004               	movlw	4
  2564  051E  00B7               	movwf	??_SerialLED
  2565  051F                     u2857:	
  2566  051F  0BB7               	decfsz	??_SerialLED,f
  2567  0520  2D1F               	goto	u2857
  2568  0521  3200               	nop2	;nop
  2569                           
  2570                           ;main.c: 126: OSCCONbits.IRCF = 0b1110;
  2571  0522  0021               	movlb	1	; select bank1
  2572  0523  0819               	movf	25,w	;volatile
  2573  0524  3987               	andlw	-121
  2574  0525  3870               	iorlw	112
  2575  0526  0099               	movwf	25	;volatile
  2576                           
  2577                           ;main.c: 127: _delay((unsigned long)((2000)*(62500/4000.0)));
  2578  0527  3029               	movlw	41
  2579  0528  0020               	movlb	0	; select bank0
  2580  0529  00B8               	movwf	??_SerialLED+1
  2581  052A  3094               	movlw	148
  2582  052B  00B7               	movwf	??_SerialLED
  2583  052C                     u2867:	
  2584  052C  0BB7               	decfsz	??_SerialLED,f
  2585  052D  2D2C               	goto	u2867
  2586  052E  0BB8               	decfsz	??_SerialLED+1,f
  2587  052F  2D2C               	goto	u2867
  2588  0530  0000               	nop
  2589                           
  2590                           ;main.c: 128: R[0]=r;
  2591  0531  0020               	movlb	0	; select bank0
  2592  0532  0839               	movf	SerialLED@r,w
  2593  0533  00B7               	movwf	??_SerialLED
  2594  0534  0837               	movf	??_SerialLED,w
  2595  0535  00D9               	movwf	_R
  2596                           
  2597                           ;main.c: 129: G[0]=g;
  2598  0536  0835               	movf	SerialLED@g,w
  2599  0537  00B7               	movwf	??_SerialLED
  2600  0538  0837               	movf	??_SerialLED,w
  2601  0539  00D6               	movwf	_G
  2602                           
  2603                           ;main.c: 130: B[0]=b;
  2604  053A  0836               	movf	SerialLED@b,w
  2605  053B  00B7               	movwf	??_SerialLED
  2606  053C  0837               	movf	??_SerialLED,w
  2607  053D  00D3               	movwf	_B
  2608                           
  2609                           ;main.c: 131: SendLED(0+1);
  2610  053E  3001               	movlw	1
  2611  053F  00AC               	movwf	SendLED@num
  2612  0540  3000               	movlw	0
  2613  0541  00AD               	movwf	SendLED@num+1
  2614  0542  216B               	fcall	_SendLED
  2615                           
  2616                           ;main.c: 132: OSCCONbits.IRCF = 0b0100;
  2617  0543  0021               	movlb	1	; select bank1
  2618  0544  0819               	movf	25,w	;volatile
  2619  0545  3987               	andlw	-121
  2620  0546  3820               	iorlw	32
  2621  0547  0099               	movwf	25	;volatile
  2622                           
  2623                           ;main.c: 133: _delay((unsigned long)((10)*(62500/4000.0)));
  2624  0548  3033               	movlw	51
  2625  0549  0020               	movlb	0	; select bank0
  2626  054A  00B7               	movwf	??_SerialLED
  2627  054B                     u2877:	
  2628  054B  0BB7               	decfsz	??_SerialLED,f
  2629  054C  2D4B               	goto	u2877
  2630  054D  3200               	nop2	;nop
  2631                           
  2632                           ;main.c: 134: T1CONbits.TMR1ON = 1;
  2633  054E  0020               	movlb	0	; select bank0
  2634  054F  1418               	bsf	24,0	;volatile
  2635  0550  0008               	return
  2636  0551                     __end_of_SerialLED:	
  2637                           
  2638                           	psect	text14
  2639  016B                     __ptext14:	
  2640 ;; *************** function _SendLED *****************
  2641 ;; Defined at:
  2642 ;;		line 98 in file "main.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  num             2   12[BANK0 ] int 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  comp            2   19[BANK0 ] int 
  2647 ;;  loop8           2   17[BANK0 ] int 
  2648 ;;  loopNum         2   15[BANK0 ] int 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;		None               void
  2651 ;; Registers used:
  2652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1
  2658 ;;      Params:         0       2       0
  2659 ;;      Locals:         0       6       0
  2660 ;;      Temps:          0       1       0
  2661 ;;      Totals:         0       9       0
  2662 ;;Total ram usage:        9 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    6
  2665 ;; This function calls:
  2666 ;;		_Data0
  2667 ;;		_Data1
  2668 ;; This function is called by:
  2669 ;;		_SerialLED
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _SendLED
  2675  016B                     _SendLED:	
  2676                           
  2677                           ;main.c: 99: int loop8,loopNum;
  2678                           ;main.c: 100: int comp;
  2679                           ;main.c: 101: for(loopNum=0;loopNum<num;loopNum++){
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _SendLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2683  016B  0020               	movlb	0	; select bank0
  2684  016C  01AF               	clrf	SendLED@loopNum
  2685  016D  01B0               	clrf	SendLED@loopNum+1
  2686  016E                     l145:	
  2687  016E  0830               	movf	SendLED@loopNum+1,w
  2688  016F  3A80               	xorlw	128
  2689  0170  00AE               	movwf	??_SendLED
  2690  0171  082D               	movf	SendLED@num+1,w
  2691  0172  3A80               	xorlw	128
  2692  0173  022E               	subwf	??_SendLED,w
  2693  0174  1D03               	skipz
  2694  0175  2978               	goto	u2185
  2695  0176  082C               	movf	SendLED@num,w
  2696  0177  022F               	subwf	SendLED@loopNum,w
  2697  0178                     u2185:	
  2698  0178  1803               	btfsc	3,0
  2699  0179  2A13               	goto	l2316
  2700                           
  2701                           ;main.c: 102: comp=128;
  2702  017A  3080               	movlw	128
  2703  017B  0020               	movlb	0	; select bank0
  2704  017C  00B3               	movwf	SendLED@comp
  2705  017D  3000               	movlw	0
  2706  017E  00B4               	movwf	SendLED@comp+1
  2707                           
  2708                           ;main.c: 103: for(loop8=0;loop8<8;loop8++){
  2709  017F  01B1               	clrf	SendLED@loop8
  2710  0180  01B2               	clrf	SendLED@loop8+1
  2711  0181  0832               	movf	SendLED@loop8+1,w
  2712  0182  3A80               	xorlw	128
  2713  0183  00AE               	movwf	??_SendLED
  2714  0184  3080               	movlw	128
  2715  0185  022E               	subwf	??_SendLED,w
  2716  0186  3008               	movlw	8
  2717  0187  1903               	btfsc	3,2
  2718  0188  0231               	subwf	SendLED@loop8,w
  2719  0189  1803               	btfsc	3,0
  2720  018A  29AB               	goto	l2274
  2721  018B                     l2262:	
  2722                           
  2723                           ;main.c: 104: if(comp&G[loopNum]){Data1();}else{Data0();}
  2724  018B  0020               	movlb	0	; select bank0
  2725  018C  082F               	movf	SendLED@loopNum,w
  2726  018D  3E56               	addlw	(low (_G| 0))& (0+255)
  2727  018E  0086               	movwf	6
  2728  018F  0187               	clrf	7
  2729  0190  0801               	movf	1,w
  2730  0191  0533               	andwf	SendLED@comp,w
  2731  0192  1903               	btfsc	3,2
  2732  0193  2996               	goto	l2266
  2733  0194  26C9               	fcall	_Data1
  2734  0195  2997               	goto	l2268
  2735  0196                     l2266:	
  2736  0196  26E3               	fcall	_Data0
  2737  0197                     l2268:	
  2738                           
  2739                           ;main.c: 105: comp = comp>>1;
  2740  0197  0020               	movlb	0	; select bank0
  2741  0198  0D34               	rlf	SendLED@comp+1,w
  2742  0199  0C34               	rrf	SendLED@comp+1,w
  2743  019A  00B4               	movwf	SendLED@comp+1
  2744  019B  0C33               	rrf	SendLED@comp,w
  2745  019C  00B3               	movwf	SendLED@comp
  2746  019D  3001               	movlw	1
  2747  019E  07B1               	addwf	SendLED@loop8,f
  2748  019F  3000               	movlw	0
  2749  01A0  3DB2               	addwfc	SendLED@loop8+1,f
  2750  01A1  0832               	movf	SendLED@loop8+1,w
  2751  01A2  3A80               	xorlw	128
  2752  01A3  00AE               	movwf	??_SendLED
  2753  01A4  3080               	movlw	128
  2754  01A5  022E               	subwf	??_SendLED,w
  2755  01A6  3008               	movlw	8
  2756  01A7  1903               	btfsc	3,2
  2757  01A8  0231               	subwf	SendLED@loop8,w
  2758  01A9  1C03               	skipc
  2759  01AA  298B               	goto	l2262
  2760  01AB                     l2274:	
  2761                           
  2762                           ;main.c: 106: }
  2763                           ;main.c: 107: comp=128;
  2764  01AB  3080               	movlw	128
  2765  01AC  0020               	movlb	0	; select bank0
  2766  01AD  00B3               	movwf	SendLED@comp
  2767  01AE  3000               	movlw	0
  2768  01AF  00B4               	movwf	SendLED@comp+1
  2769                           
  2770                           ;main.c: 108: for(loop8=0;loop8<8;loop8++){
  2771  01B0  01B1               	clrf	SendLED@loop8
  2772  01B1  01B2               	clrf	SendLED@loop8+1
  2773  01B2  0832               	movf	SendLED@loop8+1,w
  2774  01B3  3A80               	xorlw	128
  2775  01B4  00AE               	movwf	??_SendLED
  2776  01B5  3080               	movlw	128
  2777  01B6  022E               	subwf	??_SendLED,w
  2778  01B7  3008               	movlw	8
  2779  01B8  1903               	btfsc	3,2
  2780  01B9  0231               	subwf	SendLED@loop8,w
  2781  01BA  1803               	btfsc	3,0
  2782  01BB  29DC               	goto	l2294
  2783  01BC                     l2282:	
  2784                           
  2785                           ;main.c: 109: if(comp&R[loopNum]){Data1();}else{Data0();}
  2786  01BC  0020               	movlb	0	; select bank0
  2787  01BD  082F               	movf	SendLED@loopNum,w
  2788  01BE  3E59               	addlw	(low (_R| 0))& (0+255)
  2789  01BF  0086               	movwf	6
  2790  01C0  0187               	clrf	7
  2791  01C1  0801               	movf	1,w
  2792  01C2  0533               	andwf	SendLED@comp,w
  2793  01C3  1903               	btfsc	3,2
  2794  01C4  29C7               	goto	l2286
  2795  01C5  26C9               	fcall	_Data1
  2796  01C6  29C8               	goto	l2288
  2797  01C7                     l2286:	
  2798  01C7  26E3               	fcall	_Data0
  2799  01C8                     l2288:	
  2800                           
  2801                           ;main.c: 110: comp = comp>>1;
  2802  01C8  0020               	movlb	0	; select bank0
  2803  01C9  0D34               	rlf	SendLED@comp+1,w
  2804  01CA  0C34               	rrf	SendLED@comp+1,w
  2805  01CB  00B4               	movwf	SendLED@comp+1
  2806  01CC  0C33               	rrf	SendLED@comp,w
  2807  01CD  00B3               	movwf	SendLED@comp
  2808  01CE  3001               	movlw	1
  2809  01CF  07B1               	addwf	SendLED@loop8,f
  2810  01D0  3000               	movlw	0
  2811  01D1  3DB2               	addwfc	SendLED@loop8+1,f
  2812  01D2  0832               	movf	SendLED@loop8+1,w
  2813  01D3  3A80               	xorlw	128
  2814  01D4  00AE               	movwf	??_SendLED
  2815  01D5  3080               	movlw	128
  2816  01D6  022E               	subwf	??_SendLED,w
  2817  01D7  3008               	movlw	8
  2818  01D8  1903               	btfsc	3,2
  2819  01D9  0231               	subwf	SendLED@loop8,w
  2820  01DA  1C03               	skipc
  2821  01DB  29BC               	goto	l2282
  2822  01DC                     l2294:	
  2823                           
  2824                           ;main.c: 111: }
  2825                           ;main.c: 112: comp=128;
  2826  01DC  3080               	movlw	128
  2827  01DD  0020               	movlb	0	; select bank0
  2828  01DE  00B3               	movwf	SendLED@comp
  2829  01DF  3000               	movlw	0
  2830  01E0  00B4               	movwf	SendLED@comp+1
  2831                           
  2832                           ;main.c: 113: for(loop8=0;loop8<8;loop8++){
  2833  01E1  01B1               	clrf	SendLED@loop8
  2834  01E2  01B2               	clrf	SendLED@loop8+1
  2835  01E3  0832               	movf	SendLED@loop8+1,w
  2836  01E4  3A80               	xorlw	128
  2837  01E5  00AE               	movwf	??_SendLED
  2838  01E6  3080               	movlw	128
  2839  01E7  022E               	subwf	??_SendLED,w
  2840  01E8  3008               	movlw	8
  2841  01E9  1903               	btfsc	3,2
  2842  01EA  0231               	subwf	SendLED@loop8,w
  2843  01EB  1803               	btfsc	3,0
  2844  01EC  2A0D               	goto	l2314
  2845  01ED                     l2302:	
  2846                           
  2847                           ;main.c: 114: if(comp&B[loopNum]){Data1();}else{Data0();}
  2848  01ED  0020               	movlb	0	; select bank0
  2849  01EE  082F               	movf	SendLED@loopNum,w
  2850  01EF  3E53               	addlw	(low (_B| 0))& (0+255)
  2851  01F0  0086               	movwf	6
  2852  01F1  0187               	clrf	7
  2853  01F2  0801               	movf	1,w
  2854  01F3  0533               	andwf	SendLED@comp,w
  2855  01F4  1903               	btfsc	3,2
  2856  01F5  29F8               	goto	l2306
  2857  01F6  26C9               	fcall	_Data1
  2858  01F7  29F9               	goto	l2308
  2859  01F8                     l2306:	
  2860  01F8  26E3               	fcall	_Data0
  2861  01F9                     l2308:	
  2862                           
  2863                           ;main.c: 115: comp = comp>>1;
  2864  01F9  0020               	movlb	0	; select bank0
  2865  01FA  0D34               	rlf	SendLED@comp+1,w
  2866  01FB  0C34               	rrf	SendLED@comp+1,w
  2867  01FC  00B4               	movwf	SendLED@comp+1
  2868  01FD  0C33               	rrf	SendLED@comp,w
  2869  01FE  00B3               	movwf	SendLED@comp
  2870  01FF  3001               	movlw	1
  2871  0200  07B1               	addwf	SendLED@loop8,f
  2872  0201  3000               	movlw	0
  2873  0202  3DB2               	addwfc	SendLED@loop8+1,f
  2874  0203  0832               	movf	SendLED@loop8+1,w
  2875  0204  3A80               	xorlw	128
  2876  0205  00AE               	movwf	??_SendLED
  2877  0206  3080               	movlw	128
  2878  0207  022E               	subwf	??_SendLED,w
  2879  0208  3008               	movlw	8
  2880  0209  1903               	btfsc	3,2
  2881  020A  0231               	subwf	SendLED@loop8,w
  2882  020B  1C03               	skipc
  2883  020C  29ED               	goto	l2302
  2884  020D                     l2314:	
  2885  020D  3001               	movlw	1
  2886  020E  0020               	movlb	0	; select bank0
  2887  020F  07AF               	addwf	SendLED@loopNum,f
  2888  0210  3000               	movlw	0
  2889  0211  3DB0               	addwfc	SendLED@loopNum+1,f
  2890  0212  296E               	goto	l145
  2891  0213                     l2316:	
  2892                           
  2893                           ;main.c: 116: }
  2894                           ;main.c: 118: }
  2895                           ;main.c: 119: _delay((unsigned long)((10)*(62500/4000.0)));
  2896  0213  3033               	movlw	51
  2897  0214  0020               	movlb	0	; select bank0
  2898  0215  00AE               	movwf	??_SendLED
  2899  0216                     u2887:	
  2900  0216  0BAE               	decfsz	??_SendLED,f
  2901  0217  2A16               	goto	u2887
  2902  0218  3200               	nop2	;nop
  2903  0219  0008               	return
  2904  021A                     __end_of_SendLED:	
  2905                           
  2906                           	psect	text15
  2907  06C9                     __ptext15:	
  2908 ;; *************** function _Data1 *****************
  2909 ;; Defined at:
  2910 ;;		line 82 in file "main.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;		None               void
  2917 ;; Registers used:
  2918 ;;		None
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1
  2924 ;;      Params:         0       0       0
  2925 ;;      Locals:         0       0       0
  2926 ;;      Temps:          0       0       0
  2927 ;;      Totals:         0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    5
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_SendLED
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _Data1
  2940  06C9                     _Data1:	
  2941                           
  2942                           ;main.c: 83: LATAbits.LATA1=1;
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in _Data1: []
  2946  06C9  0022               	movlb	2	; select bank2
  2947  06CA  148C               	bsf	12,1	;volatile
  2948  06CB  0000               	nop	;# 
  2949  06CC  0000               	nop	;# 
  2950  06CD  0000               	nop	;# 
  2951  06CE  0000               	nop	;# 
  2952  06CF  0000               	nop	;# 
  2953                           
  2954                           ;main.c: 89: LATAbits.LATA1=0;
  2955  06D0  0022               	movlb	2	; select bank2
  2956  06D1  108C               	bcf	12,1	;volatile
  2957  06D2  0008               	return
  2958  06D3                     __end_of_Data1:	
  2959                           
  2960                           	psect	text16
  2961  06E3                     __ptext16:	
  2962 ;; *************** function _Data0 *****************
  2963 ;; Defined at:
  2964 ;;		line 92 in file "main.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;		None               void
  2971 ;; Registers used:
  2972 ;;		None
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1
  2978 ;;      Params:         0       0       0
  2979 ;;      Locals:         0       0       0
  2980 ;;      Temps:          0       0       0
  2981 ;;      Totals:         0       0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    5
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_SendLED
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           
  2993                           ;psect for function _Data0
  2994  06E3                     _Data0:	
  2995                           
  2996                           ;main.c: 93: LATAbits.LATA1=1;
  2997                           
  2998                           ;incstack = 0
  2999                           ; Regs used in _Data0: []
  3000  06E3  0022               	movlb	2	; select bank2
  3001  06E4  148C               	bsf	12,1	;volatile
  3002  06E5  0000               	nop	;# 
  3003                           
  3004                           ;main.c: 95: LATAbits.LATA1=0;
  3005  06E6  0022               	movlb	2	; select bank2
  3006  06E7  108C               	bcf	12,1	;volatile
  3007  06E8  0008               	return
  3008  06E9                     __end_of_Data0:	
  3009                           
  3010                           	psect	text17
  3011  0691                     __ptext17:	
  3012 ;; *************** function _BatteryCheckVoltage *****************
  3013 ;; Defined at:
  3014 ;;		line 449 in file "main.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  i               2    0        unsigned int 
  3019 ;;  thresh          2    0        unsigned int 
  3020 ;;  ad2             2    0        unsigned int 
  3021 ;;  ad1             2    0        unsigned int 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2   12[BANK0 ] unsigned int 
  3024 ;; Registers used:
  3025 ;;		wreg
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1
  3031 ;;      Params:         0       2       0
  3032 ;;      Locals:         0       0       0
  3033 ;;      Temps:          0       0       0
  3034 ;;      Totals:         0       2       0
  3035 ;;Total ram usage:        2 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    5
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_StatusDisplayADC
  3042 ;;		_Inject
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _BatteryCheckVoltage
  3048  0691                     _BatteryCheckVoltage:	
  3049                           
  3050                           ;main.c: 451: unsigned int ad1, ad2, thresh, i;
  3051                           ;main.c: 454: ADCON0 = 0b00010101;
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in _BatteryCheckVoltage: [wreg]
  3055  0691  3015               	movlw	21
  3056  0692  0021               	movlb	1	; select bank1
  3057  0693  009D               	movwf	29	;volatile
  3058                           
  3059                           ;main.c: 457: ADCON0 = 0b00010111;
  3060  0694  3017               	movlw	23
  3061  0695  009D               	movwf	29	;volatile
  3062  0696                     l246:	
  3063                           ;main.c: 460: while(ADCON0 & 0x02);
  3064                           
  3065  0696  189D               	btfsc	29,1	;volatile
  3066  0697  2E96               	goto	l246
  3067                           
  3068                           ;main.c: 462: AdcRes = ((unsigned int)ADRESH << 8) | (unsigned int)ADRESL;
  3069  0698  081C               	movf	28,w	;volatile
  3070  0699  0020               	movlb	0	; select bank0
  3071  069A  00CA               	movwf	_AdcRes+1
  3072  069B  0021               	movlb	1	; select bank1
  3073  069C  081B               	movf	27,w	;volatile
  3074  069D  0020               	movlb	0	; select bank0
  3075  069E  00C9               	movwf	_AdcRes
  3076                           
  3077                           ;main.c: 464: return AdcRes;
  3078  069F  084A               	movf	_AdcRes+1,w
  3079  06A0  00AD               	movwf	?_BatteryCheckVoltage+1
  3080  06A1  0849               	movf	_AdcRes,w
  3081  06A2  00AC               	movwf	?_BatteryCheckVoltage
  3082  06A3  0008               	return
  3083  06A4                     __end_of_BatteryCheckVoltage:	
  3084                           
  3085                           	psect	text18
  3086  06EF                     __ptext18:	
  3087 ;; *************** function _B_LED_ON *****************
  3088 ;; Defined at:
  3089 ;;		line 55 in file "main.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;		None               void
  3096 ;; Registers used:
  3097 ;;		None
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1
  3103 ;;      Params:         0       0       0
  3104 ;;      Locals:         0       0       0
  3105 ;;      Temps:          0       0       0
  3106 ;;      Totals:         0       0       0
  3107 ;;Total ram usage:        0 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    5
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_Inject
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _B_LED_ON
  3119  06EF                     _B_LED_ON:	
  3120                           
  3121                           ;incstack = 0
  3122                           ; Regs used in _B_LED_ON: []
  3123  06EF  0022               	movlb	2	; select bank2
  3124  06F0  140C               	bsf	12,0	;volatile
  3125  06F1  0008               	return
  3126  06F2                     __end_of_B_LED_ON:	
  3127                           
  3128                           	psect	text19
  3129  06F2                     __ptext19:	
  3130 ;; *************** function _B_LED_OFF *****************
  3131 ;; Defined at:
  3132 ;;		line 56 in file "main.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;		None               void
  3139 ;; Registers used:
  3140 ;;		None
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1
  3146 ;;      Params:         0       0       0
  3147 ;;      Locals:         0       0       0
  3148 ;;      Temps:          0       0       0
  3149 ;;      Totals:         0       0       0
  3150 ;;Total ram usage:        0 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    5
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_Inject
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           
  3161                           ;psect for function _B_LED_OFF
  3162  06F2                     _B_LED_OFF:	
  3163                           
  3164                           ;incstack = 0
  3165                           ; Regs used in _B_LED_OFF: []
  3166  06F2  0022               	movlb	2	; select bank2
  3167  06F3  100C               	bcf	12,0	;volatile
  3168  06F4  0008               	return
  3169  06F5                     __end_of_B_LED_OFF:	
  3170                           
  3171                           	psect	text20
  3172  0586                     __ptext20:	
  3173 ;; *************** function _CheckVoltage *****************
  3174 ;; Defined at:
  3175 ;;		line 466 in file "main.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  thresh          2   14[BANK0 ] unsigned int 
  3180 ;;  ad2             2   12[BANK0 ] unsigned int 
  3181 ;;  i               2    0        unsigned int 
  3182 ;;  ad1             2    0        unsigned int 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      unsigned char 
  3185 ;; Registers used:
  3186 ;;		wreg
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1
  3192 ;;      Params:         0       0       0
  3193 ;;      Locals:         0       4       0
  3194 ;;      Temps:          0       0       0
  3195 ;;      Totals:         0       4       0
  3196 ;;Total ram usage:        4 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    5
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           
  3207                           ;psect for function _CheckVoltage
  3208  0586                     _CheckVoltage:	
  3209                           
  3210                           ;main.c: 468: unsigned int ad1, ad2, thresh, i;
  3211                           ;main.c: 471: ADCON0 = 0b00010101;
  3212                           
  3213                           ;incstack = 0
  3214                           ; Regs used in _CheckVoltage: [wreg]
  3215  0586  3015               	movlw	21
  3216  0587  0021               	movlb	1	; select bank1
  3217  0588  009D               	movwf	29	;volatile
  3218                           
  3219                           ;main.c: 473: LATCbits.LATC3 = 1;
  3220  0589  0022               	movlb	2	; select bank2
  3221  058A  158E               	bsf	14,3	;volatile
  3222                           
  3223                           ;main.c: 474: _delay((unsigned long)((100)*(62500/4000000.0)));
  3224  058B  0000               	nop
  3225                           
  3226                           ;main.c: 475: ADCON0 = 0b00011011;
  3227  058C  301B               	movlw	27
  3228  058D  0021               	movlb	1	; select bank1
  3229  058E  009D               	movwf	29	;volatile
  3230  058F                     l252:	
  3231                           ;main.c: 476: while(ADCON0 & 0x02);
  3232                           
  3233  058F  189D               	btfsc	29,1	;volatile
  3234  0590  2D8F               	goto	l252
  3235                           
  3236                           ;main.c: 478: ad2 = ((unsigned int)ADRESH << 8) | (unsigned int)ADRESL;
  3237  0591  081C               	movf	28,w	;volatile
  3238  0592  0020               	movlb	0	; select bank0
  3239  0593  00AD               	movwf	CheckVoltage@ad2+1
  3240  0594  0021               	movlb	1	; select bank1
  3241  0595  081B               	movf	27,w	;volatile
  3242  0596  0020               	movlb	0	; select bank0
  3243  0597  00AC               	movwf	CheckVoltage@ad2
  3244                           
  3245                           ;main.c: 480: LATCbits.LATC3 = 0;
  3246  0598  0022               	movlb	2	; select bank2
  3247  0599  118E               	bcf	14,3	;volatile
  3248                           
  3249                           ;main.c: 483: thresh = (unsigned int)(0x3ff * 100.0 / 102.0 * 0.8);
  3250  059A  3022               	movlw	34
  3251  059B  0020               	movlb	0	; select bank0
  3252  059C  00AE               	movwf	CheckVoltage@thresh
  3253  059D  3003               	movlw	3
  3254  059E  00AF               	movwf	CheckVoltage@thresh+1
  3255                           
  3256                           ;main.c: 485: if(ad2 < thresh)
  3257  059F  082F               	movf	CheckVoltage@thresh+1,w
  3258  05A0  022D               	subwf	CheckVoltage@ad2+1,w
  3259  05A1  1D03               	skipz
  3260  05A2  2DA5               	goto	u2545
  3261  05A3  082E               	movf	CheckVoltage@thresh,w
  3262  05A4  022C               	subwf	CheckVoltage@ad2,w
  3263  05A5                     u2545:	
  3264  05A5  1803               	skipnc
  3265  05A6  2DA9               	goto	l2558
  3266                           
  3267                           ;main.c: 486: {
  3268                           ;main.c: 487: return 1;
  3269  05A7  3001               	movlw	1
  3270  05A8  0008               	return
  3271  05A9                     l2558:	
  3272                           
  3273                           ;main.c: 488: }
  3274                           ;main.c: 491: thresh = (unsigned int)1013;
  3275  05A9  30F5               	movlw	245
  3276  05AA  00AE               	movwf	CheckVoltage@thresh
  3277  05AB  3003               	movlw	3
  3278  05AC  00AF               	movwf	CheckVoltage@thresh+1
  3279                           
  3280                           ;main.c: 493: if(ad2 > thresh)
  3281  05AD  082D               	movf	CheckVoltage@ad2+1,w
  3282  05AE  022F               	subwf	CheckVoltage@thresh+1,w
  3283  05AF  1D03               	skipz
  3284  05B0  2DB3               	goto	u2555
  3285  05B1  082C               	movf	CheckVoltage@ad2,w
  3286  05B2  022E               	subwf	CheckVoltage@thresh,w
  3287  05B3                     u2555:	
  3288  05B3  1803               	skipnc
  3289  05B4  2DB7               	goto	l2564
  3290                           
  3291                           ;main.c: 494: {
  3292                           ;main.c: 495: return 2;
  3293  05B5  3002               	movlw	2
  3294  05B6  0008               	return
  3295  05B7                     l2564:	
  3296                           
  3297                           ;main.c: 496: }
  3298                           ;main.c: 497: return 0;
  3299  05B7  3000               	movlw	0
  3300  05B8  0008               	return
  3301  05B9                     __end_of_CheckVoltage:	
  3302                           
  3303                           	psect	intentry
  3304  0004                     __pintentry:	
  3305 ;; *************** function _isr *****************
  3306 ;; Defined at:
  3307 ;;		line 500 in file "main.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;		None               void
  3314 ;; Registers used:
  3315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1
  3321 ;;      Params:         0       0       0
  3322 ;;      Locals:         0       0       0
  3323 ;;      Temps:          0       2       0
  3324 ;;      Totals:         0       2       0
  3325 ;;Total ram usage:        2 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    4
  3328 ;; This function calls:
  3329 ;;		i1_CheckStatus
  3330 ;;		i1_SerialLED
  3331 ;;		i1_StatusDisplayADC
  3332 ;; This function is called by:
  3333 ;;		Interrupt level 1
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337  0004                     _isr:	
  3338                           
  3339                           ;incstack = 0
  3340                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3341  0004  3180               	pagesel	$
  3342  0005  0020               	movlb	0	; select bank0
  3343  0006  087F               	movf	127,w
  3344  0007  00AB               	movwf	??_isr+1
  3345                           
  3346                           ;main.c: 501: if(IOCAFbits.IOCAF5 != 1){
  3347  0008  0027               	movlb	7	; select bank7
  3348  0009  1A93               	btfsc	19,5	;volatile
  3349  000A  2844               	goto	i1l260
  3350                           
  3351                           ;main.c: 502: CheckStatus();
  3352  000B  2617               	fcall	i1_CheckStatus
  3353                           
  3354                           ;main.c: 503: if(BeepStatus!=1){
  3355  000C  0020               	movlb	0	; select bank0
  3356  000D  0354               	decf	_BeepStatus,w
  3357  000E  1D03               	btfss	3,2
  3358                           
  3359                           ;main.c: 504: if(PIR1bits.TMR1IF == 1) {
  3360  000F  1C11               	btfss	17,0	;volatile
  3361  0010  2841               	goto	i1l2242
  3362                           
  3363                           ;main.c: 505: if(ChargeStatus == 2){
  3364  0011  3002               	movlw	2
  3365  0012  0655               	xorwf	_ChargeStatus,w
  3366  0013  1D03               	btfss	3,2
  3367  0014  2819               	goto	i1l2214
  3368                           
  3369                           ;main.c: 506: SerialLED(20,0,0);
  3370  0015  01F9               	clrf	i1SerialLED@g
  3371  0016  01FA               	clrf	i1SerialLED@b
  3372  0017  3014               	movlw	20
  3373  0018  2824               	goto	L3
  3374  0019                     i1l2214:	
  3375                           ;main.c: 507: }else if(ChargeStatus == 3){
  3376                           
  3377  0019  3003               	movlw	3
  3378  001A  0020               	movlb	0	; select bank0
  3379  001B  0655               	xorwf	_ChargeStatus,w
  3380  001C  1D03               	btfss	3,2
  3381  001D  2825               	goto	i1l2218
  3382                           
  3383                           ;main.c: 508: SerialLED(0,0,25);
  3384  001E  01F9               	clrf	i1SerialLED@g
  3385  001F  3019               	movlw	25
  3386  0020  00AA               	movwf	??_isr
  3387  0021  082A               	movf	??_isr,w
  3388  0022  00FA               	movwf	i1SerialLED@b
  3389  0023  3000               	movlw	0
  3390  0024                     L3:	
  3391  0024  2551               	fcall	i1_SerialLED
  3392  0025                     i1l2218:	
  3393                           
  3394                           ;main.c: 509: }
  3395                           ;main.c: 510: TMR1H = (-2000>>8);
  3396  0025  30F8               	movlw	248
  3397  0026  0020               	movlb	0	; select bank0
  3398  0027  0097               	movwf	23	;volatile
  3399                           
  3400                           ;main.c: 511: TMR1L = (-2000 & 0x00ff);
  3401  0028  3030               	movlw	48
  3402  0029  0096               	movwf	22	;volatile
  3403                           
  3404                           ;main.c: 512: if(ChargeStatus == 1){
  3405  002A  0355               	decf	_ChargeStatus,w
  3406  002B  1D03               	btfss	3,2
  3407  002C  2841               	goto	i1l2242
  3408                           
  3409                           ;main.c: 513: if(fLED == 0){
  3410  002D  085E               	movf	_fLED,w
  3411  002E  1D03               	btfss	3,2
  3412  002F  2838               	goto	i1l2234
  3413                           
  3414                           ;main.c: 514: fLED = 1;
  3415  0030  01DE               	clrf	_fLED
  3416  0031  0ADE               	incf	_fLED,f
  3417                           
  3418                           ;main.c: 515: StatusDisplayADC();
  3419  0032  241A               	fcall	i1_StatusDisplayADC
  3420                           
  3421                           ;main.c: 527: TMR1H = (-1);
  3422  0033  30FF               	movlw	255
  3423  0034  0020               	movlb	0	; select bank0
  3424  0035  0097               	movwf	23	;volatile
  3425                           
  3426                           ;main.c: 528: TMR1L = (0);
  3427  0036  0196               	clrf	22	;volatile
  3428                           
  3429                           ;main.c: 529: }else{
  3430  0037  2841               	goto	i1l2242
  3431  0038                     i1l2234:	
  3432                           
  3433                           ;main.c: 530: fLED = 0;
  3434  0038  01DE               	clrf	_fLED
  3435                           
  3436                           ;main.c: 531: TMR1H = (-1*8000 >> 8);
  3437  0039  30E0               	movlw	224
  3438  003A  0097               	movwf	23	;volatile
  3439                           
  3440                           ;main.c: 532: TMR1L = (-1*8000 & 0x00ff);
  3441  003B  30C0               	movlw	192
  3442  003C  0096               	movwf	22	;volatile
  3443                           
  3444                           ;main.c: 533: SerialLED(0,0,0);
  3445  003D  01F9               	clrf	i1SerialLED@g
  3446  003E  01FA               	clrf	i1SerialLED@b
  3447  003F  3000               	movlw	0
  3448  0040  2551               	fcall	i1_SerialLED
  3449  0041                     i1l2242:	
  3450                           
  3451                           ;main.c: 534: }
  3452                           ;main.c: 535: }
  3453                           ;main.c: 536: }
  3454                           ;main.c: 537: }
  3455                           ;main.c: 538: PIR1bits.TMR1IF = 0;
  3456  0041  0020               	movlb	0	; select bank0
  3457  0042  1011               	bcf	17,0	;volatile
  3458                           
  3459                           ;main.c: 539: }else{IOCAFbits.IOCAF5 =0;}
  3460  0043  2845               	goto	i1l270
  3461  0044                     i1l260:	
  3462  0044  1293               	bcf	19,5	;volatile
  3463  0045                     i1l270:	
  3464  0045  0020               	movlb	0	; select bank0
  3465  0046  082B               	movf	??_isr+1,w
  3466  0047  00FF               	movwf	127
  3467  0048  0009               	retfie
  3468  0049                     __end_of_isr:	
  3469                           
  3470                           	psect	text22
  3471  041A                     __ptext22:	
  3472 ;; *************** function i1_StatusDisplayADC *****************
  3473 ;; Defined at:
  3474 ;;		line 174 in file "main.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;		None               void
  3481 ;; Registers used:
  3482 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1
  3488 ;;      Params:         0       0       0
  3489 ;;      Locals:         0       0       0
  3490 ;;      Temps:          0       1       0
  3491 ;;      Totals:         0       1       0
  3492 ;;Total ram usage:        1 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    3
  3495 ;; This function calls:
  3496 ;;		i1_BatteryCheckVoltage
  3497 ;;		i1_SerialLED
  3498 ;;		i1___ftge
  3499 ;;		i1___lwtoft
  3500 ;; This function is called by:
  3501 ;;		_isr
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function i1_StatusDisplayADC
  3507  041A                     i1_StatusDisplayADC:	
  3508                           
  3509                           ;main.c: 175: vBattery = BatteryCheckVoltage();
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in i1_StatusDisplayADC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3513  041A  26A4               	fcall	i1_BatteryCheckVoltage
  3514  041B  0871               	movf	?i1_BatteryCheckVoltage+1,w
  3515  041C  0020               	movlb	0	; select bank0
  3516  041D  00D2               	movwf	_vBattery+1
  3517  041E  0870               	movf	?i1_BatteryCheckVoltage,w
  3518  041F  00D1               	movwf	_vBattery
  3519                           
  3520                           ;main.c: 177: if(vBattery > 0x03ff*0.37){
  3521  0420  3041               	movlw	65
  3522  0421  00A0               	movwf	i1___ftge@ff1
  3523  0422  30BD               	movlw	189
  3524  0423  00A1               	movwf	i1___ftge@ff1+1
  3525  0424  3043               	movlw	67
  3526  0425  00A2               	movwf	i1___ftge@ff1+2
  3527  0426  0852               	movf	_vBattery+1,w
  3528  0427  00F9               	movwf	i1___lwtoft@c+1
  3529  0428  0851               	movf	_vBattery,w
  3530  0429  00F8               	movwf	i1___lwtoft@c
  3531  042A  26B7               	fcall	i1___lwtoft
  3532  042B  0878               	movf	?i1___lwtoft,w
  3533  042C  0020               	movlb	0	; select bank0
  3534  042D  00A3               	movwf	i1___ftge@ff2
  3535  042E  0879               	movf	?i1___lwtoft+1,w
  3536  042F  00A4               	movwf	i1___ftge@ff2+1
  3537  0430  087A               	movf	?i1___lwtoft+2,w
  3538  0431  00A5               	movwf	i1___ftge@ff2+2
  3539  0432  24DE               	fcall	i1___ftge
  3540  0433  1803               	btfsc	3,0
  3541  0434  2C3E               	goto	i1l2038
  3542                           
  3543                           ;main.c: 178: SerialLED(0,0,20);
  3544  0435  01F9               	clrf	i1SerialLED@g
  3545  0436  3014               	movlw	20
  3546  0437  0020               	movlb	0	; select bank0
  3547  0438  00A9               	movwf	??i1_StatusDisplayADC
  3548  0439  0829               	movf	??i1_StatusDisplayADC,w
  3549  043A  00FA               	movwf	i1SerialLED@b
  3550  043B  3000               	movlw	0
  3551  043C  2551               	fcall	i1_SerialLED
  3552                           
  3553                           ;main.c: 179: }else{
  3554  043D  0008               	return
  3555  043E                     i1l2038:	
  3556                           
  3557                           ;main.c: 180: if(vBattery > 0x03ff*0.31){
  3558  043E  3091               	movlw	145
  3559  043F  0020               	movlb	0	; select bank0
  3560  0440  00A0               	movwf	i1___ftge@ff1
  3561  0441  309E               	movlw	158
  3562  0442  00A1               	movwf	i1___ftge@ff1+1
  3563  0443  3043               	movlw	67
  3564  0444  00A2               	movwf	i1___ftge@ff1+2
  3565  0445  0852               	movf	_vBattery+1,w
  3566  0446  00F9               	movwf	i1___lwtoft@c+1
  3567  0447  0851               	movf	_vBattery,w
  3568  0448  00F8               	movwf	i1___lwtoft@c
  3569  0449  26B7               	fcall	i1___lwtoft
  3570  044A  0878               	movf	?i1___lwtoft,w
  3571  044B  0020               	movlb	0	; select bank0
  3572  044C  00A3               	movwf	i1___ftge@ff2
  3573  044D  0879               	movf	?i1___lwtoft+1,w
  3574  044E  00A4               	movwf	i1___ftge@ff2+1
  3575  044F  087A               	movf	?i1___lwtoft+2,w
  3576  0450  00A5               	movwf	i1___ftge@ff2+2
  3577  0451  24DE               	fcall	i1___ftge
  3578  0452  1803               	btfsc	3,0
  3579  0453  2C5D               	goto	i1l2042
  3580                           
  3581                           ;main.c: 181: SerialLED(24,13,0);
  3582  0454  300D               	movlw	13
  3583  0455  0020               	movlb	0	; select bank0
  3584  0456  00A9               	movwf	??i1_StatusDisplayADC
  3585  0457  0829               	movf	??i1_StatusDisplayADC,w
  3586  0458  00F9               	movwf	i1SerialLED@g
  3587  0459  01FA               	clrf	i1SerialLED@b
  3588  045A  3018               	movlw	24
  3589  045B  2551               	fcall	i1_SerialLED
  3590                           
  3591                           ;main.c: 182: }else{
  3592  045C  0008               	return
  3593  045D                     i1l2042:	
  3594                           
  3595                           ;main.c: 183: SerialLED(40,0,0);
  3596  045D  01F9               	clrf	i1SerialLED@g
  3597  045E  01FA               	clrf	i1SerialLED@b
  3598  045F  3028               	movlw	40
  3599  0460  2551               	fcall	i1_SerialLED
  3600  0461  0008               	return
  3601  0462                     __end_ofi1_StatusDisplayADC:	
  3602                           
  3603                           	psect	text23
  3604  06B7                     __ptext23:	
  3605 ;; *************** function i1___lwtoft *****************
  3606 ;; Defined at:
  3607 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  c               2    8[COMMON] unsigned int 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  3    8[COMMON] float 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, pclath, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1
  3621 ;;      Params:         3       0       0
  3622 ;;      Locals:         0       0       0
  3623 ;;      Temps:          1       0       0
  3624 ;;      Totals:         4       0       0
  3625 ;;Total ram usage:        4 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    1
  3628 ;; This function calls:
  3629 ;;		i1___ftpack
  3630 ;; This function is called by:
  3631 ;;		i1_StatusDisplayADC
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function i1___lwtoft
  3637  06B7                     i1___lwtoft:	
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in i1___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3641  06B7  0878               	movf	i1___lwtoft@c,w
  3642  06B8  00F0               	movwf	i1___ftpack@arg
  3643  06B9  0879               	movf	i1___lwtoft@c+1,w
  3644  06BA  00F1               	movwf	i1___ftpack@arg+1
  3645  06BB  01F2               	clrf	i1___ftpack@arg+2
  3646  06BC  308E               	movlw	142
  3647  06BD  00FB               	movwf	??i1___lwtoft
  3648  06BE  087B               	movf	??i1___lwtoft,w
  3649  06BF  00F3               	movwf	i1___ftpack@exp
  3650  06C0  01F4               	clrf	i1___ftpack@sign
  3651  06C1  2322               	fcall	i1___ftpack
  3652  06C2  0870               	movf	?i1___ftpack,w
  3653  06C3  00F8               	movwf	?i1___lwtoft
  3654  06C4  0871               	movf	?i1___ftpack+1,w
  3655  06C5  00F9               	movwf	?i1___lwtoft+1
  3656  06C6  0872               	movf	?i1___ftpack+2,w
  3657  06C7  00FA               	movwf	?i1___lwtoft+2
  3658  06C8  0008               	return
  3659  06C9                     __end_ofi1___lwtoft:	
  3660                           
  3661                           	psect	text24
  3662  0322                     __ptext24:	
  3663 ;; *************** function i1___ftpack *****************
  3664 ;; Defined at:
  3665 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  arg             3    0[COMMON] unsigned um
  3668 ;;  exp             1    3[COMMON] unsigned char 
  3669 ;;  sign            1    4[COMMON] unsigned char 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  3    0[COMMON] float 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1
  3681 ;;      Params:         5       0       0
  3682 ;;      Locals:         0       0       0
  3683 ;;      Temps:          3       0       0
  3684 ;;      Totals:         8       0       0
  3685 ;;Total ram usage:        8 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		i1___lwtoft
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           
  3695                           ;psect for function i1___ftpack
  3696  0322                     i1___ftpack:	
  3697                           
  3698                           ;incstack = 0
  3699                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  3700  0322  0873               	movf	i1___ftpack@exp,w
  3701  0323  1903               	btfsc	3,2
  3702  0324  2B2A               	goto	i1l1748
  3703  0325  0872               	movf	i1___ftpack@arg+2,w
  3704  0326  0471               	iorwf	i1___ftpack@arg+1,w
  3705  0327  0470               	iorwf	i1___ftpack@arg,w
  3706  0328  1D03               	skipz
  3707  0329  2B3B               	goto	i1l1754
  3708  032A                     i1l1748:	
  3709  032A  3000               	movlw	0
  3710  032B  00F0               	movwf	?i1___ftpack
  3711  032C  3000               	movlw	0
  3712  032D  00F1               	movwf	?i1___ftpack+1
  3713  032E  3000               	movlw	0
  3714  032F  00F2               	movwf	?i1___ftpack+2
  3715  0330  0008               	return
  3716  0331                     i1l1752:	
  3717  0331  3001               	movlw	1
  3718  0332  00F5               	movwf	??i1___ftpack
  3719  0333  0875               	movf	??i1___ftpack,w
  3720  0334  07F3               	addwf	i1___ftpack@exp,f
  3721  0335  3001               	movlw	1
  3722  0336                     u146_25:	
  3723  0336  36F2               	lsrf	i1___ftpack@arg+2,f
  3724  0337  0CF1               	rrf	i1___ftpack@arg+1,f
  3725  0338  0CF0               	rrf	i1___ftpack@arg,f
  3726  0339  0B89               	decfsz	9,f
  3727  033A  2B36               	goto	u146_25
  3728  033B                     i1l1754:	
  3729  033B  30FE               	movlw	254
  3730  033C  0572               	andwf	i1___ftpack@arg+2,w
  3731  033D  1903               	btfsc	3,2
  3732  033E  2B54               	goto	i1l515
  3733  033F  2B31               	goto	i1l1752
  3734  0340                     i1l1756:	
  3735  0340  3001               	movlw	1
  3736  0341  00F5               	movwf	??i1___ftpack
  3737  0342  0875               	movf	??i1___ftpack,w
  3738  0343  07F3               	addwf	i1___ftpack@exp,f
  3739  0344  3001               	movlw	1
  3740  0345  07F0               	addwf	i1___ftpack@arg,f
  3741  0346  3000               	movlw	0
  3742  0347  1803               	skipnc
  3743  0348  3001               	movlw	1
  3744  0349  07F1               	addwf	i1___ftpack@arg+1,f
  3745  034A  3000               	movlw	0
  3746  034B  1803               	skipnc
  3747  034C  3001               	movlw	1
  3748  034D  07F2               	addwf	i1___ftpack@arg+2,f
  3749  034E  3001               	movlw	1
  3750  034F                     u148_25:	
  3751  034F  36F2               	lsrf	i1___ftpack@arg+2,f
  3752  0350  0CF1               	rrf	i1___ftpack@arg+1,f
  3753  0351  0CF0               	rrf	i1___ftpack@arg,f
  3754  0352  0B89               	decfsz	9,f
  3755  0353  2B4F               	goto	u148_25
  3756  0354                     i1l515:	
  3757  0354  30FF               	movlw	255
  3758  0355  0572               	andwf	i1___ftpack@arg+2,w
  3759  0356  1903               	btfsc	3,2
  3760  0357  2B65               	goto	i1l1764
  3761  0358  2B40               	goto	i1l1756
  3762  0359                     i1l1766:	
  3763  0359  3002               	movlw	2
  3764  035A  0273               	subwf	i1___ftpack@exp,w
  3765  035B  1C03               	btfss	3,0
  3766  035C  2B67               	goto	i1l522
  3767  035D  3001               	movlw	1
  3768  035E  02F3               	subwf	i1___ftpack@exp,f
  3769  035F  3001               	movlw	1
  3770  0360                     u150_25:	
  3771  0360  35F0               	lslf	i1___ftpack@arg,f
  3772  0361  0DF1               	rlf	i1___ftpack@arg+1,f
  3773  0362  0DF2               	rlf	i1___ftpack@arg+2,f
  3774  0363  0B89               	decfsz	9,f
  3775  0364  2B60               	goto	u150_25
  3776  0365                     i1l1764:	
  3777  0365  1FF1               	btfss	i1___ftpack@arg+1,7
  3778  0366  2B59               	goto	i1l1766
  3779  0367                     i1l522:	
  3780  0367  1873               	btfsc	i1___ftpack@exp,0
  3781  0368  2B6F               	goto	i1l523
  3782  0369  30FF               	movlw	255
  3783  036A  05F0               	andwf	i1___ftpack@arg,f
  3784  036B  307F               	movlw	127
  3785  036C  05F1               	andwf	i1___ftpack@arg+1,f
  3786  036D  30FF               	movlw	255
  3787  036E  05F2               	andwf	i1___ftpack@arg+2,f
  3788  036F                     i1l523:	
  3789  036F  1003               	clrc
  3790  0370  0CF3               	rrf	i1___ftpack@exp,f
  3791  0371  0873               	movf	i1___ftpack@exp,w
  3792  0372  00F5               	movwf	??i1___ftpack
  3793  0373  01F6               	clrf	??i1___ftpack+1
  3794  0374  01F7               	clrf	??i1___ftpack+2
  3795  0375  3010               	movlw	16
  3796  0376                     u154_25:	
  3797  0376  35F5               	lslf	??i1___ftpack,f
  3798  0377  0DF6               	rlf	??i1___ftpack+1,f
  3799  0378  0DF7               	rlf	??i1___ftpack+2,f
  3800  0379  0B89               	decfsz	9,f
  3801  037A  2B76               	goto	u154_25
  3802  037B  0875               	movf	??i1___ftpack,w
  3803  037C  04F0               	iorwf	i1___ftpack@arg,f
  3804  037D  0876               	movf	??i1___ftpack+1,w
  3805  037E  04F1               	iorwf	i1___ftpack@arg+1,f
  3806  037F  0877               	movf	??i1___ftpack+2,w
  3807  0380  04F2               	iorwf	i1___ftpack@arg+2,f
  3808  0381  0874               	movf	i1___ftpack@sign,w
  3809  0382  1903               	btfsc	3,2
  3810  0383  0008               	return
  3811  0384  17F2               	bsf	i1___ftpack@arg+2,7
  3812  0385  0008               	return
  3813  0386                     __end_ofi1___ftpack:	
  3814                           
  3815                           	psect	text25
  3816  04DE                     __ptext25:	
  3817 ;; *************** function i1___ftge *****************
  3818 ;; Defined at:
  3819 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  ff1             3    0[BANK0 ] float 
  3822 ;;  ff2             3    3[BANK0 ] float 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;		None               void
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1
  3834 ;;      Params:         0       6       0
  3835 ;;      Locals:         0       0       0
  3836 ;;      Temps:          0       3       0
  3837 ;;      Totals:         0       9       0
  3838 ;;Total ram usage:        9 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		i1_StatusDisplayADC
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function i1___ftge
  3849  04DE                     i1___ftge:	
  3850                           
  3851                           ;incstack = 0
  3852                           ; Regs used in i1___ftge: [wreg+status,2+status,0]
  3853  04DE  0020               	movlb	0	; select bank0
  3854  04DF  1FA2               	btfss	i1___ftge@ff1+2,7
  3855  04E0  2CF5               	goto	i1l1900
  3856  04E1  0920               	comf	i1___ftge@ff1,w
  3857  04E2  00A6               	movwf	??i1___ftge
  3858  04E3  0921               	comf	i1___ftge@ff1+1,w
  3859  04E4  00A7               	movwf	??i1___ftge+1
  3860  04E5  0922               	comf	i1___ftge@ff1+2,w
  3861  04E6  00A8               	movwf	??i1___ftge+2
  3862  04E7  0AA6               	incf	??i1___ftge,f
  3863  04E8  1903               	skipnz
  3864  04E9  0AA7               	incf	??i1___ftge+1,f
  3865  04EA  1903               	skipnz
  3866  04EB  0AA8               	incf	??i1___ftge+2,f
  3867  04EC  3000               	movlw	0
  3868  04ED  0726               	addwf	??i1___ftge,w
  3869  04EE  00A0               	movwf	i1___ftge@ff1
  3870  04EF  3000               	movlw	0
  3871  04F0  3D27               	addwfc	??i1___ftge+1,w
  3872  04F1  00A1               	movwf	i1___ftge@ff1+1
  3873  04F2  3080               	movlw	128
  3874  04F3  3D28               	addwfc	??i1___ftge+2,w
  3875  04F4  00A2               	movwf	i1___ftge@ff1+2
  3876  04F5                     i1l1900:	
  3877  04F5  1FA5               	btfss	i1___ftge@ff2+2,7
  3878  04F6  2D0B               	goto	i1l1904
  3879  04F7  0923               	comf	i1___ftge@ff2,w
  3880  04F8  00A6               	movwf	??i1___ftge
  3881  04F9  0924               	comf	i1___ftge@ff2+1,w
  3882  04FA  00A7               	movwf	??i1___ftge+1
  3883  04FB  0925               	comf	i1___ftge@ff2+2,w
  3884  04FC  00A8               	movwf	??i1___ftge+2
  3885  04FD  0AA6               	incf	??i1___ftge,f
  3886  04FE  1903               	skipnz
  3887  04FF  0AA7               	incf	??i1___ftge+1,f
  3888  0500  1903               	skipnz
  3889  0501  0AA8               	incf	??i1___ftge+2,f
  3890  0502  3000               	movlw	0
  3891  0503  0726               	addwf	??i1___ftge,w
  3892  0504  00A3               	movwf	i1___ftge@ff2
  3893  0505  3000               	movlw	0
  3894  0506  3D27               	addwfc	??i1___ftge+1,w
  3895  0507  00A4               	movwf	i1___ftge@ff2+1
  3896  0508  3080               	movlw	128
  3897  0509  3D28               	addwfc	??i1___ftge+2,w
  3898  050A  00A5               	movwf	i1___ftge@ff2+2
  3899  050B                     i1l1904:	
  3900  050B  3080               	movlw	128
  3901  050C  06A2               	xorwf	i1___ftge@ff1+2,f
  3902  050D  3080               	movlw	128
  3903  050E  06A5               	xorwf	i1___ftge@ff2+2,f
  3904  050F  0825               	movf	i1___ftge@ff2+2,w
  3905  0510  0222               	subwf	i1___ftge@ff1+2,w
  3906  0511  1D03               	skipz
  3907  0512  0008               	return
  3908  0513  0824               	movf	i1___ftge@ff2+1,w
  3909  0514  0221               	subwf	i1___ftge@ff1+1,w
  3910  0515  1D03               	skipz
  3911  0516  0008               	return
  3912  0517  0823               	movf	i1___ftge@ff2,w
  3913  0518  0220               	subwf	i1___ftge@ff1,w
  3914  0519  0008               	return
  3915  051A                     __end_ofi1___ftge:	
  3916                           
  3917                           	psect	text26
  3918  0551                     __ptext26:	
  3919 ;; *************** function i1_SerialLED *****************
  3920 ;; Defined at:
  3921 ;;		line 123 in file "main.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  r               1    wreg     unsigned char 
  3924 ;;  g               1    9[COMMON] unsigned char 
  3925 ;;  b               1   10[COMMON] unsigned char 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  r               1   13[COMMON] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;		None               void
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1
  3937 ;;      Params:         2       0       0
  3938 ;;      Locals:         1       0       0
  3939 ;;      Temps:          2       0       0
  3940 ;;      Totals:         5       0       0
  3941 ;;Total ram usage:        5 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    2
  3944 ;; This function calls:
  3945 ;;		i1_SendLED
  3946 ;; This function is called by:
  3947 ;;		_isr
  3948 ;;		i1_StatusDisplayADC
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           
  3953                           ;psect for function i1_SerialLED
  3954  0551                     i1_SerialLED:	
  3955                           
  3956                           ;incstack = 0
  3957                           ; Regs used in i1_SerialLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3958                           ;i1SerialLED@r stored from wreg
  3959  0551  00FD               	movwf	i1SerialLED@r
  3960                           
  3961                           ;main.c: 124: T1CONbits.TMR1ON = 0;
  3962  0552  0020               	movlb	0	; select bank0
  3963  0553  1018               	bcf	24,0	;volatile
  3964                           
  3965                           ;main.c: 125: _delay((unsigned long)((1)*(62500/4000.0)));
  3966  0554  3004               	movlw	4
  3967  0555  00FB               	movwf	??i1_SerialLED
  3968  0556                     u289_27:	
  3969  0556  0BFB               	decfsz	??i1_SerialLED,f
  3970  0557  2D56               	goto	u289_27
  3971  0558  3200               	nop2	;nop
  3972                           
  3973                           ;main.c: 126: OSCCONbits.IRCF = 0b1110;
  3974  0559  0021               	movlb	1	; select bank1
  3975  055A  0819               	movf	25,w	;volatile
  3976  055B  3987               	andlw	-121
  3977  055C  3870               	iorlw	112
  3978  055D  0099               	movwf	25	;volatile
  3979                           
  3980                           ;main.c: 127: _delay((unsigned long)((2000)*(62500/4000.0)));
  3981  055E  3029               	movlw	41
  3982  055F  00FC               	movwf	??i1_SerialLED+1
  3983  0560  3094               	movlw	148
  3984  0561  00FB               	movwf	??i1_SerialLED
  3985  0562                     u290_27:	
  3986  0562  0BFB               	decfsz	??i1_SerialLED,f
  3987  0563  2D62               	goto	u290_27
  3988  0564  0BFC               	decfsz	??i1_SerialLED+1,f
  3989  0565  2D62               	goto	u290_27
  3990  0566  0000               	nop
  3991                           
  3992                           ;main.c: 128: R[0]=r;
  3993  0567  087D               	movf	i1SerialLED@r,w
  3994  0568  00FB               	movwf	??i1_SerialLED
  3995  0569  087B               	movf	??i1_SerialLED,w
  3996  056A  0020               	movlb	0	; select bank0
  3997  056B  00D9               	movwf	_R
  3998                           
  3999                           ;main.c: 129: G[0]=g;
  4000  056C  0879               	movf	i1SerialLED@g,w
  4001  056D  00FB               	movwf	??i1_SerialLED
  4002  056E  087B               	movf	??i1_SerialLED,w
  4003  056F  00D6               	movwf	_G
  4004                           
  4005                           ;main.c: 130: B[0]=b;
  4006  0570  087A               	movf	i1SerialLED@b,w
  4007  0571  00FB               	movwf	??i1_SerialLED
  4008  0572  087B               	movf	??i1_SerialLED,w
  4009  0573  00D3               	movwf	_B
  4010                           
  4011                           ;main.c: 131: SendLED(0+1);
  4012  0574  3001               	movlw	1
  4013  0575  00F0               	movwf	i1SendLED@num
  4014  0576  3000               	movlw	0
  4015  0577  00F1               	movwf	i1SendLED@num+1
  4016  0578  221A               	fcall	i1_SendLED
  4017                           
  4018                           ;main.c: 132: OSCCONbits.IRCF = 0b0100;
  4019  0579  0021               	movlb	1	; select bank1
  4020  057A  0819               	movf	25,w	;volatile
  4021  057B  3987               	andlw	-121
  4022  057C  3820               	iorlw	32
  4023  057D  0099               	movwf	25	;volatile
  4024                           
  4025                           ;main.c: 133: _delay((unsigned long)((10)*(62500/4000.0)));
  4026  057E  3033               	movlw	51
  4027  057F  00FB               	movwf	??i1_SerialLED
  4028  0580                     u291_27:	
  4029  0580  0BFB               	decfsz	??i1_SerialLED,f
  4030  0581  2D80               	goto	u291_27
  4031  0582  3200               	nop2	;nop
  4032                           
  4033                           ;main.c: 134: T1CONbits.TMR1ON = 1;
  4034  0583  0020               	movlb	0	; select bank0
  4035  0584  1418               	bsf	24,0	;volatile
  4036  0585  0008               	return
  4037  0586                     __end_ofi1_SerialLED:	
  4038                           
  4039                           	psect	text27
  4040  021A                     __ptext27:	
  4041 ;; *************** function i1_SendLED *****************
  4042 ;; Defined at:
  4043 ;;		line 98 in file "main.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  num             2    0[COMMON] int 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  SendLED         2    7[COMMON] int 
  4048 ;;  SendLED         2    5[COMMON] int 
  4049 ;;  SendLED         2    3[COMMON] int 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;		None               void
  4052 ;; Registers used:
  4053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1
  4059 ;;      Params:         2       0       0
  4060 ;;      Locals:         6       0       0
  4061 ;;      Temps:          1       0       0
  4062 ;;      Totals:         9       0       0
  4063 ;;Total ram usage:        9 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    1
  4066 ;; This function calls:
  4067 ;;		i1_Data0
  4068 ;;		i1_Data1
  4069 ;; This function is called by:
  4070 ;;		i1_SerialLED
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           
  4075                           ;psect for function i1_SendLED
  4076  021A                     i1_SendLED:	
  4077                           
  4078                           ;main.c: 99: int loop8,loopNum;
  4079                           ;main.c: 100: int comp;
  4080                           ;main.c: 101: for(loopNum=0;loopNum<num;loopNum++){
  4081                           
  4082                           ;incstack = 0
  4083                           ; Regs used in i1_SendLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4084  021A  01F3               	clrf	i1SendLED@loopNum
  4085  021B  01F4               	clrf	i1SendLED@loopNum+1
  4086  021C                     i1l145:	
  4087  021C  0874               	movf	i1SendLED@loopNum+1,w
  4088  021D  3A80               	xorlw	128
  4089  021E  00F2               	movwf	??i1_SendLED
  4090  021F  0871               	movf	i1SendLED@num+1,w
  4091  0220  3A80               	xorlw	128
  4092  0221  0272               	subwf	??i1_SendLED,w
  4093  0222  1D03               	skipz
  4094  0223  2A26               	goto	u143_25
  4095  0224  0870               	movf	i1SendLED@num,w
  4096  0225  0273               	subwf	i1SendLED@loopNum,w
  4097  0226                     u143_25:	
  4098  0226  1803               	btfsc	3,0
  4099  0227  2AB7               	goto	i1l1742
  4100                           
  4101                           ;main.c: 102: comp=128;
  4102  0228  3080               	movlw	128
  4103  0229  00F7               	movwf	i1SendLED@comp
  4104  022A  3000               	movlw	0
  4105  022B  00F8               	movwf	i1SendLED@comp+1
  4106                           
  4107                           ;main.c: 103: for(loop8=0;loop8<8;loop8++){
  4108  022C  01F5               	clrf	i1SendLED@loop8
  4109  022D  01F6               	clrf	i1SendLED@loop8+1
  4110  022E  0876               	movf	i1SendLED@loop8+1,w
  4111  022F  3A80               	xorlw	128
  4112  0230  00F2               	movwf	??i1_SendLED
  4113  0231  3080               	movlw	128
  4114  0232  0272               	subwf	??i1_SendLED,w
  4115  0233  3008               	movlw	8
  4116  0234  1903               	btfsc	3,2
  4117  0235  0275               	subwf	i1SendLED@loop8,w
  4118  0236  1803               	btfsc	3,0
  4119  0237  2A56               	goto	i1l1700
  4120  0238                     i1l1688:	
  4121                           
  4122                           ;main.c: 104: if(comp&G[loopNum]){Data1();}else{Data0();}
  4123  0238  0873               	movf	i1SendLED@loopNum,w
  4124  0239  3E56               	addlw	(low (_G| 0))& (0+255)
  4125  023A  0086               	movwf	6
  4126  023B  0187               	clrf	7
  4127  023C  0801               	movf	1,w
  4128  023D  0577               	andwf	i1SendLED@comp,w
  4129  023E  1903               	btfsc	3,2
  4130  023F  2A42               	goto	i1l1692
  4131  0240  26D3               	fcall	i1_Data1
  4132  0241  2A43               	goto	i1l1694
  4133  0242                     i1l1692:	
  4134  0242  26E9               	fcall	i1_Data0
  4135  0243                     i1l1694:	
  4136                           
  4137                           ;main.c: 105: comp = comp>>1;
  4138  0243  0D78               	rlf	i1SendLED@comp+1,w
  4139  0244  0C78               	rrf	i1SendLED@comp+1,w
  4140  0245  00F8               	movwf	i1SendLED@comp+1
  4141  0246  0C77               	rrf	i1SendLED@comp,w
  4142  0247  00F7               	movwf	i1SendLED@comp
  4143  0248  3001               	movlw	1
  4144  0249  07F5               	addwf	i1SendLED@loop8,f
  4145  024A  3000               	movlw	0
  4146  024B  3DF6               	addwfc	i1SendLED@loop8+1,f
  4147  024C  0876               	movf	i1SendLED@loop8+1,w
  4148  024D  3A80               	xorlw	128
  4149  024E  00F2               	movwf	??i1_SendLED
  4150  024F  3080               	movlw	128
  4151  0250  0272               	subwf	??i1_SendLED,w
  4152  0251  3008               	movlw	8
  4153  0252  1903               	btfsc	3,2
  4154  0253  0275               	subwf	i1SendLED@loop8,w
  4155  0254  1C03               	skipc
  4156  0255  2A38               	goto	i1l1688
  4157  0256                     i1l1700:	
  4158                           
  4159                           ;main.c: 106: }
  4160                           ;main.c: 107: comp=128;
  4161  0256  3080               	movlw	128
  4162  0257  00F7               	movwf	i1SendLED@comp
  4163  0258  3000               	movlw	0
  4164  0259  00F8               	movwf	i1SendLED@comp+1
  4165                           
  4166                           ;main.c: 108: for(loop8=0;loop8<8;loop8++){
  4167  025A  01F5               	clrf	i1SendLED@loop8
  4168  025B  01F6               	clrf	i1SendLED@loop8+1
  4169  025C  0876               	movf	i1SendLED@loop8+1,w
  4170  025D  3A80               	xorlw	128
  4171  025E  00F2               	movwf	??i1_SendLED
  4172  025F  3080               	movlw	128
  4173  0260  0272               	subwf	??i1_SendLED,w
  4174  0261  3008               	movlw	8
  4175  0262  1903               	btfsc	3,2
  4176  0263  0275               	subwf	i1SendLED@loop8,w
  4177  0264  1803               	btfsc	3,0
  4178  0265  2A84               	goto	i1l1720
  4179  0266                     i1l1708:	
  4180                           
  4181                           ;main.c: 109: if(comp&R[loopNum]){Data1();}else{Data0();}
  4182  0266  0873               	movf	i1SendLED@loopNum,w
  4183  0267  3E59               	addlw	(low (_R| 0))& (0+255)
  4184  0268  0086               	movwf	6
  4185  0269  0187               	clrf	7
  4186  026A  0801               	movf	1,w
  4187  026B  0577               	andwf	i1SendLED@comp,w
  4188  026C  1903               	btfsc	3,2
  4189  026D  2A70               	goto	i1l1712
  4190  026E  26D3               	fcall	i1_Data1
  4191  026F  2A71               	goto	i1l1714
  4192  0270                     i1l1712:	
  4193  0270  26E9               	fcall	i1_Data0
  4194  0271                     i1l1714:	
  4195                           
  4196                           ;main.c: 110: comp = comp>>1;
  4197  0271  0D78               	rlf	i1SendLED@comp+1,w
  4198  0272  0C78               	rrf	i1SendLED@comp+1,w
  4199  0273  00F8               	movwf	i1SendLED@comp+1
  4200  0274  0C77               	rrf	i1SendLED@comp,w
  4201  0275  00F7               	movwf	i1SendLED@comp
  4202  0276  3001               	movlw	1
  4203  0277  07F5               	addwf	i1SendLED@loop8,f
  4204  0278  3000               	movlw	0
  4205  0279  3DF6               	addwfc	i1SendLED@loop8+1,f
  4206  027A  0876               	movf	i1SendLED@loop8+1,w
  4207  027B  3A80               	xorlw	128
  4208  027C  00F2               	movwf	??i1_SendLED
  4209  027D  3080               	movlw	128
  4210  027E  0272               	subwf	??i1_SendLED,w
  4211  027F  3008               	movlw	8
  4212  0280  1903               	btfsc	3,2
  4213  0281  0275               	subwf	i1SendLED@loop8,w
  4214  0282  1C03               	skipc
  4215  0283  2A66               	goto	i1l1708
  4216  0284                     i1l1720:	
  4217                           
  4218                           ;main.c: 111: }
  4219                           ;main.c: 112: comp=128;
  4220  0284  3080               	movlw	128
  4221  0285  00F7               	movwf	i1SendLED@comp
  4222  0286  3000               	movlw	0
  4223  0287  00F8               	movwf	i1SendLED@comp+1
  4224                           
  4225                           ;main.c: 113: for(loop8=0;loop8<8;loop8++){
  4226  0288  01F5               	clrf	i1SendLED@loop8
  4227  0289  01F6               	clrf	i1SendLED@loop8+1
  4228  028A  0876               	movf	i1SendLED@loop8+1,w
  4229  028B  3A80               	xorlw	128
  4230  028C  00F2               	movwf	??i1_SendLED
  4231  028D  3080               	movlw	128
  4232  028E  0272               	subwf	??i1_SendLED,w
  4233  028F  3008               	movlw	8
  4234  0290  1903               	btfsc	3,2
  4235  0291  0275               	subwf	i1SendLED@loop8,w
  4236  0292  1803               	btfsc	3,0
  4237  0293  2AB2               	goto	i1l1740
  4238  0294                     i1l1728:	
  4239                           
  4240                           ;main.c: 114: if(comp&B[loopNum]){Data1();}else{Data0();}
  4241  0294  0873               	movf	i1SendLED@loopNum,w
  4242  0295  3E53               	addlw	(low (_B| 0))& (0+255)
  4243  0296  0086               	movwf	6
  4244  0297  0187               	clrf	7
  4245  0298  0801               	movf	1,w
  4246  0299  0577               	andwf	i1SendLED@comp,w
  4247  029A  1903               	btfsc	3,2
  4248  029B  2A9E               	goto	i1l1732
  4249  029C  26D3               	fcall	i1_Data1
  4250  029D  2A9F               	goto	i1l1734
  4251  029E                     i1l1732:	
  4252  029E  26E9               	fcall	i1_Data0
  4253  029F                     i1l1734:	
  4254                           
  4255                           ;main.c: 115: comp = comp>>1;
  4256  029F  0D78               	rlf	i1SendLED@comp+1,w
  4257  02A0  0C78               	rrf	i1SendLED@comp+1,w
  4258  02A1  00F8               	movwf	i1SendLED@comp+1
  4259  02A2  0C77               	rrf	i1SendLED@comp,w
  4260  02A3  00F7               	movwf	i1SendLED@comp
  4261  02A4  3001               	movlw	1
  4262  02A5  07F5               	addwf	i1SendLED@loop8,f
  4263  02A6  3000               	movlw	0
  4264  02A7  3DF6               	addwfc	i1SendLED@loop8+1,f
  4265  02A8  0876               	movf	i1SendLED@loop8+1,w
  4266  02A9  3A80               	xorlw	128
  4267  02AA  00F2               	movwf	??i1_SendLED
  4268  02AB  3080               	movlw	128
  4269  02AC  0272               	subwf	??i1_SendLED,w
  4270  02AD  3008               	movlw	8
  4271  02AE  1903               	btfsc	3,2
  4272  02AF  0275               	subwf	i1SendLED@loop8,w
  4273  02B0  1C03               	skipc
  4274  02B1  2A94               	goto	i1l1728
  4275  02B2                     i1l1740:	
  4276  02B2  3001               	movlw	1
  4277  02B3  07F3               	addwf	i1SendLED@loopNum,f
  4278  02B4  3000               	movlw	0
  4279  02B5  3DF4               	addwfc	i1SendLED@loopNum+1,f
  4280  02B6  2A1C               	goto	i1l145
  4281  02B7                     i1l1742:	
  4282                           
  4283                           ;main.c: 116: }
  4284                           ;main.c: 118: }
  4285                           ;main.c: 119: _delay((unsigned long)((10)*(62500/4000.0)));
  4286  02B7  3033               	movlw	51
  4287  02B8  00F2               	movwf	??i1_SendLED
  4288  02B9                     u292_27:	
  4289  02B9  0BF2               	decfsz	??i1_SendLED,f
  4290  02BA  2AB9               	goto	u292_27
  4291  02BB  3200               	nop2	;nop
  4292  02BC  0008               	return
  4293  02BD                     __end_ofi1_SendLED:	
  4294                           
  4295                           	psect	text28
  4296  06D3                     __ptext28:	
  4297 ;; *************** function i1_Data1 *****************
  4298 ;; Defined at:
  4299 ;;		line 82 in file "main.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;		None               void
  4306 ;; Registers used:
  4307 ;;		None
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1
  4313 ;;      Params:         0       0       0
  4314 ;;      Locals:         0       0       0
  4315 ;;      Temps:          0       0       0
  4316 ;;      Totals:         0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		i1_SendLED
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           
  4327                           ;psect for function i1_Data1
  4328  06D3                     i1_Data1:	
  4329                           
  4330                           ;main.c: 83: LATAbits.LATA1=1;
  4331                           
  4332                           ;incstack = 0
  4333                           ; Regs used in i1_Data1: []
  4334  06D3  0022               	movlb	2	; select bank2
  4335  06D4  148C               	bsf	12,1	;volatile
  4336  06D5  0000               	nop	;# 
  4337  06D6  0000               	nop	;# 
  4338  06D7  0000               	nop	;# 
  4339  06D8  0000               	nop	;# 
  4340  06D9  0000               	nop	;# 
  4341                           
  4342                           ;main.c: 89: LATAbits.LATA1=0;
  4343  06DA  0022               	movlb	2	; select bank2
  4344  06DB  108C               	bcf	12,1	;volatile
  4345  06DC  0008               	return
  4346  06DD                     __end_ofi1_Data1:	
  4347                           
  4348                           	psect	text29
  4349  06E9                     __ptext29:	
  4350 ;; *************** function i1_Data0 *****************
  4351 ;; Defined at:
  4352 ;;		line 92 in file "main.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;		None               void
  4359 ;; Registers used:
  4360 ;;		None
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1
  4366 ;;      Params:         0       0       0
  4367 ;;      Locals:         0       0       0
  4368 ;;      Temps:          0       0       0
  4369 ;;      Totals:         0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		i1_SendLED
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function i1_Data0
  4381  06E9                     i1_Data0:	
  4382                           
  4383                           ;main.c: 93: LATAbits.LATA1=1;
  4384                           
  4385                           ;incstack = 0
  4386                           ; Regs used in i1_Data0: []
  4387  06E9  0022               	movlb	2	; select bank2
  4388  06EA  148C               	bsf	12,1	;volatile
  4389  06EB  0000               	nop	;# 
  4390                           
  4391                           ;main.c: 95: LATAbits.LATA1=0;
  4392  06EC  0022               	movlb	2	; select bank2
  4393  06ED  108C               	bcf	12,1	;volatile
  4394  06EE  0008               	return
  4395  06EF                     __end_ofi1_Data0:	
  4396                           
  4397                           	psect	text30
  4398  06A4                     __ptext30:	
  4399 ;; *************** function i1_BatteryCheckVoltage *****************
  4400 ;; Defined at:
  4401 ;;		line 449 in file "main.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  BatteryCheck    2    0        unsigned int 
  4406 ;;  BatteryCheck    2    0        unsigned int 
  4407 ;;  BatteryCheck    2    0        unsigned int 
  4408 ;;  BatteryCheck    2    0        unsigned int 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  2    0[COMMON] unsigned int 
  4411 ;; Registers used:
  4412 ;;		wreg
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMMON   BANK0   BANK1
  4418 ;;      Params:         2       0       0
  4419 ;;      Locals:         0       0       0
  4420 ;;      Temps:          0       0       0
  4421 ;;      Totals:         2       0       0
  4422 ;;Total ram usage:        2 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		i1_StatusDisplayADC
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function i1_BatteryCheckVoltage
  4433  06A4                     i1_BatteryCheckVoltage:	
  4434                           
  4435                           ;main.c: 451: unsigned int ad1, ad2, thresh, i;
  4436                           ;main.c: 454: ADCON0 = 0b00010101;
  4437                           
  4438                           ;incstack = 0
  4439                           ; Regs used in i1_BatteryCheckVoltage: [wreg]
  4440  06A4  3015               	movlw	21
  4441  06A5  0021               	movlb	1	; select bank1
  4442  06A6  009D               	movwf	29	;volatile
  4443                           
  4444                           ;main.c: 457: ADCON0 = 0b00010111;
  4445  06A7  3017               	movlw	23
  4446  06A8  009D               	movwf	29	;volatile
  4447  06A9                     i1l246:	
  4448                           ;main.c: 460: while(ADCON0 & 0x02);
  4449                           
  4450  06A9  189D               	btfsc	29,1	;volatile
  4451  06AA  2EA9               	goto	i1l246
  4452                           
  4453                           ;main.c: 462: AdcRes = ((unsigned int)ADRESH << 8) | (unsigned int)ADRESL;
  4454  06AB  081C               	movf	28,w	;volatile
  4455  06AC  0020               	movlb	0	; select bank0
  4456  06AD  00CA               	movwf	_AdcRes+1
  4457  06AE  0021               	movlb	1	; select bank1
  4458  06AF  081B               	movf	27,w	;volatile
  4459  06B0  0020               	movlb	0	; select bank0
  4460  06B1  00C9               	movwf	_AdcRes
  4461                           
  4462                           ;main.c: 464: return AdcRes;
  4463  06B2  084A               	movf	_AdcRes+1,w
  4464  06B3  00F1               	movwf	?i1_BatteryCheckVoltage+1
  4465  06B4  0849               	movf	_AdcRes,w
  4466  06B5  00F0               	movwf	?i1_BatteryCheckVoltage
  4467  06B6  0008               	return
  4468  06B7                     __end_ofi1_BatteryCheckVoltage:	
  4469                           
  4470                           	psect	text31
  4471  0617                     __ptext31:	
  4472 ;; *************** function i1_CheckStatus *****************
  4473 ;; Defined at:
  4474 ;;		line 136 in file "main.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;		None               void
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMMON   BANK0   BANK1
  4488 ;;      Params:         0       0       0
  4489 ;;      Locals:         0       0       0
  4490 ;;      Temps:          1       0       0
  4491 ;;      Totals:         1       0       0
  4492 ;;Total ram usage:        1 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_isr
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           
  4502                           ;psect for function i1_CheckStatus
  4503  0617                     i1_CheckStatus:	
  4504                           
  4505                           ;main.c: 137: if(PORTCbits.RC0==1){
  4506                           
  4507                           ;incstack = 0
  4508                           ; Regs used in i1_CheckStatus: [wreg+status,2+status,0]
  4509  0617  0020               	movlb	0	; select bank0
  4510  0618  1C0E               	btfss	14,0	;volatile
  4511  0619  2E2E               	goto	i1l2028
  4512                           
  4513                           ;main.c: 138: if(PORTAbits.RA2==1){
  4514  061A  1D0C               	btfss	12,2	;volatile
  4515  061B  2E25               	goto	i1l2024
  4516                           
  4517                           ;main.c: 139: if(ChargeStatus!=3){
  4518  061C  3003               	movlw	3
  4519  061D  0655               	xorwf	_ChargeStatus,w
  4520  061E  1903               	btfsc	3,2
  4521  061F  0008               	return
  4522                           
  4523                           ;main.c: 140: ChargeStatus=3;
  4524  0620  3003               	movlw	3
  4525  0621  00F0               	movwf	??i1_CheckStatus
  4526  0622  0870               	movf	??i1_CheckStatus,w
  4527  0623  00D5               	movwf	_ChargeStatus
  4528                           
  4529                           ;main.c: 141: }
  4530                           ;main.c: 142: }else{
  4531  0624  0008               	return
  4532  0625                     i1l2024:	
  4533                           
  4534                           ;main.c: 143: if(ChargeStatus!=2){
  4535  0625  3002               	movlw	2
  4536  0626  0655               	xorwf	_ChargeStatus,w
  4537  0627  1903               	btfsc	3,2
  4538  0628  0008               	return
  4539                           
  4540                           ;main.c: 144: ChargeStatus=2;
  4541  0629  3002               	movlw	2
  4542  062A  00F0               	movwf	??i1_CheckStatus
  4543  062B  0870               	movf	??i1_CheckStatus,w
  4544  062C  00D5               	movwf	_ChargeStatus
  4545                           
  4546                           ;main.c: 145: }
  4547                           ;main.c: 146: }
  4548                           ;main.c: 147: }else{
  4549  062D  0008               	return
  4550  062E                     i1l2028:	
  4551                           
  4552                           ;main.c: 148: if(ChargeStatus!=1){
  4553  062E  0355               	decf	_ChargeStatus,w
  4554  062F  1903               	btfsc	3,2
  4555  0630  0008               	return
  4556                           
  4557                           ;main.c: 149: ChargeStatus=1;
  4558  0631  01D5               	clrf	_ChargeStatus
  4559  0632  0AD5               	incf	_ChargeStatus,f
  4560  0633  0008               	return
  4561  0634                     __end_ofi1_CheckStatus:	
  4562  007E                     btemp	set	126	;btemp
  4563  007E                     wtemp	set	126
  4564  007E                     wtemp0	set	126
  4565  0080                     wtemp1	set	128
  4566  0082                     wtemp2	set	130
  4567  0084                     wtemp3	set	132
  4568  0086                     wtemp4	set	134
  4569  0088                     wtemp5	set	136
  4570  007F                     wtemp6	set	127
  4571  007E                     ttemp	set	126
  4572  007E                     ttemp0	set	126
  4573  0081                     ttemp1	set	129
  4574  0084                     ttemp2	set	132
  4575  0087                     ttemp3	set	135
  4576  007F                     ttemp4	set	127
  4577  007E                     ltemp	set	126
  4578  007E                     ltemp0	set	126
  4579  0082                     ltemp1	set	130
  4580  0086                     ltemp2	set	134
  4581  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      63
    BANK1            32     10      10

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_SerialLED
    i1_StatusDisplayADC->i1_SerialLED
    i1___lwtoft->i1___ftpack
    i1___ftge->i1___lwtoft
    i1_SerialLED->i1_SendLED

Critical Paths under _main in BANK0

    _main->_Inject
    _StatusDisplay1->_SerialLED
    _StartStatus->_StatusDisplayADC
    _StatusDisplayADC->___ftge
    _Inject->___ftge
    ___lwtoft->___ftpack
    ___ftge->___lwtoft
    _StopBeep->_SerialLED
    _StartBeepLow->_SerialLED
    _StartBeepHigh->_SerialLED
    _SerialLED->_SendLED

Critical Paths under _isr in BANK0

    _isr->i1_StatusDisplayADC
    i1_StatusDisplayADC->i1___ftge

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    13      4   33427
                                             35 BANK0      6     2      4
                                              0 BANK1     10    10      0
                       _CheckVoltage
                             _Inject
                          _SerialLED
                      _StartBeepHigh
                       _StartBeepLow
                        _StartStatus
                     _StatusDisplay1
                           _StopBeep
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _StatusDisplay1                                       2     2      0    2597
                                             26 BANK0      2     2      0
                        _CheckStatus
                          _SerialLED
 ---------------------------------------------------------------------------------
 (1) _StartStatus                                          0     0      0    7896
                        _CheckStatus
                          _SerialLED
                   _StatusDisplayADC
 ---------------------------------------------------------------------------------
 (2) _StatusDisplayADC                                     1     1      0    5299
                                             33 BANK0      1     1      0
                _BatteryCheckVoltage
                          _SerialLED
                             ___ftge
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _CheckStatus                                          1     1      0       0
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Inject                                               2     2      0   10948
                                             33 BANK0      2     2      0
                          _B_LED_OFF
                           _B_LED_ON
                _BatteryCheckVoltage
                      _StartBeepHigh
                       _StartBeepLow
                           _StopBeep
                             ___ftge
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2114
                                             20 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1888
                                             12 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     588
                                             24 BANK0      9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _StopBeep                                             0     0      0    2597
                          _SerialLED
 ---------------------------------------------------------------------------------
 (1) _StartBeepLow                                         0     0      0    3052
                          _SerialLED
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2     455
                                             12 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _StartBeepHigh                                        1     1      0    2597
                                             26 BANK0      1     1      0
                          _SerialLED
 ---------------------------------------------------------------------------------
 (2) _SerialLED                                            5     3      2    2597
                                             21 BANK0      5     3      2
                            _SendLED
 ---------------------------------------------------------------------------------
 (3) _SendLED                                              9     7      2     634
                                             12 BANK0      9     7      2
                              _Data0
                              _Data1
 ---------------------------------------------------------------------------------
 (4) _Data1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Data0                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BatteryCheckVoltage                                 10     8      2       0
                                             12 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _B_LED_ON                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _B_LED_OFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckVoltage                                         8     8      0     133
                                             12 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0    2207
                                             10 BANK0      2     2      0
                      i1_CheckStatus
                        i1_SerialLED
                 i1_StatusDisplayADC
 ---------------------------------------------------------------------------------
 (7) i1_StatusDisplayADC                                   1     1      0    1415
                                              9 BANK0      1     1      0
              i1_BatteryCheckVoltage
                        i1_SerialLED
                           i1___ftge
                         i1___lwtoft
 ---------------------------------------------------------------------------------
 (8) i1___lwtoft                                           4     1      3     383
                                              8 COMMON     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (9) i1___ftpack                                           8     3      5     309
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (8) i1___ftge                                             9     3      6     240
                                              0 BANK0      9     3      6
                         i1___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (8) i1_SerialLED                                          5     3      2     792
                                              9 COMMON     5     3      2
                          i1_SendLED
 ---------------------------------------------------------------------------------
 (9) i1_SendLED                                            9     7      2     414
                                              0 COMMON     9     7      2
                            i1_Data0
                            i1_Data1
 ---------------------------------------------------------------------------------
 (10) i1_Data1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_Data0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_BatteryCheckVoltage                               10     8      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) i1_CheckStatus                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckVoltage
   _Inject
     _B_LED_OFF
     _B_LED_ON
     _BatteryCheckVoltage
     _StartBeepHigh
       _SerialLED
         _SendLED
           _Data0
           _Data1
     _StartBeepLow
       _SerialLED
         _SendLED
           _Data0
           _Data1
       _delay_ms
     _StopBeep
       _SerialLED
         _SendLED
           _Data0
           _Data1
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _SerialLED
     _SendLED
       _Data0
       _Data1
   _StartBeepHigh
     _SerialLED
       _SendLED
         _Data0
         _Data1
   _StartBeepLow
     _SerialLED
       _SendLED
         _Data0
         _Data1
     _delay_ms
   _StartStatus
     _CheckStatus
     _SerialLED
       _SendLED
         _Data0
         _Data1
     _StatusDisplayADC
       _BatteryCheckVoltage
       _SerialLED
         _SendLED
           _Data0
           _Data1
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
   _StatusDisplay1
     _CheckStatus
     _SerialLED
       _SendLED
         _Data0
         _Data1
   _StopBeep
     _SerialLED
       _SendLED
         _Data0
         _Data1
   _delay_ms

 _isr (ROOT)
   i1_CheckStatus
   i1_SerialLED
     i1_SendLED
       i1_Data0
       i1_Data1
   i1_StatusDisplayADC
     i1_BatteryCheckVoltage
     i1_SerialLED
       i1_SendLED
         i1_Data0
         i1_Data1
     i1___ftge
       i1___lwtoft (ARG)
         i1___ftpack
     i1___lwtoft
       i1___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      57       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     29      3F       6       78.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      A       A       8       31.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      57       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Aug 08 02:49:09 2015

                    __CFG_CP$ON 0000                               _B 0053                               _G 0056  
                             _R 0059                      i1___ftpack 0322                              _i1 004F  
                    i1___lwtoft 06B7                     __CFG_LVP$ON 0000                             l216 0120  
                           l145 016E                             l242 03CF                             l252 058F  
                           l246 0696                             l522 0303                             l523 030B  
                           l515 02F0                             _PR2 001B                    __CFG_CPD$OFF 0000  
                  i1___ftge@ff1 0020                    i1___ftge@ff2 0023                             _cnt 005B  
                           _isr 0004                      _BeepStatus 0054                    __CFG_BORV$LO 0000  
                           wreg 0009                    __CFG_IESO$ON 0000                     main@nSwStat 00A9  
                          l2302 01ED                            l2306 01F8                            l2314 020D  
                          l2330 02DC                            l2322 02C6                            l2316 0213  
                          l2308 01F9                            l2340 02F5                            l2420 05EB  
                          l2262 018B                            l2326 02CD                            l2328 02D7  
                          l2424 05F4                            l2520 0491                            l2282 01BC  
                          l2266 0196                            l2274 01AB                            l2338 0301  
                          l2434 03F5                            l2268 0197                            l2540 0649  
                          l2516 0484                            l2286 01C7                            l2294 01DC  
                          l2438 0414                            l2288 01C8                            l2392 04CF  
                          l2536 063F                            l2712 0124                            l2714 0128  
                          l2722 012E                            l2564 05B7                            l2388 04B9  
                          l2660 00C7                            l2558 05A9                            l2750 0163  
                          l2654 00B2                            l2646 00A1                            l2744 015E  
                          l2736 0145                            l2680 00E1                            l2664 00D1  
                          l2586 03B5                            l2674 00DD                            l2748 0162  
                          l2696 00FC                            ?_isr 0070                            _LATA 010C  
                          u2215 02D2                            _LATC 010E                            u2315 0659  
                          u2235 02EB                            u2255 02FC                            u2185 0178  
                          u2295 0312                            u2545 05A5                            u2555 05B3  
                          u2807 03AE                            u2727 00A6                            u2817 03B9  
                          u2737 00AE                            u2827 03C1                            u2747 00F5  
                          u2837 03CA                            u2757 0106                            u2847 065E  
                          u2767 010F                            u2857 051F                            u2777 0119  
                          u2867 052C                            u2787 0166                            u2877 054B  
                          u2797 0474                            u2887 0216                 ?_StatusDisplay1 0070  
               __end_ofi1_Data0 06EF                 __end_ofi1_Data1 06DD                            _fLED 005E  
                  main@bSwFixed 00A3                    __CFG_WRT$OFF 0000                   __CFG_FCMEN$ON 0000  
               ??_StartBeepHigh 003A                            _main 0052                    ___ftpack@arg 002C  
                  ___ftpack@exp 002F                    i1___lwtoft@c 0078                            fsr0h 0005  
                          fsr1h 0007                            fsr0l 0004                            indf0 0000  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
                          ltemp 007E                            start 0049                            ttemp 007E  
                          wtemp 007E              __size_of_B_LED_OFF 0003                 __end_of_SendLED 021A  
                         ??_isr 002A                   __CFG_PLLEN$ON 0000                __end_of_B_LED_ON 06F2  
                   _CheckStatus 05DD                           ?_main 0043                   __CFG_WDTE$OFF 0000  
                         _T1CON 0018                           i1l145 021C                           i1l260 0044  
                         i1l246 06A9                           i1l270 0045                           i1l522 0367  
                         i1l523 036F                           i1l515 0354                           _TMR1H 0017  
                         _TMR1L 0016                           _TRISA 008C                           _TRISC 008E  
                         _Data0 06E3                           _Data1 06C9                      SendLED@num 002C  
                         _MyCNT 004B                           _fDsky 005D                   ___ftpack@sign 0030  
            __size_ofi1_SendLED 00A3                __end_ofi1___ftge 051A                  __CFG_BOREN$OFF 0000  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
         __size_of_CheckVoltage 0033                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
                i1___ftpack@arg 0070                  i1___ftpack@exp 0073                  __CFG_MCLRE$OFF 0000  
               __initialization 004A                    __end_of_main 016B                     ?i1___ftpack 0070  
            CheckVoltage@thresh 002E                     ?i1___lwtoft 0078           __end_ofi1_CheckStatus 0634  
                        ??_main 0047                          ?_Data0 0070                          ?_Data1 0070  
             __end_of_B_LED_OFF 06F5                      SerialLED@b 0036                      SerialLED@g 0035  
                    SerialLED@r 0039                    _CheckVoltage 0586                       ??i1_Data0 0070  
                     ??i1_Data1 0070                __end_of_StopBeep 067D                          _ADCON0 009D  
                        _ADCON1 009E                          _ADRESH 009C                          _ADRESL 009B  
                        _CCPR1L 0291                          _ANSELA 018C                          _ANSELC 018E  
              __end_of___ftpack 0322                          i1l2024 0625                          i1l2042 045D  
                        i1l2028 062E                          i1l2038 043E                          i1l2214 0019  
                        i1l2234 0038                          i1l2218 0025                          i1l2242 0041  
                        i1l1700 0256                          i1l1712 0270                          i1l1720 0284  
                        i1l1714 0271                          i1l1732 029E                          i1l1740 02B2  
                        i1l1708 0266                          i1l1900 04F5                          i1l1742 02B7  
                        i1l1734 029F                          i1l1728 0294                          i1l1904 050B  
                        i1l1752 0331                          i1l1754 033B                          i1l1692 0242  
                        i1l1764 0365                          i1l1756 0340                          i1l1748 032A  
                        i1l1694 0243                          i1l1766 0359                          i1l1688 0238  
   __end_of_BatteryCheckVoltage 06A4                          u150_25 0360                          u143_25 0226  
                        u154_25 0376                          u146_25 0336                          u148_25 034F  
              __end_of___lwtoft 0691                          u290_27 0562                          u291_27 0580  
                        u292_27 02B9                          u289_27 0556                          _AdcRes 0049  
                   SendLED@comp 0033               ?_StatusDisplayADC 0070                    _ChargeStatus 0055  
              __end_of_delay_ms 0667                  __CFG_PWRTE$OFF 0000                       ??_SendLED 002E  
                        _Inject 0386                          _MyBuff 0058              ??_StatusDisplayADC 0041  
                main@bSwHolding 00A6                          _Status 005A                          ___ftge 04A2  
                __CFG_STVREN$ON 0000               __end_ofi1_SendLED 02BD              __size_of_SerialLED 0037  
         i1_BatteryCheckVoltage 06A4                    ?i1_SerialLED 0079             __size_ofi1___ftpack 0064  
       __end_of__initialization 0050     __size_ofi1_StatusDisplayADC 0048             __size_ofi1___lwtoft 0012  
                     ?_B_LED_ON 0070                      ___ftge@ff1 0038                      ___ftge@ff2 003B  
               i1___ftpack@sign 0074                   __end_of_Data0 06E9                   __end_of_Data1 06D3  
                __pcstackCOMMON 0070                   ??_StartStatus 0042                       ?i1___ftge 0020  
                    ___lwtoft@c 0034                         ??_Data0 002C                         ??_Data1 002C  
              ??_StatusDisplay1 003A                      __pbssBANK0 0049               __end_of_SerialLED 0551  
                    ??_B_LED_ON 002C                         ?_Inject 0070                      __pmaintext 0052  
                       ?___ftge 0038                      __pintentry 0004                       ?_StopBeep 0070  
                       _CCP1CON 0293                    _cntChargeNon 004D                    ?_CheckStatus 0070  
                     ?___ftpack 002C                      ??i1___ftge 0026                       ?___lwtoft 0034  
        ?i1_BatteryCheckVoltage 0070             __end_of_StartStatus 064F                       ?_delay_ms 002C  
                       i1_Data0 06E9                         i1_Data1 06D3                    SendLED@loop8 0031  
         __end_of_StartBeepHigh 0617                         _SendLED 016B                 __size_of_Inject 004B  
               __size_of___ftge 003C                    ??i1___ftpack 0075                      ??_StopBeep 003A  
                  ??i1___lwtoft 007B                      ??___ftpack 0031                         __ptext0 0000  
                       __ptext1 0462                         __ptext2 0634                         __ptext3 03D1  
                       __ptext4 05DD                         __ptext5 0386                         __ptext6 067D  
                       __ptext7 02BD                         __ptext8 04A2                         __ptext9 0667  
                    ??___lwtoft 0037                       _T1CONbits 0018                       _T2CONbits 001C  
                  __size_of_isr 0045                       _IOCAFbits 0393                      ??_delay_ms 002E  
                     _IOCANbits 0392                         clrloop0 06DE                       _B_LED_OFF 06F2  
          end_of_initialization 0050              __end_ofi1___ftpack 0386                  i1SendLED@loop8 0075  
          __size_ofi1_SerialLED 0035              __end_ofi1___lwtoft 06C9                   ?_StartBeepLow 0070  
                   _StartStatus 0634       __size_of_StatusDisplayADC 0049                       _PORTAbits 000C  
                     _PORTCbits 000E                       i1_SendLED 021A                __CFG_FOSC$INTOSC 0000  
                    ?_B_LED_OFF 0070                  SendLED@loopNum 002F                      main@checkv 00A4  
                   _CCP1CONbits 0293          __size_ofi1_CheckStatus 001D                  ??_StartBeepLow 003A  
             __size_of_B_LED_ON 0003    __size_of_BatteryCheckVoltage 0013                  __end_of_Inject 03D1  
                __end_of___ftge 04DE                _LastChargeStatus 0057                      ?i1_SendLED 0070  
          __size_of_CheckStatus 001D               __size_ofi1___ftge 003C             start_initialization 004A  
           main@nSwHoldingCount 00A0                     __end_of_isr 0049      __end_ofi1_StatusDisplayADC 0462  
          main@nBeepLengthCount 00A7                       _SerialLED 051A                        ??_Inject 0041  
                      ??___ftge 003E         ??i1_BatteryCheckVoltage 0072                   i1_CheckStatus 0617  
             __size_of_StopBeep 0016               __size_of___ftpack 0065                       ___latbits 0000  
             __size_of___lwtoft 0014                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
                      ?i1_Data0 0070                        ?i1_Data1 0070                     ??_B_LED_OFF 002C  
             __size_of_delay_ms 0018                        ?_SendLED 002C                      ?_SerialLED 0035  
                     _cntCharge 005C            main@nBeepRepeatCount 00A2                  ?i1_CheckStatus 0070  
              _StatusDisplayADC 03D1                     ??i1_SendLED 0072                  __size_of_Data0 0006  
                __size_of_Data1 000A            __end_of_StartBeepLow 05DD                   ?_CheckVoltage 0070  
                      _LATAbits 010C                        _LATCbits 010E                        _B_LED_ON 06EF  
       __size_of_StatusDisplay1 0040                       clear_ram0 06DD                   i1SendLED@comp 0077  
                      _PIE1bits 0091                        _PIR1bits 0011                    ?_StartStatus 0070  
                      i1___ftge 04DE                       main@bBeep 00A8                       main@bStay 00A5  
                ??_CheckVoltage 002C          __size_of_StartBeepHigh 001D             _BatteryCheckVoltage 0691  
               CheckVoltage@ad2 002C                __size_ofi1_Data0 0006                __size_ofi1_Data1 000A  
                  delay_ms@time 002C                   ??i1_SerialLED 007B                     ??_SerialLED 0037  
          ?_BatteryCheckVoltage 002C                __size_of_SendLED 00AF                 ??i1_CheckStatus 0070  
              i1SendLED@loopNum 0073                        _StopBeep 0667                        ___ftpack 02BD  
                      ___lwtoft 067D                        _delay_ms 064F                        _vBattery 0051  
                      __ptext10 05B9                        __ptext11 064F                        __ptext20 0586  
                      __ptext12 05FA                        __ptext13 051A                        __ptext30 06A4  
                      __ptext22 041A                        __ptext14 016B                        __ptext31 0617  
                      __ptext23 06B7                        __ptext15 06C9                        __ptext24 0322  
                      __ptext16 06E3                        __ptext25 04DE                        __ptext17 0691  
                      __ptext26 0551                        __ptext18 06EF                        __ptext27 021A  
                      __ptext19 06F2                        __ptext28 06D3                        __ptext29 06E9  
                 __size_of_main 0119           ??_BatteryCheckVoltage 002E             __end_ofi1_SerialLED 0586  
                 _StartBeepHigh 05FA                    i1SendLED@num 0070              i1_StatusDisplayADC 041A  
                      main@argc 0043                        main@argv 0045                   ??_CheckStatus 002C  
         __size_of_StartBeepLow 0024             ?i1_StatusDisplayADC 0070  __size_ofi1_BatteryCheckVoltage 0013  
 __end_ofi1_BatteryCheckVoltage 06B7                      _INTCONbits 000B                        intlevel1 0000  
          ??i1_StatusDisplayADC 0029        __end_of_StatusDisplayADC 041A                  _StatusDisplay1 0462  
             __CFG_CLKOUTEN$OFF 0000                  ?_StartBeepHigh 0070                      _OSCCONbits 0099  
                  i1SerialLED@b 007A                    i1SerialLED@g 0079                    _StartBeepLow 05B9  
                  i1SerialLED@r 007D            __end_of_CheckVoltage 05B9            __size_of_StartStatus 001B  
            main@nSwStableCount 00A1             __end_of_CheckStatus 05FA                     i1_SerialLED 0551  
        __end_of_StatusDisplay1 04A2  
